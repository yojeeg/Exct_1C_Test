Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

//Создает в таблице команд новую строку

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РаботаВВыходныеИПраздничныеДни");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Приказ на работу в выходные "); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Приказ на работу в выходные ");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Приказ на работу в выходные", "ПриказНаРаботуВВыходные", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("ПриказНаРаботуВВыходные");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказНаРаботуВВыходные") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПриказНаРаботуВВыходные", "Приказ на работу в выходные",	ПолучитьТабличныйДокументПриказа(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТабличныйДокументПриказа(Макет, МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	//Сотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
	//ДатаВыхода	= '00010101';
	
	Если ТипЗнч(МассивОбъектов) <> Тип("Массив") И МассивОбъектов.Количество() <> 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ОбъединенныеНачисления = МассивОбъектов[0].Сотрудники.Выгрузить();
	
	ОбъединенныеНачисления.Свернуть("Сотрудник,Дата", "ОтработаноЧасов");
	
	ЗаполнитьПодразделение(ОбъединенныеНачисления,МассивОбъектов[0].Дата);
	
	ШапкаДокумента = Макет.ПолучитьОбласть("Шапка");
	ШапкаДокумента.Параметры.Организация 		= МассивОбъектов[0].Организация.НаименованиеПолное;
	ШапкаДокумента.Параметры.ОКПО 				= МассивОбъектов[0].Организация.КодПоОКПО;
	ШапкаДокумента.Параметры.ДатаСоставления 	= Формат(МассивОбъектов[0].Дата, "ДЛФ=Д");
	ШапкаДокумента.Параметры.Номер 				= МассивОбъектов[0].Номер;
	ТабДокумент.Вывести(ШапкаДокумента);
	
	Для каждого стр из ОбъединенныеНачисления Цикл
		
		Сотрудник = стр.Сотрудник;
		ДатаВыхода = стр.Дата;
		
		СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");		
		СтрокаТаблицы.Параметры.ФИО 			= СокрЛП(стр.Сотрудник);
		СтрокаТаблицы.Параметры.Подразделение 	= стр.Подразделение;
		СтрокаТаблицы.Параметры.ДатаНач 		= Формат(стр.Дата, "ДЛФ=Д");
		СтрокаТаблицы.Параметры.колЧасов 		= стр.ОтработаноЧасов;
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;	
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	ОтветственныеЛицаОрганизации = ЗарплатаКадры.ОтветственныеЛицаОрганизации(МассивОбъектов[0].Организация,"Руководитель, ДолжностьРуководителя", МассивОбъектов[0].Дата);
	ЗапросФИО = Новый Запрос();
	ЗапросФИО.Текст = "ВЫБРАТЬ
	                  |	ФИОФизическихЛицСрезПоследних.Фамилия,
	                  |	ФИОФизическихЛицСрезПоследних.Имя,
	                  |	ФИОФизическихЛицСрезПоследних.Отчество
	                  |ИЗ
	                  |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&период, ФизическоеЛицо = &ФизическоеЛицо) КАК ФИОФизическихЛицСрезПоследних";
	ЗапросФИО.УстановитьПараметр("период",МассивОбъектов[0].Дата);				  
	ЗапросФИО.УстановитьПараметр("ФизическоеЛицо",ОтветственныеЛицаОрганизации.Руководитель);
	ВыборкаФИО = ЗапросФИО.Выполнить().Выбрать();
	
	Если ВыборкаФИО.Следующий() Тогда 
		ОтветственныеЛицаОрганизации.Руководитель = ВыборкаФИО.Фамилия + " "+Лев(ВыборкаФИО.Имя,1)+"." + Лев(ВыборкаФИО.Отчество,1)+".";
	КонецЕсли;	
	
	Подвал.Параметры.Должность = ОтветственныеЛицаОрганизации.ДолжностьРуководителя;
	Подвал.Параметры.ФИОРук = ОтветственныеЛицаОрганизации.Руководитель;
	ТабДокумент.Вывести(Подвал);
	
	ТабДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.АвтоМасштаб 		= Истина;
	ТабДокумент.ТолькоПросмотр 		= Истина;
	ТабДокумент.ОтображатьСетку 	= Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	Возврат ТабДокумент;
	
КонецФункции 

Процедура ЗаполнитьПодразделение(Таблица, Дата)
	
	МассивСотрудников = Таблица.ВыгрузитьКолонку("Сотрудник");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
	                      |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	                      |ИЗ
	                      |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, Сотрудник В (&Сотрудник)) КАК КадроваяИсторияСотрудниковСрезПоследних");
	Запрос.УстановитьПараметр("Дата",Дата);					  
	Запрос.УстановитьПараметр("Сотрудник",МассивСотрудников);				
	ТаблицаПодразделений = Запрос.Выполнить().Выгрузить();
	
	Таблица.Колонки.Добавить("Подразделение");
	
	Для Каждого Строка Из Таблица Цикл 
		СтрокаТаблицы = ТаблицаПодразделений.Найти(Строка.Сотрудник);
		Если СтрокаТаблицы<>Неопределено Тогда 
			Строка.Подразделение = СтрокаТаблицы.Подразделение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры