#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	Сообщить("Загрузка начата в "+ТекущаяДата());
	//Элементы.ГруппаОтображенияЗагрузки.Видимость = Истина;
	ВыполнитьЗагрузкуНаСервере();
	//Элементы.ГруппаОтображенияЗагрузки.Видимость = Ложь;
	Сообщить("Загрузка окончена в "+ТекущаяДата());
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ОрганичитьДату = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции // ОбъектОбработки()

&НаСервере
Процедура ВыполнитьЗагрузкуНаСервере()
	ОбъектОбработки().ВыполнитьЗагрузкуНачисленийИИнформацииПоАгентам();	
КонецПроцедуры // ВыполнитьЗагрузкуНаСервере()
#КонецОбласти 

#Область КорректировкаНомеровДоговоров
&НаСервере
Процедура ОткорректироватьНомераДоговоровНаСервере()
		
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорРаботыУслуги.Номер КАК Номер,
	               |	ДоговорРаботыУслуги.Ссылка КАК Ссылка,
	               |	ДоговорРаботыУслуги.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_ДОГОВОРА
	               |ИЗ
	               |	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
	               |ГДЕ
	               |	ДоговорРаботыУслуги.Проведен = ИСТИНА
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДОГОВОРА.Номер,
	               |	ВТ_ДОГОВОРА.Ссылка,
	               |	ВТ_ДОГОВОРА.Сотрудник,
	               |	Сотрудники.Код,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДОГОВОРА.Номер = Сотрудники.Код
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Равенство
	               |ПОМЕСТИТЬ ВТ_СООТВ
	               |ИЗ
	               |	ВТ_ДОГОВОРА КАК ВТ_ДОГОВОРА
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	               |		ПО ВТ_ДОГОВОРА.Сотрудник = Сотрудники.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СООТВ.Номер КАК НомерДоговора,
	               |	ВТ_СООТВ.Ссылка КАК Договор,
	               |	ВТ_СООТВ.Сотрудник,
	               |	ВТ_СООТВ.Код КАК КодСотрудника
	               |ИЗ
	               |	ВТ_СООТВ КАК ВТ_СООТВ
	               |ГДЕ
	               |	ВТ_СООТВ.Равенство = 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ДОГОВОРА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_СООТВ";
	Выборка = Запрос.Выполнить().Выбрать();				   
	Пока Выборка.Следующий() Цикл 
		КодСотрудника = Выборка.КодСотрудника;
		Если ОбъектОбработки().АгентОшибочный(КодСотрудника) Тогда 
			Продолжить;
		КонецЕсли;
		НомерДоговора 	= Выборка.НомерДоговора;
		Сотрудник 		= Выборка.Сотрудник;		
		Договор			= Выборка.Договор;
		Если НомерДоговора<>КодСотрудника Тогда 
			КорректировкаНомераДоговора(Договор, НомерДоговора, Сотрудник, КодСотрудника);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура КорректировкаНомераДоговора(Договор, НомерДоговора, Сотрудник, КодСотрудника)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорРаботыУслуги.Ссылка КАК Договор,
	               |	ДоговорРаботыУслуги.Номер КАК НомерДоговора,
	               |	ДоговорРаботыУслуги.Сотрудник КАК Сотрудник,
	               |	ДоговорРаботыУслуги.Сотрудник.Код КАК КодСотрудника
	               |ИЗ
	               |	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
	               |ГДЕ
	               |	ДоговорРаботыУслуги.Номер = &Номер
	               |	И ДоговорРаботыУслуги.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("Номер",КодСотрудника);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Договор1 		= Выборка.Договор;
		НомерДоговора1 	= Выборка.НомерДоговора;
		Сотрудник1		= Выборка.Сотрудник;
		КодСотрудника1 	= Выборка.КодСотрудника;
		Если СокрЛП(НомерДоговора1)<>СокрЛП(КодСотрудника1) Тогда 		
			КорректировкаНомераДоговора(Договор1, НомерДоговора1, Сотрудник1, КодСотрудника1);
		Иначе 
			Сообщить("Для сотрудника " + Сотрудник1 + " есть договор " + Договор1 + ". Их номера совпадают. Невозможно произвести перезапись договора " + Договор + " для сотрудника " + Сотрудник);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДоговорОбъект = Договор.ПолучитьОбъект();
	ДоговорОбъект.Номер = КодСотрудника;
	Попытка
		ДоговорОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить("Провести договор " + Договор+ " с новым номером " +КодСотрудника + " не удалось. Причина: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткорректироватьНомераДоговоров(Команда)
	ОткорректироватьНомераДоговоровНаСервере();
	Сообщить("Однозначность установлена");
КонецПроцедуры
#КонецОбласти

#Область УдалениеОшибокЗУП2_5
&НаСервере
Процедура УдалитьОшибочныеДоговора2_5НаСервере()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорРаботыУслуги.Ссылка,
	               |	ДоговорРаботыУслуги.Сотрудник.Код КАК СотрудникКод,
	               |	ДоговорРаботыУслуги.Номер
	               |ИЗ
	               |	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
	               |ГДЕ
	               |	ДоговорРаботыУслуги.ДатаНачала = ДАТАВРЕМЯ(2011, 1, 1)
	               |	И ДоговорРаботыУслуги.ДатаОкончания = ДАТАВРЕМЯ(2011, 1, 31)
	               |	И ДоговорРаботыУслуги.Комментарий ПОДОБНО ""Создан автоматически""
	               |	И ДоговорРаботыУслуги.Проведен = ИСТИНА";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Если Выборка.СотрудникКод =  Выборка.Номер Тогда 
			Сообщить("Договор " + Выборка.Ссылка + " не будет помечен на удаление, поскольку его номер " + Выборка.Номер +" совпадает с номером агента");
			Продолжить;
		КонецЕсли;
		Док = Выборка.Ссылка;
		ДокОбъект = Док.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОшибочныеДоговора2_5(Команда)
	УдалитьОшибочныеДоговора2_5НаСервере();
	Сообщить("Удаление ошибочных договоров миграции на ЗУП 2.5 выполено. Теперь необходимо удалить дубли договоров агентов.");
	Элементы.УдалитьДубли.Доступность = Истина;
КонецПроцедуры
#КонецОбласти

#Область УдалениеДублейДоговоров
&НаСервере
Процедура УдалитьДублиНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник,
	                      |	СУММА(1) КАК Количество
	                      |ПОМЕСТИТЬ ВТ_ДОГОВОРА
	                      |ИЗ
	                      |	РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	                      |ГДЕ
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДокументОснование ССЫЛКА Документ.ДоговорРаботыУслуги
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ДОГОВОРА.Сотрудник
	                      |ПОМЕСТИТЬ ВТ_СОТРУДНИКИ_С_ДУБЛЯМИ
	                      |ИЗ
	                      |	ВТ_ДОГОВОРА КАК ВТ_ДОГОВОРА
	                      |ГДЕ
	                      |	ВТ_ДОГОВОРА.Количество > 1
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник КАК Сотрудник,
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДокументОснование
	                      |ИЗ
	                      |	ВТ_СОТРУДНИКИ_С_ДУБЛЯМИ КАК ВТ_СОТРУДНИКИ_С_ДУБЛЯМИ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыДействияДоговоровГражданскоПравовогоХарактера КАК ПериодыДействияДоговоровГражданскоПравовогоХарактера
	                      |		ПО ВТ_СОТРУДНИКИ_С_ДУБЛЯМИ.Сотрудник = ПериодыДействияДоговоровГражданскоПравовогоХарактера.Сотрудник
	                      |ГДЕ
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДокументОснование ССЫЛКА Документ.ДоговорРаботыУслуги
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Сотрудник,
	                      |	ПериодыДействияДоговоровГражданскоПравовогоХарактера.ДатаОкончания
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ВТ_ДОГОВОРА
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ВТ_СОТРУДНИКИ_С_ДУБЛЯМИ");
	Выгрузка = Запрос.Выполнить().Выгрузить();
	МассивСотрудников = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Выгрузка.ВыгрузитьКолонку("Сотрудник"));
	
	Для Каждого Сотрудник из МассивСотрудников Цикл 
		
		НомерАгента = Сотрудник.Код;
		Попытка
			ПреобразованиеНомераВЧисло = Число(НомерАгента);
			Если СтрДлина(СокрЛП(НомерАгента))<=6  ИЛИ СокрЛП(НомерАгента) = "9999999" Тогда 
				Продолжить;
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки;				
							
		КопияТаблицы = Выгрузка.Скопировать(Новый Структура("Сотрудник",Сотрудник));
		НайденДоговорСНомером = Ложь;
		КоличествоСтрок = КопияТаблицы.Количество();
		Если КоличествоСтрок > 1 Тогда 
			Пока КоличествоСтрок>0 Цикл 
				ДокСсылка = КопияТаблицы[КоличествоСтрок - 1].ДокументОснование;
				Если СокрЛП(ДокСсылка.Номер) = СокрЛП(НомерАгента) И Не НайденДоговорСНомером Тогда 
					НайденДоговорСНомером = Истина;
					КоличествоСтрок = КоличествоСтрок - 1;
					Продолжить;
				КонецЕсли;
				
				Если Не НайденДоговорСНомером И КоличествоСтрок=1 Тогда 
					КоличествоСтрок = КоличествоСтрок - 1;
					Продолжить;
				КонецЕсли;
				ДокОбъект = ДокСсылка.ПолучитьОбъект();
				ДокОбъект.УстановитьПометкуУдаления(Истина);
				КоличествоСтрок = КоличествоСтрок - 1;
			КонецЦикла;				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДубли(Команда)
	УдалитьДублиНаСервере();
	Сообщить("Дубли договоров удалены. Теперь необходимо откорректировать номера договоров агентов.");
	Элементы.ОткорректироватьНомераДоговоров.Доступность = Истина;
КонецПроцедуры
#КонецОбласти

#Область ОчисткаНекоррктныхПаспортныхДанных
&НаСервере
Процедура ОчиститьПаспортныеДанныеНаСервере()
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументыФизическихЛиц.Физлицо КАК Физлицо,
	               |	ДокументыФизическихЛиц.ВидДокумента КАК ВидДокумента,
	               |	ДокументыФизическихЛиц.Серия КАК Серия,
	               |	ДокументыФизическихЛиц.Номер КАК Номер,
	               |	ДокументыФизическихЛиц.ДатаВыдачи КАК ДатаВыдачи,
	               |	ДокументыФизическихЛиц.КемВыдан КАК КемВыдан,
	               |	ДокументыФизическихЛиц.Период,
	               |	ДокументыФизическихЛиц.КодПодразделения,
	               |	ДокументыФизическихЛиц.СрокДействия
	               |ПОМЕСТИТЬ ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ
	               |ИЗ
	               |	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	               |ГДЕ
	               |	(ДокументыФизическихЛиц.Период = ДАТАВРЕМЯ(2013, 10, 31)
	               |			ИЛИ ДокументыФизическихЛиц.Период = ДАТАВРЕМЯ(2013, 10, 22))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДокументыФизическихЛиц.Период,
	               |	ДокументыФизическихЛиц.Физлицо,
	               |	ДокументыФизическихЛиц.ВидДокумента,
	               |	ДокументыФизическихЛиц.Серия,
	               |	ДокументыФизическихЛиц.Номер,
	               |	ДокументыФизическихЛиц.ДатаВыдачи,
	               |	ДокументыФизическихЛиц.СрокДействия,
	               |	ДокументыФизическихЛиц.КемВыдан,
	               |	ДокументыФизическихЛиц.КодПодразделения,
	               |	ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность,
	               |	ДокументыФизическихЛиц.Представление,
	               |	ДокументыФизическихЛиц.УдалитьВидДокумента
	               |ПОМЕСТИТЬ ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ
	               |ИЗ
	               |	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ КАК ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ
	               |		ПО ДокументыФизическихЛиц.Физлицо = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Физлицо
	               |			И ДокументыФизическихЛиц.ВидДокумента = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ВидДокумента
	               |			И ДокументыФизическихЛиц.Серия = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Серия
	               |			И ДокументыФизическихЛиц.Номер = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Номер
	               |			И ДокументыФизическихЛиц.ДатаВыдачи = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ДатаВыдачи
	               |			И ДокументыФизическихЛиц.КемВыдан = ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.КемВыдан
	               |ГДЕ
	               |	ДокументыФизическихЛиц.Физлицо В
	               |			(ВЫБРАТЬ
	               |				ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Физлицо
	               |			ИЗ
	               |				ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ КАК ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ)
	               |	И ДокументыФизическихЛиц.Период <> ДАТАВРЕМЯ(2013, 10, 31)
	               |	И ДокументыФизическихЛиц.Период <> ДАТАВРЕМЯ(2013, 10, 22)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Физлицо,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.КодПодразделения,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ВидДокумента,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Серия,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Номер,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ДатаВыдачи,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.КемВыдан,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Период,
	               |	ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.Период КАК Период1,
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.СрокДействия
	               |ПОМЕСТИТЬ ВТ_ТАБЛИЦА_НАЙДЕННЫХ
	               |ИЗ
	               |	ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ КАК ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ КАК ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ
	               |		ПО ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Физлицо = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.Физлицо
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ВидДокумента = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.ВидДокумента
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Серия = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.Серия
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Номер = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.Номер
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.ДатаВыдачи = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.ДатаВыдачи
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.КемВыдан = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.КемВыдан
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Период <> ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.Период
	               |			И ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.КодПодразделения = ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ.КодПодразделения
	               |ГДЕ
	               |	(ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Период = ДАТАВРЕМЯ(2013, 10, 31)
	               |			ИЛИ ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ.Период = ДАТАВРЕМЯ(2013, 10, 22))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Физлицо,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.КодПодразделения,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.ВидДокумента,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Серия,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Номер,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.ДатаВыдачи,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.КемВыдан,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Период,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Период1,
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ.СрокДействия
	               |ИЗ
	               |	ВТ_ТАБЛИЦА_НАЙДЕННЫХ КАК ВТ_ТАБЛИЦА_НАЙДЕННЫХ
	               |ГДЕ
	               |	ЕСТЬNULL(ВТ_ТАБЛИЦА_НАЙДЕННЫХ.Период1, 0) <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ДОКУМЕНТЫ_С_ОТБОРОМ_ПО_ДАТАМ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ТАБЛИЦА_ОТБОРА_ФИЗИКОВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ТАБЛИЦА_НАЙДЕННЫХ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизЛицо.Установить(Выборка.Физлицо);
		НаборЗаписей.Отбор.ВидДокумента.Установить(Выборка.ВидДокумента);
		НаборЗаписей.Прочитать();
		Для Каждого Запись из НаборЗаписей Цикл 
			Если Запись.период = Выборка.Период И
				Запись.Серия = Выборка.Серия И
				Запись.Номер = Выборка.номер И
				Запись.ДатаВыдачи = Выборка.ДатаВыдачи И
				Запись.СрокДействия = Выборка.СрокДействия И
				Запись.КемВыдан = Выборка.КемВыдан И
				Запись.КодПодразделения = Выборка.КодПодразделения
				Тогда 
				НаборЗаписей.Удалить(Запись);
				НаборЗаписей.Записать();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПаспортныеДанные(Команда)
	ОчиститьПаспортныеДанныеНаСервере();
	Сообщить("Паспортные данные очищены");
КонецПроцедуры
#КонецОбласти