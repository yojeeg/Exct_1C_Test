
Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

//Создает в таблице команд новую строку

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Справочник.Сотрудники");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Обложка для трудовой книжки "); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Обложка для трудовой книжки ");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Обложка для трудовой книжки", "Обложка", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("Обложка");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Обложка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"Обложка", "Обложка трудовой книжки",	ПолучитьТабличныйДокумент(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении"
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокумент(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	Выборка = КадровыйУчет.СформироватьЗапросДляТ1(МассивОбъектов).Выбрать();
	
	Обложка = Макет.ПолучитьОбласть("Обложка");	
		
	Если Выборка.Следующий() Тогда 
		Обложка.Параметры.Заполнить(Выборка);
		
		Подразделение = Выборка.Подразделение;
		
		ЗапросПоПодразделениям = Новый Запрос;
		ТекстЗапроса = "ВЫБРАТЬ
		|	ДополнительныеСведения.Объект КАК Объект,
		|	ДополнительныеСведения.Свойство КАК Свойство,
		|	ДополнительныеСведения.Значение КАК Значение,
		|	""1"" КАК УровеньВложенности
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект = &Ссылка
		|ОБЪЕДИНИТЬ ВСЕ                             	
		|ВЫБРАТЬ
		|	ДополнительныеСведения.Объект,
		|	ДополнительныеСведения.Свойство,
		|	ДополнительныеСведения.Значение,
		|	""2""
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект = &СсылкаРодитель
		
		|ОБЪЕДИНИТЬ ВСЕ
		
		|ВЫБРАТЬ
		|	ДополнительныеСведения.Объект,
		|	ДополнительныеСведения.Свойство,
		|	ДополнительныеСведения.Значение,
		|	""3""
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
		ЗапросПоПодразделениям.Текст = ТекстЗапроса;
		ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
		ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
		ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
		
		ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
		
		СтрокаПодразделения = "";
		МассивУровней = Новый Массив;
		МассивУровней.Добавить("1");
		МассивУровней.Добавить("2");
		МассивУровней.Добавить("3");
		Для Каждого УровеньВложенности из МассивУровней Цикл 
			Отбор = Новый Структура("УровеньВложенности",УровеньВложенности);
			ТаблицаСОтбором = ВыгрузкаПодразделений.Скопировать(Отбор);
			Если УровеньВложенности = "1" И ТаблицаСОтбором.Количество()=0 Тогда 
				СтрокаПодразделения = Подразделение;
				Прервать;
			КонецЕсли;
			
			Если УровеньВложенности = "1" Тогда 
				Для Каждого Строка из ТаблицаСОтбором Цикл 
					Если Строка.Свойство.Заголовок = "Винительный падеж" Тогда 
						СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
					КонецЕсли;
				КонецЦикла;
			Иначе 
				Для Каждого Строка из ТаблицаСОтбором Цикл 
					Если Строка.Свойство.Заголовок = "Родительный падеж" Тогда 
						СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;
		КонецЦикла;
		
		Обложка.Параметры.Подразделение = СтрокаПодразделения;
		
		ЗапросФИО = Новый Запрос();
		ЗапросФИО.Текст = "ВЫБРАТЬ
		                  |	ФИОФизическихЛицСрезПоследних.Фамилия,
		                  |	ФИОФизическихЛицСрезПоследних.Имя,
		                  |	ФИОФизическихЛицСрезПоследних.Отчество
		                  |ИЗ
		                  |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизическихЛицСрезПоследних";
		ЗапросФИО.УстановитьПараметр("ФизЛицо",МассивОбъектов[0].ФизическоеЛицо);						  
		ЗапросФИО.УстановитьПараметр("Дата",ТекущаяДата());						
		
		ВыборкаФИО = ЗапросФИО.Выполнить().Выбрать();
		
		Если ВыборкаФИО.Следующий() Тогда 
			Обложка.Параметры.Заполнить(ВыборкаФИО);
		КонецЕсли;

	КонецЕсли;
	
	ДокументРезультат.Вывести(Обложка);
	
	ДокументРезультат.ПолеСверху 	= 0;
	ДокументРезультат.ПолеСлева 	= 0;
	ДокументРезультат.ПолеСправа 	= 0;
	ДокументРезультат.ПолеСнизу 	= 0;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;	
	
	Возврат ДокументРезультат;
КонецФункции 


