///////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАСТРОЙКИ ПАРАМЕТРОВ
&НаКлиенте
Процедура Заполнить(Команда)
	Объект.СписокВедомостей.Очистить();
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	ЗапросПоВедомостям = Новый Запрос;
	ЗапросПоВедомостям.Текст = "ВЫБРАТЬ
	                           |	ВедомостьНаВыплатуЗарплатыВБанк.Ссылка КАК Ссылка,
	                           |	ВедомостьНаВыплатуЗарплатыВБанк.Комментарий КАК Комментарий,
	                           |	ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты КАК СпособВыплаты,
	                           |	ВедомостьНаВыплатуЗарплатыВБанк.ЗарплатныйПроект КАК ЗарплатныйПроект
	                           |ИЗ
	                           |	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьНаВыплатуЗарплатыВБанк
	                           |ГДЕ
	                           |	ВедомостьНаВыплатуЗарплатыВБанк.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	                           |	И ВедомостьНаВыплатуЗарплатыВБанк.Проведен = ИСТИНА
	                           |	И ВедомостьНаВыплатуЗарплатыВБанк.ЗарплатныйПроект = &ЗарплатныйПроект";


	ЗапросПоВедомостям.УстановитьПараметр("ЗарплатныйПроект",ЗарплатныйПроект);
	ЗапросПоВедомостям.УстановитьПараметр("ДатаНачала",НачалоДня(Период.ДатаНачала));  
	ЗапросПоВедомостям.УстановитьПараметр("ДатаОкончания",КонецДня(Период.ДатаОкончания));
	Если ЗначениеЗаполнено(СпособВыплаты) Тогда 
		ЗапросПоВедомостям.Текст = ЗапросПоВедомостям.Текст + " И ВедомостьНаВыплатуЗарплатыВБанк.СпособВыплаты = &СпособВыплаты";
		ЗапросПоВедомостям.УстановитьПараметр("СпособВыплаты",СпособВыплаты);
	КонецЕсли;
	ВыгрузкаПоВедомостям = ЗапросПоВедомостям.Выполнить().Выгрузить();
	Объект.СписокВедомостей.Загрузить(ВыгрузкаПоВедомостям);	
КонецПроцедуры
///////////////////////////////////////////

/////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫГРУЗКИ ДАННЫХ В ФАЙЛ
&НаСервере
Процедура ВыгрузитьВФайлНаСервере(АдресХранилища, ПолучаемыеФайлы,МассивДокументов, НомерФайла,УникальныйИдентификаторФормы)
	Объект1 = РеквизитФормыВЗначение("Объект");
	ТаблицаДокументов = Объект.СписокВедомостей.Выгрузить();
	МассивДокументов = ТаблицаДокументов.ВыгрузитьКолонку("Ссылка");
	МассивОписанийФайлов = Новый Массив;
	ФорматФайла = Объект.ФорматФайла;
	ПолучаемыеФайлы = Объект1.ВыгрузитьФайлыДляОбменаСБанком(ФорматФайла, МассивДокументов, АдресХранилища, НомерФайла,УникальныйИдентификаторФормы);	
	//Объект1.ВыгрузитьФайлыДляОбменаСБанком(ФорматФайла, МассивДокументов,МассивОписанийФайлов);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)	
	
	Если Не ЗначениеЗаполнено(Объект.ФорматФайла) Тогда 
		Сообщить("Выберите выгружаемый формат файла.");		
		Возврат;
	КонецЕсли;
	
	ТекстСостояния = НСтр("ru = 'Выполняется сохранение файлов.
	|Пожалуйста, подождите.'");
	Состояние(ТекстСостояния);
	
	ПолучаемыеФайлы =Неопределено;
	МассивДокументов = Новый Массив;
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);

	НомерФайла = Объект.НачальныйНомерФайла;
	УникальныйИдентификаторФормы = ЭтаФорма.УникальныйИдентификатор;
	
	Если Объект.ФорматФайла = "Райффайзен" Тогда  // для райфа выгрузка типовая
		ОбменСБанкамиПоЗарплатнымПроектамКлиент.ВыгрузитьФайлДляОбменаСБанком(ПолучитьСписокДокументовДляВыгрузки(), ЭтаФорма);
		Возврат;
	КонецЕсли; 
	
	Если Объект.ФорматФайла = "ПочтаРоссии" Тогда // Для почты выгрузка в DBF
		
		КаталогDBF = Неопределено;
		
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
		ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
		ДиалогОткрытия.Каталог = ""; 
		ДиалогОткрытия.МножественныйВыбор = Ложь; 
		ДиалогОткрытия.Заголовок = "Выберите каталог"; 
		
		Если ДиалогОткрытия.Выбрать() Тогда 
			КаталогDBF = ДиалогОткрытия.Каталог; 
		КонецЕсли;   
		
		Если КаталогDBF <> Неопределено Тогда 			
			
			ПутьКDBF = КаталогDBF + "\"+Формат(Период.ДатаОкончания,"ДФ=""ddMMyy""")+"sl.dbf";
			
			DBFДвоичный = Неопределено;
			
			ВыгрузитьПочтовыеПереводыВDBF(DBFДвоичный, ПолучитьСписокДокументовДляВыгрузки());
			
			DBFДвоичный.Записать(ПутьКDBF);
			
			
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВФайлНаСервере(АдресХранилища, ПолучаемыеФайлы,МассивДокументов, НомерФайла,УникальныйИдентификаторФормы);
	
	Если МассивДокументов.Количество() > 0 Тогда
		ОповеститьОбИзменении(ТипЗнч(МассивДокументов[0]));
	КонецЕсли;	
	
	ОповещениеВопроса = Новый ОписаниеОповещения("ВыгрузитьФайлДляОбменаСБанкомЗавершение", ЭтотОбъект, ПолучаемыеФайлы);
	ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОповещениеВопроса);
	
	Объект.НачальныйНомерФайла = НомерФайла;	
	
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещенияОЗакрытии)
	
	ОповещениеВопроса = Новый ОписаниеОповещения("ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ОписаниеОповещенияОЗакрытии);
	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОповещениеВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлДляОбменаСБанкомЗавершение(Результат, ПолучаемыеФайлы) Экспорт
	
	ОбменСБанкамиПоЗарплатнымПроектамКлиент.СохранитьФайлыДляОбменаСБанком(ПолучаемыеФайлы);
	
	//Если СтруктураОшибок.Количество() > 0 Тогда
	//	ОбменСБанкамиПоЗарплатнымПроектамВызовСервера.ЗаписатьОшибкиВЖурнал(СтруктураОшибок);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайламиЗавершение(Результат, ОповещениеОЗакрытии) Экспорт
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии);
	
КонецПроцедуры

Функция ПолучитьСписокДокументовДляВыгрузки()
	Возврат Объект.СписокВедомостей.Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

&НаСервере
Процедура ВыгрузитьПочтовыеПереводыВDBF(DBFДвоичный, МассивВедомостей)
		
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.КВыплате + ВедомостьНаВыплатуЗарплатыВБанкЗарплата.КомпенсацияЗаЗадержкуЗарплаты КАК Сумма,
	               |	ПРЕДСТАВЛЕНИЕ(ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник) КАК Сотрудник,
	               |	АдресПроживания.Счет КАК Счет,
	               |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка.СпособВыплаты КАК СпособВыплаты
	               |ПОМЕСТИТЬ ВТ_Предварительно
	               |ИЗ
	               |	Документ.ВедомостьНаВыплатуЗарплатыВБанк.Зарплата КАК ВедомостьНаВыплатуЗарплатыВБанкЗарплата
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК ФизЛицо,
	               |			ФизическиеЛицаКонтактнаяИнформация.Представление КАК Счет
	               |		ИЗ
	               |			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |		ГДЕ
	               |			ФизическиеЛицаКонтактнаяИнформация.Вид = &Вид) КАК АдресПроживания
	               |		ПО ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Сотрудник.ФизическоеЛицо = АдресПроживания.ФизЛицо
	               |ГДЕ
	               |	ВедомостьНаВыплатуЗарплатыВБанкЗарплата.Ссылка В(&Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Предварительно.Сумма) КАК Сумма,
	               |	ВТ_Предварительно.Сотрудник КАК Сотрудник,
	               |	ВТ_Предварительно.Счет КАК Счет,
	               |	ВТ_Предварительно.СпособВыплаты КАК СпособВыплаты
	               |ИЗ
	               |	ВТ_Предварительно КАК ВТ_Предварительно
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Предварительно.Сотрудник,
	               |	ВТ_Предварительно.Счет,
	               |	ВТ_Предварительно.СпособВыплаты
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник
	               |ИТОГИ ПО
	               |	СпособВыплаты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Предварительно";
	Запрос.УстановитьПараметр("Ссылка",МассивВедомостей);				   
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица);
	Запрос.УстановитьПараметр("СпособВыплаты",Справочники.СпособыВыплатыЗарплаты.Зарплата);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 
		ВременныйФайликDBF = ПолучитьИмяВременногоФайла("dbf");
		ВременныйФайликDBF = Лев(ВременныйФайликDBF,СтрНайти(ВременныйФайликDBF,"\", НаправлениеПоиска.СКонца)) + Прав(ВременныйФайликDBF,8);
		
		НоваяТаблица = Новый XBase;
		НоваяТаблица.Кодировка = КодировкаXBase.ANSI;			
		НоваяТаблица.Поля.Добавить("ADRES","S",250,);
		НоваяТаблица.Поля.Добавить("NAME","S",250,);
		НоваяТаблица.Поля.Добавить("SUMMA","N",15,2);
		НоваяТаблица.Поля.Добавить("ZIP","S",6,);
		НоваяТаблица.Поля.Добавить("DIVCODE","S",20,);
		НоваяТаблица.Поля.Добавить("COUNTRY","S",4,);
		НоваяТаблица.Поля.Добавить("MESSAGE","S",250,);
		НоваяТаблица.СоздатьФайл(ВременныйФайликDBF,);
		
		ВыборкаСпособВыплаты = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СпособВыплаты");
		Пока ВыборкаСпособВыплаты.Следующий() Цикл 
			
			Выборка = ВыборкаСпособВыплаты.Выбрать();
			
			Пока Выборка.Следующий() Цикл 
				
				Адрес = СокрЛП(СтрЗаменить(Выборка.Счет, "РОССИЯ,",""));
				
				НоваяТаблица.Добавить();
				НоваяТаблица.ADRES = 	СокрЛП(Прав(Адрес, СтрДлина(Адрес)-7));
				НоваяТаблица.NAME = 	СокрЛП(Выборка.Сотрудник);
				НоваяТаблица.SUMMA =	Выборка.Сумма; 
				НоваяТаблица.ZIP = 		Лев(Адрес, 6);		
				НоваяТаблица.COUNTRY = 	"643";
				НоваяТаблица.MESSAGE = 	ВыборкаСпособВыплаты.СпособВыплаты;
				НоваяТаблица.Записать();
				
			КонецЦикла;
			
		КонецЦикла;
		
		НоваяТаблица.ЗакрытьФайл();
		
		DBFДвоичный = Новый ДвоичныеДанные(ВременныйФайликDBF);
	
	КонецЕсли;	

КонецПроцедуры
/////////////////////////////////////////////

/////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ ФОРМЫ
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	Объект.НачальныйНомерФайла = 1;
	Период.Вариант = ВариантСтандартногоПериода.Сегодня;
	Период.ДатаНачала = НачалоДня(ТекущаяДата());
	Период.ДатаОкончания = КонецДня(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ФорматФайла = "ППФ";
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПочтовыеПереводы(Команда)
	МассивТабличныхДокументов = Новый Массив;	
	ПечатьПочтовыеПереводы_Сервер(МассивТабличныхДокументов);
	Для Каждого ТабДок Из МассивТабличныхДокументов Цикл 
		ТабДок.АвтоМасштаб = Истина;
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Показать();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПечатьПочтовыеПереводы_Сервер(МассивТабличныхДокументов)
	ПочтовыеПереводы = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоРеквизиту("ИмяОбъекта","ПочтовыеПереводы");
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанные = ПочтовыеПереводы.ХранилищеОбработки.Получить();
	ДвоичныеДанные.Записать(ИмяФайла);
	ПочтовыеПереводы = ВнешниеОбработки.Создать(ИмяФайла);

	МассивВедомостей = Объект.СписокВедомостей.Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбъектыПечати =Новый СписокЗначений;
	ОбъектыПечати.ЗагрузитьЗначения(МассивВедомостей);
	КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм("ПочтовыеПереводы");
	Для Каждого Ведомость Из МассивВедомостей Цикл  
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Ведомость);
		ПочтовыеПереводы.Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, Неопределено);	
		МассивТабличныхДокументов.Добавить(КоллекцияПечатныхФорм[0].ТабличныйДокумент);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСписокПеречислений(Команда)
	МассивТабличныхДокументов = Новый Массив;	
	ПечатьСписокПеречисленийНаСервере(МассивТабличныхДокументов);
	Для Каждого ТабДок Из МассивТабличныхДокументов Цикл 
		ТабДок.АвтоМасштаб = Истина;
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.Показать();
	КонецЦикла;   
КонецПроцедуры

&НаСервере
Процедура ПечатьСписокПеречисленийНаСервере(МассивТабличныхДокументов)
	МассивВедомостей = Объект.СписокВедомостей.Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбъектыПечати =Новый СписокЗначений;
	ОбъектыПечати.ЗагрузитьЗначения(МассивВедомостей);
	Для Каждого Ведомость Из МассивВедомостей Цикл   
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Ведомость);
		МассивТабличныхДокументов.Добавить(Документы.ВедомостьНаВыплатуЗарплатыВБанк.ПечатьСпискаПеречисленийПоДокументам(МассивОбъектов, ОбъектыПечати));
	КонецЦикла;
КонецПроцедуры

/////////////////////////////////////////////
