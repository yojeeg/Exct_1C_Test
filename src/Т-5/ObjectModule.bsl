Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

//Создает в таблице команд новую строку

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.КадровыйПеревод");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Приказ о переводе (Т-5) "); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Приказ о переводе (Т-5) ");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Приказ о переводе (Т-5)", "ПФ_MXL_Т5", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("ПФ_MXL_Т5");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Т5") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_Т5", "Приказ о переводе (Т-5)",	ПолучитьТабличныйДокументПриказаТ5(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении"
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаТ5(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПереводе";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаТ5(МассивОбъектов);	
	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати);
	
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Возврат ДокументРезультат;
КонецФункции 

Функция ПолучитьДанныеДляПечатиКадровогоПриказаТ5(МассивОбъектов)
	
	Выборка = КадровыйУчет.СформироватьЗапросДляТ5(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока  Выборка.Следующий() Цикл
		
		Параметры = ПолучитьСтруктуруПараметровПриказаТ5();		
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);
		
		Параметры.НомерДок = Выборка.НомерДок;
		
		РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 4, РезультатСклонения, Параметры.Пол) Тогда
			Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ЦелаяЧасть = Цел(Выборка.ТарифнаяСтавка);
		Параметры.ОкладТарифнаяСтавкаЦелаяЧасть = ЦелаяЧасть;
		ДробнаяЧасть = Выборка.ТарифнаяСтавка - ЦелаяЧасть;
		Параметры.ОкладТарифнаяСтавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
		
		// Подразделение
		Если Параметры.Свойство("Подразделение") Тогда 
			Подразделение = Параметры.Подразделение;
			
			ЗапросПоПодразделениям = Новый Запрос;
			ТекстЗапроса = "ВЫБРАТЬ
			|	ДополнительныеСведения.Объект КАК Объект,
			|	ДополнительныеСведения.Свойство КАК Свойство,
			|	ДополнительныеСведения.Значение КАК Значение,
			|	""1"" КАК УровеньВложенности
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &Ссылка
			|ОБЪЕДИНИТЬ ВСЕ                             	
			|ВЫБРАТЬ
			|	ДополнительныеСведения.Объект,
			|	ДополнительныеСведения.Свойство,
			|	ДополнительныеСведения.Значение,
			|	""2""
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &СсылкаРодитель
			
			|ОБЪЕДИНИТЬ ВСЕ
			
			|ВЫБРАТЬ
			|	ДополнительныеСведения.Объект,
			|	ДополнительныеСведения.Свойство,
			|	ДополнительныеСведения.Значение,
			|	""3""
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
			ЗапросПоПодразделениям.Текст = ТекстЗапроса;
			ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
			
			ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			
			СтрокаПодразделения = "";
			МассивУровней = Новый Массив;
			МассивУровней.Добавить("1");
			МассивУровней.Добавить("2");
			МассивУровней.Добавить("3");
			Для Каждого УровеньВложенности из МассивУровней Цикл 
				Отбор = Новый Структура("УровеньВложенности",УровеньВложенности);
				ТаблицаСОтбором = ВыгрузкаПодразделений.Скопировать(Отбор);
				Если УровеньВложенности = "1" И ТаблицаСОтбором.Количество()=0 Тогда 
					СтрокаПодразделения = Подразделение;
					Прервать;
				КонецЕсли;
				
				Если УровеньВложенности = "1" Тогда 
					Для Каждого Строка из ТаблицаСОтбором Цикл 
						Если Строка.Свойство.Заголовок = "Винительный падеж" Тогда 
							СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
						КонецЕсли;
					КонецЦикла;
				Иначе 
					Для Каждого Строка из ТаблицаСОтбором Цикл 
						Если Строка.Свойство.Заголовок = "Родительный падеж" Тогда 
							СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;
			
			Параметры.Подразделение = СокрЛП(СтрокаПодразделения);
			
		КонецЕсли;
		
		// Новое подразделение
		Если Параметры.Свойство("НовоеПодразделение") Тогда 
			Подразделение = Параметры.НовоеПодразделение;
			
			ЗапросПоПодразделениям = Новый Запрос;
			ТекстЗапроса = "ВЫБРАТЬ
			|	ДополнительныеСведения.Объект КАК Объект,
			|	ДополнительныеСведения.Свойство КАК Свойство,
			|	ДополнительныеСведения.Значение КАК Значение,
			|	""1"" КАК УровеньВложенности
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &Ссылка
			|ОБЪЕДИНИТЬ ВСЕ                             	
			|ВЫБРАТЬ
			|	ДополнительныеСведения.Объект,
			|	ДополнительныеСведения.Свойство,
			|	ДополнительныеСведения.Значение,
			|	""2""
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &СсылкаРодитель
			
			|ОБЪЕДИНИТЬ ВСЕ
			
			|ВЫБРАТЬ
			|	ДополнительныеСведения.Объект,
			|	ДополнительныеСведения.Свойство,
			|	ДополнительныеСведения.Значение,
			|	""3""
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
			|ГДЕ
			|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
			ЗапросПоПодразделениям.Текст = ТекстЗапроса;
			ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
			
			ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			
			СтрокаПодразделения = "";
			МассивУровней = Новый Массив;
			МассивУровней.Добавить("1");
			МассивУровней.Добавить("2");
			МассивУровней.Добавить("3");
			Для Каждого УровеньВложенности из МассивУровней Цикл 
				Отбор = Новый Структура("УровеньВложенности",УровеньВложенности);
				ТаблицаСОтбором = ВыгрузкаПодразделений.Скопировать(Отбор);
				Если УровеньВложенности = "1" И ТаблицаСОтбором.Количество()=0 Тогда 
					СтрокаПодразделения = Подразделение;
					Прервать;
				КонецЕсли;
				
				Если УровеньВложенности = "1" Тогда 
					Для Каждого Строка из ТаблицаСОтбором Цикл 
						Если Строка.Свойство.Заголовок = "Винительный падеж" Тогда 
							СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
						КонецЕсли;
					КонецЦикла;
				Иначе 
					Для Каждого Строка из ТаблицаСОтбором Цикл 
						Если Строка.Свойство.Заголовок = "Родительный падеж" Тогда 
							СтрокаПодразделения = СтрокаПодразделения + " " + Строка.Значение;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;
			
			Параметры.НовоеПодразделение = СокрЛП(СтрокаПодразделения);
			
		КонецЕсли;            		
		
		Сведения = "Руководитель,ДолжностьРуководителя";
		ОтветственныеЛица = СведенияОбОтветственныхЛицах.СведенияОбОтветственныхЛицах(Параметры.Ссылка.Организация, Сведения, Параметры.Ссылка.Дата);
		Параметры.ДолжностьРуководителя = ОтветственныеЛица.ДолжностьРуководителя;
		ЗапросФИОФизЛица = Новый Запрос();
		ЗапросФИОФизЛица.Текст = "ВЫБРАТЬ
		|	ФИОФизическихЛицСрезПоследних.Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &ФизическоеЛицо) КАК ФИОФизическихЛицСрезПоследних";
		ЗапросФИОФизЛица.УстановитьПараметр("Период",Параметры.Ссылка.Дата);
		ЗапросФИОФизЛица.УстановитьПараметр("ФизическоеЛицо",ОтветственныеЛица.Руководитель);
		
		ВыборкаФИОФизЛица = ЗапросФИОФизЛица.Выполнить().Выбрать();
		
		Если ВыборкаФИОФизЛица.Следующий() Тогда 
			Параметры.РуководительРасшифровкаПодписи = Лев(ВыборкаФИОФизЛица.Имя,1) +"." + Лев(ВыборкаФИОФизЛица.Отчество,1) +". " + ВыборкаФИОФизЛица.Фамилия;
		КонецЕсли;
		
		РК=0;
		СН=0;
		РК = ПолучитьНадбавку(Выборка.Сотрудник, Справочники.ПоказателиРасчетаЗарплаты.РайонныйКоэффициент);
		Если РК<>0 Тогда 
			РК = (РК - 1)*100;
		КонецЕсли;
		СН = ПолучитьНадбавку(Выборка.Сотрудник, Справочники.ПоказателиРасчетаЗарплаты.СевернаяНадбавка, Параметры.Ссылка.Дата);		
		Параметры.РК = РК;
		Параметры.СН = СН;
		
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	

Функция ПолучитьНадбавку(Сотрудник, ВидНадбавки, Дата = Неопределено)
	
	
	// Проверим, используется ли вообще такая надбавка
	ЗапросПоНачислениям = Новый Запрос;
	ЗапросПоНачислениям.Текст = "ВЫБРАТЬ
	                            |	ПлановыеНачисленияСрезПоследних.Размер,
	                            |	ПлановыеНачисленияСрезПоследних.Используется
	                            |ИЗ
	                            |	РегистрСведений.ПлановыеНачисления.СрезПоследних КАК ПлановыеНачисленияСрезПоследних
	                            |ГДЕ
	                            |	ПлановыеНачисленияСрезПоследних.Начисление = &Начисление
	                            |	И ПлановыеНачисленияСрезПоследних.Сотрудник = &Сотрудник";
	ЗапросПоНачислениям.УстановитьПараметр("Сотрудник",Сотрудник);								
	ЗапросПоНачислениям.УстановитьПараметр("Начисление", ?(ВидНадбавки = Справочники.ПоказателиРасчетаЗарплаты.РайонныйКоэффициент, ПланыВидовРасчета.Начисления.НайтиПоКоду("РК"), ПланыВидовРасчета.Начисления.НайтиПоКоду("СН")));
	РезультатПоНачислениям = ЗапросПоНачислениям.Выполнить();
	Если Не РезультатПоНачислениям.Пустой() Тогда 
		Выборка = РезультатПоНачислениям.Выбрать();
		Выборка.Следующий();
		Если Не Выборка.Используется Тогда 
			Возврат 0;
		КонецЕсли;
	КонецЕсли;	
	
	ЗапросПоНадбавкам = Новый Запрос;
	ЗапросПоНадбавкам.Текст = "ВЫБРАТЬ
	                          |	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Значение
	                          |ИЗ
	                          |	РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.СрезПоследних КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних
	                          |ГДЕ
	                          |	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник
	                          |	И ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Показатель = &Показатель";
	
	ЗапросПоНадбавкам.УстановитьПараметр("Сотрудник",Сотрудник);							  
	ЗапросПоНадбавкам.УстановитьПараметр("Показатель",ВидНадбавки);
	Выборка = ЗапросПоНадбавкам.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Значение;
	Иначе 
		Если ВидНадбавки.Наименование = "Северная надбавка" Тогда 
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПроцентыСевернойНадбавкиФизическихЛицСрезПоследних.ПроцентСевернойНадбавки КАК ПроцентСевернойНадбавки
			|ИЗ
			|	РегистрСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СрезПоследних(&Дата, ) КАК ПроцентыСевернойНадбавкиФизическихЛицСрезПоследних
			|ГДЕ
			|	ПроцентыСевернойНадбавкиФизическихЛицСрезПоследних.ФизическоеЛицо = &ФизическоеЛицо";
			Запрос.УстановитьПараметр("ФизическоеЛицо", Сотрудник.ФизическоеЛицо); 
			Запрос.УстановитьПараметр("Дата", ?(Дата=Неопределено,Дата(3999,1,1),Дата));
			
			Результат = Запрос.Выполнить();
			
			Если Не Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					Возврат Выборка.ПроцентСевернойНадбавки;
				Иначе
					Возврат 0;
				КонецЕсли; 
			Иначе 
				Возврат 0;
			КонецЕсли;
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
КонецФункции  

Процедура ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ТабличныйДокумент, МассивДанныхЗаполнения, ОбъектыПечати)
	
	Если Макет <> Неопределено Тогда
		
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета из МассивДанныхЗаполнения Цикл
			Если Не ПервыйПриказ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Макет.Параметры.Заполнить(ПараметрыМакета);
			ТабличныйДокумент.Вывести(Макет);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ПараметрыМакета.Ссылка);	
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьСтруктуруПараметровПриказаТ5()
	
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("ДатаНачала");
	Параметры.Вставить("ДатаОкончания");
	Параметры.Вставить("ВидПеревода");
	Параметры.Вставить("Подразделение");
	Параметры.Вставить("Должность");
	Параметры.Вставить("НовоеПодразделение");
	Параметры.Вставить("НоваяДолжность");
	Параметры.Вставить("НовыйРазрядКатегория");
	Параметры.Вставить("ОкладТарифнаяСтавкаЦелаяЧасть");
	Параметры.Вставить("ОкладТарифнаяСтавкаДробнаяЧасть");
	Параметры.Вставить("ВалютаТарифнойСтавки", "руб.");
	Параметры.Вставить("КопейкиТарифнойСтавки", "коп.");
	Параметры.Вставить("РК", 0);
	Параметры.Вставить("СН", 0);
	//Параметры.Вставить("Надбавка", 0);
	Параметры.Вставить("ОснованиеПеревода");
	Параметры.Вставить("ПричинаПеревода");

	Возврат Параметры;
	
КонецФункции
