/////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ КЛИЕНТ
/////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнициализацияНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ИнициализацияНаКлиенте()
	
	Элементы.СЗВ_М.Видимость 	= Ложь;
	Элементы.П4.Видимость 		= Ложь;
	Элементы.ДСВ3.Видимость 	= Ложь;
	Элементы._6НДФЛ.Видимость 	= Ложь;
	Элементы._4ФСС.Видимость 	= Ложь;
	Элементы.РСВ.Видимость 		= Ложь;
	Элементы.СЗВ_СТАЖ.Видимость = Ложь;
	Элементы._2НДФЛ.Видимость 	= Ложь;
	
	Если ПустаяСтрока(ВидПериода) Тогда
		ВидПериода = "Месяц";
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПрошлыйМесяц;
		ТекущийПериод.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
		ТекущийПериод.ДатаОкончания = КонецМесяца(НачалоМесяца(ТекущаяДата())-1);
	КонецЕсли;
	
	Если ВидПериода = "Месяц" Тогда 
		
		Элементы.СЗВ_М.Видимость 	= Истина;
		Элементы.П4.Видимость 		= Истина;
		
	КонецЕсли;
	
	Если ВидПериода = "Квартал" Тогда 
		
		Элементы.ДСВ3.Видимость 	= Истина;
		Если Месяц(ТекущийПериод.ДатаНачала) = 1 Тогда 
			Элементы._6НДФЛ.Видимость 	= Истина;
			Элементы._4ФСС.Видимость 	= Истина;
			Элементы.РСВ.Видимость 		= Истина;			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ВидПериода = "Полугодие" Тогда 
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;
		
	КонецЕсли;
	
	Если ВидПериода = "9Месяцев" Тогда 
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;
		
	КонецЕсли;
	
	Если ВидПериода = "Год" Тогда 
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;
		Элементы.СЗВ_СТАЖ.Видимость = Истина;
		Элементы._2НДФЛ.Видимость 	= Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	ИнициализацияНаКлиенте();
	
	Если ВидПериода = "Месяц" И (СтрНайти(ТекущийПериод.Вариант, "Месяц") = 0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "месяц") = 0) Тогда 
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПрошлыйМесяц;
		ТекущийПериод.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
		ТекущийПериод.ДатаОкончания = КонецМесяца(НачалоМесяца(ТекущаяДата())-1);
		
		Элементы.СЗВ_М.Видимость 	= Истина;
		Элементы.П4.Видимость 		= Истина;

	КонецЕсли;
	
	Если ВидПериода = "Квартал" И (СтрНайти(ТекущийПериод.Вариант, "Квартал") = 0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "квартал") = 0) Тогда 
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПрошлыйКвартал;
		ТекущийПериод.ДатаНачала = НачалоКвартала(НачалоКвартала(ТекущаяДата())-1);
		ТекущийПериод.ДатаОкончания = КонецКвартала(НачалоКвартала(ТекущаяДата())-1);
		
		Элементы.ДСВ3.Видимость 	= Истина;
		Если Месяц(ТекущийПериод.ДатаНачала) = 1 Тогда 
			Элементы._6НДФЛ.Видимость 	= Истина;
			Элементы._4ФСС.Видимость 	= Истина;
			Элементы.РСВ.Видимость 		= Истина;			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ВидПериода = "Полугодие" И (СтрНайти(ТекущийПериод.Вариант, "Полугодие") = 0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "полугодие") = 0) Тогда 
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПрошлоеПолугодие;
		ТекущийПериод.ДатаНачала = НачалоГода(ТекущаяДата());
		ТекущийПериод.ДатаОкончания = Дата(Год(ТекущаяДата()), 6, 30);
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;

	КонецЕсли;
	
	Если ВидПериода = "9Месяцев" Тогда 
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		ТекущийПериод.ДатаНачала = НачалоГода(ТекущаяДата());
		ТекущийПериод.ДатаОкончания = Дата(Год(ТекущаяДата()), 9, 30);		
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;

	КонецЕсли;
	
	Если ВидПериода = "Год" И (СтрНайти(ТекущийПериод.Вариант, "Год") = 0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "год") = 0) Тогда 
		ТекущийПериод.Вариант = ВариантСтандартногоПериода.ПрошлыйГод;
		ТекущийПериод.ДатаНачала = НачалоГода(НачалоГода(ТекущаяДата())-1);
		ТекущийПериод.ДатаОкончания = КонецГода(НачалоГода(ТекущаяДата())-1);
		
		Элементы._6НДФЛ.Видимость 	= Истина;
		Элементы._4ФСС.Видимость 	= Истина;
		Элементы.РСВ.Видимость 		= Истина;
		Элементы.СЗВ_СТАЖ.Видимость = Истина;
		Элементы._2НДФЛ.Видимость 	= Истина;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТекущийПериодПриИзменении(Элемент)
	
	Если СтрНайти(ТекущийПериод.Вариант, "месяц")<>0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "месяц")<>0 И ВидПериода<>"Месяц" Тогда 
		ВидПериода = "Месяц";
	КонецЕсли;
	
	Если СтрНайти(ТекущийПериод.Вариант, "квартал")<>0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "Квартал")<>0 И ВидПериода<>"Квартал" Тогда 
		ВидПериода = "Квартал";
	КонецЕсли;
	
	Если СтрНайти(ТекущийПериод.Вариант, "год")<>0 ИЛИ СтрНайти(ТекущийПериод.Вариант, "Год")<>0 И ВидПериода<>"Год" Тогда 
		ВидПериода = "Год";
	КонецЕсли;
	
	ИнициализацияНаКлиенте();
		
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ПроверитьНаСервере();
	ПерекраситьСтрочкиРезультата();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРезультатПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если ТипЗнч(Элемент) = Тип("ТаблицаФормы") И ТипЗнч(Элемент.ТекущийЭлемент) = Тип("ПолеФормы") 
		И Элемент.ТекущийЭлемент.Заголовок = "Отчёт" 
		И ТипЗнч(Элемент.ТекущиеДанные) = Тип("ДанныеФормыЭлементКоллекции")
		И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Ссылка) Тогда 
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

/////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ СЕРВЕР
/////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПроверитьНаСервере()
	
	ТаблицаРезультат2НДФЛ.Очистить();
	ТаблицаРезультат4ФСС.Очистить();
	ТаблицаРезультат6НДФЛ.Очистить();
	ТаблицаРезультатДСВ_3.Очистить();
	ТаблицаРезультатП_4.Очистить();
	ТаблицаРезультатРСВ.Очистить();
	ТаблицаРезультатСЗВ_М.Очистить();
	ТаблицаРезультатСЗВ_СТАЖ.Очистить();
	
	Если ВидПериода = "Месяц" Тогда
				
		// СЗВ-М
		НаименованиеОтчета = "Сведения о застрахованных лицах, СЗВ-М";
		КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаНачала)));
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
		               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
		               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
		               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
		               |ИЗ
		               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
		               |ГДЕ
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
		               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
		               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
		               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
		               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
		               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаНачала)));
		Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			НоваяСтрока = ТаблицаРезультатСЗВ_М.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаНачала)));
		Иначе 
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() Тогда 
				НоваяСтрока = ТаблицаРезультатСЗВ_М.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);				
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
			КонецЕсли;
		КонецЕсли;
		
		// П-4
		НаименованиеОтчета = "Статистика: Форма П-4";
		КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаНачала)));
		
		// Подготовим таблицу обособленных подразделений для проверки		
		ПодразделенияИсключения = Новый Массив;
		ПодразделенияИсключения.Добавить(Справочники.ПодразделенияОрганизаций.НайтиПоКоду("507")); //Агентство №3 в городе Москва - входит в отчетность по ЦО
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ПодразделенияОрганизаций.НомерТерриториальногоОрганаРосстата КАК НомерТерриториальногоОрганаРосстата,
		               |	ПодразделенияОрганизаций.Ссылка КАК Подразделение
		               |ИЗ
		               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		               |ГДЕ
		               |	ПодразделенияОрганизаций.ОбособленноеПодразделение
		               |	И ПодразделенияОрганизаций.Сформировано
		               |	И (ПодразделенияОрганизаций.ДатаРасформирования = ДАТАВРЕМЯ(1, 1, 1)
		               |			ИЛИ ПодразделенияОрганизаций.ДатаРасформирования > &ДатаОкончания)
		               |	И ПодразделенияОрганизаций.ДатаСоздания < &ДатаОкончания
		               |	И НЕ ПодразделенияОрганизаций.Ссылка В (&ПодразделенияИсключения)
		               |	И НЕ ПодразделенияОрганизаций.ПометкаУдаления";
		Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ПодразделенияИсключения",ПодразделенияИсключения);
		ТаблицаОбособленныхПодразделений = Запрос.Выполнить().Выгрузить();
		
		МассивКодПодразделенияФСГС_8_14 = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаОбособленныхПодразделений.ВыгрузитьКолонку("НомерТерриториальногоОрганаРосстата"));		
		КодРосстатОрганизации = Справочники.Организации.ОрганизацияПоУмолчанию().КодОрганаФСГС;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
		               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
		               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
		               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
		               |ИЗ
		               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
		               |ГДЕ
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
		               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
		               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
		               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
		               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
		               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаНачала)));
		Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
						
			НоваяСтрока = ТаблицаРезультатП_4.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Подразделение = "ЦО";
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КодКонтролирующегоОргана = КодРосстатОрганизации;
			НоваяСтрока.КрайнийСрок = КрайнийСрок; 
			
			Для Каждого НомерТерриториальногоОрганаРосстата Из МассивКодПодразделенияФСГС_8_14 Цикл 
				НоваяСтрока = ТаблицаРезультатП_4.Добавить();
				НоваяСтрока.Отчёт = НаименованиеОтчета;
				НоваяСтрока.КодКонтролирующегоОргана = НомерТерриториальногоОрганаРосстата;
				НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, НомерТерриториальногоОрганаРосстата, "НомерТерриториальногоОрганаРосстата");
				НоваяСтрока.Статус = "Отсутствует";
				НоваяСтрока.КрайнийСрок = КрайнийСрок; 
			КонецЦикла;
		Иначе 
			
			ТаблицаОтчетовП4 = Запрос.Выполнить().Выгрузить();
			ТаблицаОтчетовП4.Колонки.Добавить("КодПодразделенияФСГС_8_14");
			Для Каждого СтрокаОтчетаП4 Из ТаблицаОтчетовП4 Цикл 
				ОтчетП4 = СтрокаОтчетаП4.Ссылка;
				ДанныеОтчета = ОтчетП4.ДанныеОтчета.Получить();
				
				Если ТипЗнч(ДанныеОтчета) = Тип("Структура") Тогда 
					Если ДанныеОтчета.ИсключитьДанныеОбособленныхПодразделений Тогда 
						СтрокаОтчетаП4.КодПодразделенияФСГС_8_14 = КодРосстатОрганизации;
					Иначе 
						СтрокаОтчетаП4.КодПодразделенияФСГС_8_14 = ДанныеОтчета.КодПодразделенияФСГС_8_14;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого НомерТерриториальногоОрганаРосстата ИЗ МассивКодПодразделенияФСГС_8_14 Цикл 
				Если ПустаяСтрока(НомерТерриториальногоОрганаРосстата) Тогда 
					Продолжить;
				КонецЕсли;
				НайденныеСтроки = ТаблицаОтчетовП4.НайтиСтроки(Новый Структура("КодПодразделенияФСГС_8_14", НомерТерриториальногоОрганаРосстата));
				Если НайденныеСтроки.Количество() = 0 Тогда 
					НоваяСтрока = ТаблицаРезультатП_4.Добавить();
					НоваяСтрока.Отчёт = НаименованиеОтчета;
					НоваяСтрока.КодКонтролирующегоОргана = НомерТерриториальногоОрганаРосстата;
					НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, НомерТерриториальногоОрганаРосстата, "НомерТерриториальногоОрганаРосстата");
					НоваяСтрока.Статус = "Отсутствует";
					НоваяСтрока.КрайнийСрок = КрайнийСрок;
				КонецЕсли;
			КонецЦикла;
			
			Если ТаблицаОтчетовП4.НайтиСтроки(Новый Структура("КодПодразделенияФСГС_8_14",КодРосстатОрганизации)).Количество()=0 Тогда 					
				НоваяСтрока = ТаблицаРезультатП_4.Добавить();
				НоваяСтрока.Отчёт = НаименованиеОтчета;
				НоваяСтрока.Подразделение = "ЦО";
				НоваяСтрока.КодКонтролирующегоОргана = КодРосстатОрганизации;
				НоваяСтрока.Статус = "Отсутствует";
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
			КонецЕсли;
			           			
			Для Каждого СтрокаОтчетаП4 Из ТаблицаОтчетовП4 Цикл 
				НоваяСтрока = ТаблицаРезультатП_4.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтчетаП4);
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
				НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, СтрокаОтчетаП4.КодПодразделенияФСГС_8_14, "НомерТерриториальногоОрганаРосстата");
				НоваяСтрока.КодКонтролирующегоОргана = СтрокаОтчетаП4.КодПодразделенияФСГС_8_14;
			КонецЦикла;
			
		КонецЕсли;    	
		
	ИначеЕсли ВидПериода = "Квартал" Тогда 
		
		//Реестр ДСВ-3
		НаименованиеОтчета = "Реестр ДСВ-3";
		КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
		               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
		               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
		               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
		               |ИЗ
		               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
		               |ГДЕ
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
		               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
		               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
		               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
		               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
		               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			НоваяСтрока = ТаблицаРезультатДСВ_3.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		Иначе 
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() Тогда 
				НоваяСтрока = ТаблицаРезультатДСВ_3.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);				
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
			КонецЕсли;
		КонецЕсли;
		
		// Для 4-ФСС, РСВ и 6-НДФЛ только I квартал
		Если ТекущийПериод.ДатаНачала = НачалоГода(ТекущийПериод.ДатаНачала) Тогда
			
			ПроверитьНаборЕжеквартальныхОтчетов();			
			
		КонецЕсли;
		
	ИначеЕсли ВидПериода = "Полугодие" ИЛИ  ВидПериода = "9Месяцев" Тогда 
		
		ПроверитьНаборЕжеквартальныхОтчетов();		 		
		
	ИначеЕсли ВидПериода = "Год" Тогда 
		
		// Сведения о страховом стаже застрахованных лиц, СЗВ-СТАЖ
		НаименованиеОтчета = "Сведения о страховом стаже застрахованных лиц, СЗВ-СТАЖ";		
		КомментарийИсключение = "%Уволенный%";
		КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
		               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
		               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
		               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
		               |ИЗ
		               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
		               |ГДЕ
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
		               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
		               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
		               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
		               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
		               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления
		               |	И НЕ ЖурналОтчетовСтатусы.Комментарий ПОДОБНО &КомментарийИсключение
		               |	И ЖурналОтчетовСтатусы.Статус <> ""Подготовлено""";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
		Запрос.УстановитьПараметр("КомментарийИсключение",КомментарийИСключение);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			НоваяСтрока = ТаблицаРезультатСЗВ_СТАЖ.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		Иначе 
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() Тогда 
				НоваяСтрока = ТаблицаРезультатСЗВ_СТАЖ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);				
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
			КонецЕсли;
		КонецЕсли;	
		
		// 2-НДФЛ для передачи в ИФНС
		НаименованиеОтчета = "2-НДФЛ для передачи в ИФНС";
		КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ПодразделенияОрганизаций.Ссылка КАК Подразделение,
		               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.Код КАК РегистрацияВНалоговомОрганеКод
		               |ИЗ
		               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаОкончания, ) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
		               |		ПО ПодразделенияОрганизаций.Ссылка = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
		               |ГДЕ
		               |	ПодразделенияОрганизаций.ОбособленноеПодразделение
		               |	И ПодразделенияОрганизаций.Сформировано
		               |	И (ПодразделенияОрганизаций.ДатаРасформирования = ДАТАВРЕМЯ(1, 1, 1)
		               |			ИЛИ ПодразделенияОрганизаций.ДатаРасформирования > &ДатаОкончания)
		               |	И ПодразделенияОрганизаций.ДатаСоздания < &ДатаОкончания
		               |	И НЕ ПодразделенияОрганизаций.ПометкаУдаления
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница,
		               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане,
		               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.Код
		               |ИЗ
		               |	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаОкончания, СтруктурнаяЕдиница = &Орагнизация) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
		Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущийПериод.ДатаОкончания));
		Запрос.УстановитьПараметр("Орагнизация", Справочники.Организации.ОрганизацияПоУмолчанию());
		ТаблицаОбособленныхПодразделений = Запрос.Выполнить().Выгрузить();		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
		               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
		               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
		               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана,
		               |	СправкиНДФЛДляПередачиВНалоговыйОрган.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		               |ИЗ
		               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган КАК СправкиНДФЛДляПередачиВНалоговыйОрган
		               |		ПО ЖурналОтчетовСтатусы.Ссылка = СправкиНДФЛДляПередачиВНалоговыйОрган.Ссылка
		               |ГДЕ
		               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
		               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
		               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
		               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
		               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
		               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
		Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда 
			
			Для Каждого СтрокаНалоговыхОрганов Из ТаблицаОбособленныхПодразделений Цикл 
				
				НоваяСтрока = ТаблицаРезультат2НДФЛ.Добавить();
				НоваяСтрока.Отчёт = НаименованиеОтчета;
				НоваяСтрока.Подразделение = СтрокаНалоговыхОрганов.Подразделение;
				НоваяСтрока.Статус = "Отсутствует";
				НоваяСтрока.КодКонтролирующегоОргана = СтрокаНалоговыхОрганов.РегистрацияВНалоговомОрганеКод;
				НоваяСтрока.КрайнийСрок = КрайнийСрок; 
				
			КонецЦикла;
			
		Иначе 
			
			ТаблицаОтчетов2_НДФЛ = Запрос.Выполнить().Выгрузить(); 
			
			Для Каждого СтрокаНалоговыхОрганов ИЗ ТаблицаОбособленныхПодразделений Цикл 
				НайденныеСтроки = ТаблицаОтчетов2_НДФЛ.НайтиСтроки(Новый Структура("РегистрацияВНалоговомОргане", СтрокаНалоговыхОрганов.РегистрацияВНалоговомОргане));
				Если НайденныеСтроки.Количество() = 0 Тогда 
					НоваяСтрока = ТаблицаРезультат2НДФЛ.Добавить();
					НоваяСтрока.Отчёт = НаименованиеОтчета;
					НоваяСтрока.КодКонтролирующегоОргана = СтрокаНалоговыхОрганов.РегистрацияВНалоговомОрганеКод;
					НоваяСтрока.Подразделение = СтрокаНалоговыхОрганов.Подразделение;
					НоваяСтрока.Статус = "Отсутствует";
					НоваяСтрока.КрайнийСрок = КрайнийСрок;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаОтчета2_НДФЛ Из ТаблицаОтчетов2_НДФЛ Цикл 
				НоваяСтрока = ТаблицаРезультат2НДФЛ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтчета2_НДФЛ);
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
				НоваяСтрока.Подразделение = ОпределитьПодразделениеПоРегистрацииВНалоговомОргане(ТаблицаОбособленныхПодразделений, СтрокаОтчета2_НДФЛ.РегистрацияВНалоговомОргане);
			КонецЦикла;    
			
		КонецЕсли;   	
		
		ПроверитьНаборЕжеквартальныхОтчетов(); 		

	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////
//СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
/////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПроверитьНаборЕжеквартальныхОтчетов()
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	// 4-ФСС
	НаименованиеОтчета = "4-ФСС";
	КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
	               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
	               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
	               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
	               |ИЗ
	               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	               |ГДЕ
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
	               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
	               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
	               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
	               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
	               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		НоваяСтрока = ТаблицаРезультат4ФСС.Добавить();
		НоваяСтрока.Отчёт = НаименованиеОтчета;
		НоваяСтрока.Статус = "Отсутствует";
		НоваяСтрока.КрайнийСрок = КрайнийСрок;
	Иначе 
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда 
			НоваяСтрока = ТаблицаРезультат4ФСС.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);				
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		КонецЕсли;
	КонецЕсли;
	
	// РСВ
	НаименованиеОтчета = "Расчет по страховым взносам";
	КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
	               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
	               |	ВЫБОР
	               |		КОГДА ЖурналОтчетовСтатусы.Статус = ""Сдано, требует уточнения""
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостояниеСдачиОтчетности.ПоложительныйРезультатДокументооборота)
	               |		ИНАЧЕ ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности
	               |	КОНЕЦ КАК Состояние,
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
	               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана
	               |ИЗ
	               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	               |ГДЕ
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
	               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
	               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
	               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
	               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
	               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		НоваяСтрока = ТаблицаРезультатРСВ.Добавить();
		НоваяСтрока.Отчёт = НаименованиеОтчета;
		НоваяСтрока.Статус = "Отсутствует";
		НоваяСтрока.КрайнийСрок = КрайнийСрок;
	Иначе 
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда 
			НоваяСтрока = ТаблицаРезультатРСВ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);				
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		КонецЕсли;
	КонецЕсли;
	
	// 6-НДФЛ
	НаименованиеОтчета = "6-НДФЛ";
	КрайнийСрок = ОпределитьКрайнийСрок(НаименованиеОтчета, НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	
	ПодразделенияИсключения = Новый Массив;
	ПодразделенияИсключения.Добавить(Справочники.ПодразделенияОрганизаций.НайтиПоКоду("507")); //Агентство №3 в городе Москва - входит в отчетность по ЦО
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПодразделенияОрганизаций.Ссылка КАК Подразделение,
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.Код КАК РегистрацияВНалоговомОрганеКод,
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.КПП КАК РегистрацияВНалоговомОрганеКПП
	               |ИЗ
	               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаОкончания, ) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
	               |		ПО ПодразделенияОрганизаций.Ссылка = ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
	               |ГДЕ
	               |	ПодразделенияОрганизаций.ОбособленноеПодразделение
	               |	И ПодразделенияОрганизаций.Сформировано
	               |	И (ПодразделенияОрганизаций.ДатаРасформирования = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ ПодразделенияОрганизаций.ДатаРасформирования > &ДатаОкончания)
	               |	И ПодразделенияОрганизаций.ДатаСоздания < &ДатаОкончания
	               |	И НЕ ПодразделенияОрганизаций.Ссылка В (&ПодразделенияИсключения)
	               |	И НЕ ПодразделенияОрганизаций.ПометкаУдаления";
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущийПериод.ДатаОкончания));
	Запрос.УстановитьПараметр("ПодразделенияИсключения",ПодразделенияИсключения);
	ТаблицаОбособленныхПодразделений = Запрос.Выполнить().Выгрузить();		
	
	//МассивКодовНалоговыхОрганов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаОбособленныхПодразделений.ВыгрузитьКолонку("РегистрацияВНалоговомОрганеКод"));		
	ТаблицаКодовППНалоговыхОрганов = ТаблицаОбособленныхПодразделений.Скопировать(,"РегистрацияВНалоговомОрганеКод,РегистрацияВНалоговомОрганеКПП");
	ТаблицаКодовППНалоговыхОрганов.Свернуть("РегистрацияВНалоговомОрганеКод,РегистрацияВНалоговомОрганеКПП");
	
	КодНалоговогоОрганаОрганизации 	= "";
	КППОрганизации					= "";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.Код КАК РегистрацияВНалоговомОрганеКод,
	               |	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.КПП КАК РегистрацияВНалоговомОрганеКПП
	               |ИЗ
	               |	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаОкончания, СтруктурнаяЕдиница = &Организация) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ТекущийПериод.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация",Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда                 		
		КодНалоговогоОрганаОрганизации 	= Выборка.РегистрацияВНалоговомОрганеКод;
		КППОрганизации					= Выборка.РегистрацияВНалоговомОрганеКПП;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналОтчетовСтатусы.Ссылка КАК Ссылка,
	               |	ЖурналОтчетовСтатусы.Статус КАК Статус,
	               |	ЖурналОтчетовСтатусы.СостояниеСдачиОтчетности КАК Состояние,
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета КАК Отчёт,
	               |	ЖурналОтчетовСтатусы.КодКонтролирующегоОргана КАК КодКонтролирующегоОргана,
	               |	ВЫРАЗИТЬ(ЖурналОтчетовСтатусы.Ссылка КАК Документ.РегламентированныйОтчет).КПП КАК КПП
	               |ИЗ
	               |	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	               |ГДЕ
	               |	ЖурналОтчетовСтатусы.НаименованиеОтчета = &НаименованиеОтчета
	               |	И ЖурналОтчетовСтатусы.ДатаНачала = &ДатаНачала
	               |	И ЖурналОтчетовСтатусы.ДатаОкончания = &ДатаОкончания
	               |	И ЖурналОтчетовСтатусы.ВариантОтчета = ""П""
	               |	И НЕ ЖурналОтчетовСтатусы.Скрыт
	               |	И НЕ ЖурналОтчетовСтатусы.ПометкаУдаления";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ТекущийПериод.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
	Запрос.УстановитьПараметр("НаименованиеОтчета",НаименованиеОтчета);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		
		НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
		НоваяСтрока.Отчёт = НаименованиеОтчета;
		НоваяСтрока.Подразделение = "ЦО";
		НоваяСтрока.Статус = "Отсутствует";
		НоваяСтрока.КодКонтролирующегоОргана = КодНалоговогоОрганаОрганизации;
		НоваяСтрока.КПП	= КППОрганизации;
		НоваяСтрока.КрайнийСрок = КрайнийСрок; 				
		
		Для Каждого КодИКППНалоговогоОргана Из ТаблицаКодовППНалоговыхОрганов Цикл 
			НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.КодКонтролирующегоОргана = КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКод;
			НоваяСтрока.КПП = КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКПП;
			НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКод, "РегистрацияВНалоговомОрганеКод", КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКПП, "РегистрацияВНалоговомОрганеКПП");
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = КрайнийСрок; 
		КонецЦикла;
	Иначе 
		
		ТаблицаОтчетов6_НДФЛ = Запрос.Выполнить().Выгрузить(); 
		
		Для Каждого КодИКППНалоговогоОргана Из ТаблицаКодовППНалоговыхОрганов Цикл 
			КодНалоговогоОргана = КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКод;
			КПП = КодИКППНалоговогоОргана.РегистрацияВНалоговомОрганеКПП;
			Если ПустаяСтрока(КодНалоговогоОргана) ИЛИ ПустаяСтрока(КПП) Тогда 
				Продолжить;
			КонецЕсли;
			НайденныеСтроки = ТаблицаОтчетов6_НДФЛ.НайтиСтроки(Новый Структура("КодКонтролирующегоОргана,КПП", КодНалоговогоОргана, КПП));
			Если НайденныеСтроки.Количество() = 0 Тогда 
				НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
				НоваяСтрока.Отчёт = НаименованиеОтчета;
				НоваяСтрока.КодКонтролирующегоОргана = КодНалоговогоОргана;
				НоваяСтрока.КПП = КПП;
				НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, КодНалоговогоОргана, "РегистрацияВНалоговомОрганеКод", КПП, "РегистрацияВНалоговомОрганеКПП");
				НоваяСтрока.Статус = "Отсутствует";
				НоваяСтрока.КрайнийСрок = КрайнийСрок;
			КонецЕсли;
		КонецЦикла;
		
		Если ТаблицаОтчетов6_НДФЛ.НайтиСтроки(Новый Структура("КодКонтролирующегоОргана, КПП",КодНалоговогоОрганаОрганизации, КППОрганизации)).Количество()=0 Тогда 					
			НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Подразделение = "ЦО";
			НоваяСтрока.КодКонтролирующегоОргана = КодНалоговогоОрганаОрганизации;
			НоваяСтрока.КПП = КППОрганизации;
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		КонецЕсли;				
		
		Для Каждого СтрокаОтчета6_НДФЛ Из ТаблицаОтчетов6_НДФЛ Цикл 
			Если СтрокаОтчета6_НДФЛ.КодКонтролирующегоОргана = КодНалоговогоОрганаОрганизации И СтрокаОтчета6_НДФЛ.КПП = КППОрганизации Тогда 
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтчета6_НДФЛ);
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
			НоваяСтрока.Подразделение = ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, СтрокаОтчета6_НДФЛ.КодКонтролирующегоОргана, "РегистрацияВНалоговомОрганеКод", СтрокаОтчета6_НДФЛ.КПП, "РегистрацияВНалоговомОрганеКПП");
			НоваяСтрока.КодКонтролирующегоОргана = СтрокаОтчета6_НДФЛ.КодКонтролирующегоОргана;
			НоваяСтрока.КПП = СтрокаОтчета6_НДФЛ.КПП;
		КонецЦикла;
		
		// ЗДЕСЬ
		
		// Отдельно проверим сдачу 6-НДФЛ по ЦО
		МассивСтруктурныхЕдиниц = Новый Массив;
		МассивСтруктурныхЕдиниц.Добавить(Справочники.Организации.ОрганизацияПоУмолчанию());
		МассивСтруктурныхЕдиниц.Добавить(Справочники.ПодразделенияОрганизаций.НайтиПоКоду("507"));
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане.КодПоОКТМО КАК ОКТМО
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&ДатаОкончания, СтруктурнаяЕдиница В (&МассивСтруктурныхЕдиниц)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних";
		Запрос.УстановитьПараметр("МассивСтруктурныхЕдиниц",МассивСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ДатаОкончания",НачалоДня(КонецМесяца(ТекущийПериод.ДатаОкончания)));
		ТаблицаПроверкиЦО = Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаПроверки Из ТаблицаПроверкиЦО Цикл 
			СтрокаПроверки.ОКТМО = СокрЛП(СтрокаПроверки.ОКТМО);
		КонецЦикла;
		
		ОтборПоЦО = ТаблицаОтчетов6_НДФЛ.Скопировать(Новый Структура("КодКонтролирующегоОргана",КодНалоговогоОрганаОрганизации ));
		Для Каждого СтрокаОтбораПоЦО Из ОтборПоЦО Цикл 
			ДанныеОтчета = СтрокаОтбораПоЦО.Ссылка.ДанныеОтчета.Получить();
			Если ТипЗнч(ДанныеОтчета) = Тип("Структура") И ДанныеОтчета.Свойство ("ПоказателиОтчета") Тогда 
				ПоказателиОтчета = ДанныеОтчета.ПоказателиОтчета;
				Если ТипЗнч(ПоказателиОтчета) = Тип("Структура") И ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный") Тогда
					ПолеТабличногоДокументаТитульный = ПоказателиОтчета.ПолеТабличногоДокументаТитульный;
					Если ТипЗнч(ПолеТабличногоДокументаТитульный) = Тип("Структура") И ПолеТабличногоДокументаТитульный.Свойство("ОКТМО") Тогда 
						ОКТМО = СокрЛП(ПолеТабличногоДокументаТитульный.ОКТМО);
						НайденныеСтроки = ТаблицаПроверкиЦО.НайтиСтроки(Новый Структура("ОКТМО", ОКТМО));
						Если НайденныеСтроки.Количество()>0 Тогда 
							Для Каждого Строка Из НайденныеСтроки Цикл 
								
								НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтбораПоЦО);
								НоваяСтрока.КрайнийСрок = КрайнийСрок;
								НоваяСтрока.Подразделение = Строка.СтруктурнаяЕдиница;
								НоваяСтрока.КодКонтролирующегоОргана = СтрокаОтбораПоЦО.КодКонтролирующегоОргана;
								
								ТаблицаПроверкиЦО.Удалить(Строка);
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаПроверки Из ТаблицаПроверкиЦО Цикл 
			НоваяСтрока = ТаблицаРезультат6НДФЛ.Добавить();
			НоваяСтрока.Отчёт = НаименованиеОтчета;
			НоваяСтрока.Подразделение =  СтрокаПроверки.СтруктурнаяЕдиница;
			НоваяСтрока.КодКонтролирующегоОргана = КодНалоговогоОрганаОрганизации;
			НоваяСтрока.Статус = "Отсутствует";
			НоваяСтрока.КрайнийСрок = КрайнийСрок;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьКрайнийСрок(ВидОтчета, ДатаОкончания)
	
	СоответствиеДатНачала = Новый Соответствие();
	СоответствиеДатНачала.Вставить("Сведения о застрахованных лицах, СЗВ-М", 					ДатаОкончания + 15*24*60*60); 
	СоответствиеДатНачала.Вставить("Статистика: Форма П-4", 									ДатаОкончания + 15*24*60*60);
	СоответствиеДатНачала.Вставить("4-ФСС", 													ДатаОкончания + 25*24*60*60);
	СоответствиеДатНачала.Вставить("Реестр ДСВ-3" , 											ДатаОкончания + 20*24*60*60);
	СоответствиеДатНачала.Вставить("Расчет по страховым взносам" ,								ДатаОкончания + 30*24*60*60);
	СоответствиеДатНачала.Вставить("6-НДФЛ" ,													ДатаОкончания + 31*24*60*60);
	СоответствиеДатНачала.Вставить("Сведения о страховом стаже застрахованных лиц, СЗВ-СТАЖ" ,	Дата(Год(ДатаОкончания)+1,3,1));
	СоответствиеДатНачала.Вставить("2-НДФЛ для передачи в ИФНС" ,								Дата(Год(ДатаОкончания)+1,4,1));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|	И ДанныеПроизводственногоКалендаря.Дата >= &Дата";
	Запрос.УстановитьПараметр("Дата", СоответствиеДатНачала.Получить(ВидОтчета));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Дата;
	КонецЕсли;
	
	Возврат Дата(1,1,1);

КонецФункции

&НаСервере
Функция ОпределитьПодразделениеПоНомеруТерриториальногоОргана(ТаблицаОбособленныхПодразделений, НомерТерриториальногоОргана, НаименованиеПараметра, КПП = Неопределено, НаименованиеПараметраКПП = Неопределено)
	
	Если ТипЗнч(ТаблицаОбособленныхПодразделений) = Тип("ТаблицаЗначений") Тогда 
		
		Если НЕ (КПП = Неопределено И НаименованиеПараметраКПП = Неопределено) Тогда 
			ОтборПодразделений = ТаблицаОбособленныхПодразделений.Скопировать(Новый Структура(НаименованиеПараметра+","+НаименованиеПараметраКПП, НомерТерриториальногоОргана, КПП));
		Иначе 			
			ОтборПодразделений = ТаблицаОбособленныхПодразделений.Скопировать(Новый Структура(НаименованиеПараметра, НомерТерриториальногоОргана));
		КонецЕсли;
		Если ОтборПодразделений.Количество()>0 Тогда 
			
			МассивПодразделений = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОтборПодразделений.ВыгрузитьКолонку("Подразделение"));
			Если МассивПодразделений.Количество()>1 Тогда 
				СтрокаПодразделений = "";
				Для Каждого Подразделение Из МассивПодразделений Цикл 
					СтрокаПодразделений = СтрокаПодразделений + Подразделение + " (" +Подразделение.Код +"),";
				КонецЦикла;
				
				Возврат Лев(СтрокаПодразделений, СтрДлина(СтрокаПодразделений)-1);
			Иначе 
				Возврат Строка(МассивПодразделений[0])+" ("+МассивПодразделений[0].Код+")";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
КонецФункции

&НаСервере
Функция ОпределитьПодразделениеПоРегистрацииВНалоговомОргане(ТаблицаОбособленныхПодразделений, РегистрацияВНалоговомОргане)
	
	Если ТипЗнч(ТаблицаОбособленныхПодразделений) = Тип("ТаблицаЗначений") Тогда 
		
		ОтборПодразделений = ТаблицаОбособленныхПодразделений.Скопировать(Новый Структура("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане));
		Если ОтборПодразделений.Количество()>0 Тогда 
			
			МассивПодразделений = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОтборПодразделений.ВыгрузитьКолонку("Подразделение"));
			Если МассивПодразделений.Количество()>1 Тогда 
				СтрокаПодразделений = "";
				Для Каждого Подразделение Из МассивПодразделений Цикл 
					СтрокаПодразделений = СтрокаПодразделений + Подразделение + " (" +Подразделение.Код +"),";
				КонецЦикла;
				
				Возврат Лев(СтрокаПодразделений, СтрДлина(СтрокаПодразделений)-1);
			Иначе 
				Возврат Строка(МассивПодразделений[0])+" ("+МассивПодразделений[0].Код+")";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура ПерекраситьСтрочкиРезультата()
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ТаблицаРезультатСЗВ_М");
	СписокТаблиц.Добавить("ТаблицаРезультатП_4");
	СписокТаблиц.Добавить("ТаблицаРезультатДСВ_3");
	СписокТаблиц.Добавить("ТаблицаРезультат6НДФЛ");
	СписокТаблиц.Добавить("ТаблицаРезультат4ФСС");
	СписокТаблиц.Добавить("ТаблицаРезультатРСВ");
	СписокТаблиц.Добавить("ТаблицаРезультатСЗВ_СТАЖ");
	СписокТаблиц.Добавить("ТаблицаРезультат2НДФЛ");
	
	Для Каждого НаименованиеТаблицы Из СписокТаблиц Цикл    		
		
		ДобавитьЭлементОформления(НаименованиеТаблицы, "Статус", "Отсутствует", WebЦвета.Лосось) ;  
		ДобавитьЭлементОформления(НаименованиеТаблицы, "Статус", "Сдано", WebЦвета.Роса) ;  
		ДобавитьЭлементОформления(НаименованиеТаблицы, "Статус", "Не сдано", WebЦвета.ТусклоРозовый) ;  
		ДобавитьЭлементОформления(НаименованиеТаблицы, "Состояние", Перечисления.СостояниеСдачиОтчетности.ОтрицательныйРезультатДокументооборота, WebЦвета.Лосось) ;  
				
	КонецЦикла;


КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементОформления(Таблица, Реквизит, ЗначениеРеквизита, Цвет,  ВидСравнения = Неопределено)
	
	Если ВидСравнения = Неопределено Тогда 
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение     = Новый ПолеКомпоновкиДанных(""+ Таблица +"."+Реквизит);
	ЭлементОтбора.ВидСравнения      = ВидСравнения;
	ЭлементОтбора.ПравоеЗначение    = ЗначениеРеквизита;
	ЭлементОтбора.Использование     = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);
	
	// Укажем какие поля (колонки) оформлять
	ПолеОформления      = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Таблица);
	ПолеОформления.Использование = Истина; 
	
	ЭлементОформления.Использование = Истина;

КонецПроцедуры
