////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Назначение.Добавить("Документ.ОплатаПоСреднемуЗаработку");
	ПараметрыРегистрации.Версия = "1.3";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'ППФ Приказ об освобождении от работы'");
	НоваяКоманда.Идентификатор = "ППФПриказОбОсвобожденииОтРаботы";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовКлиентскогоМетода();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти


/////////////////////////////////////////////////////////////////////////
///////СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУКНЦИИ

Функция ПолучитьДанныеПечати(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОплатаПоСреднемуЗаработку.Номер КАК НомерПриказа,
	               |	ОплатаПоСреднемуЗаработку.Дата КАК ДатаПриказа,
	               |	ОплатаПоСреднемуЗаработку.Сотрудник,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность,
	               |	ОплатаПоСреднемуЗаработку.ДатаНачала,
	               |	ОплатаПоСреднемуЗаработку.ФизическоеЛицо.Пол КАК Пол,
	               |	ОплатаПоСреднемуЗаработку.Ссылка,
	               |	ФИОФизическихЛицСрезПоследних.Фамилия,
	               |	ФИОФизическихЛицСрезПоследних.Имя,
	               |	ФИОФизическихЛицСрезПоследних.Отчество
	               |ИЗ
	               |	Документ.ОплатаПоСреднемуЗаработку КАК ОплатаПоСреднемуЗаработку
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ) КАК ФИОФизическихЛицСрезПоследних
	               |		ПО ОплатаПоСреднемуЗаработку.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ПО ОплатаПоСреднемуЗаработку.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	               |ГДЕ
	               |	ОплатаПоСреднемуЗаработку.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",МассивОбъектов[0]);				   
	Запрос.УстановитьПараметр("ДатаСреза",МассивОбъектов[0].Дата);  
	Выборка = Запрос.Выполнить().Выбрать();	
	Выборка.Следующий();
	
	СклонениеРодПадеж = "";
	ФизическиеЛицаЗарплатаКадры.Просклонять(Выборка.Фамилия, 4, СклонениеРодПадеж, Выборка.Пол);
	ФамилияИОРодПадеж = "";
	ФамилияИОРодПадеж = СклонениеРодПадеж + " " + Лев(Выборка.Имя,1) + "."+Лев(Выборка.Отчество,1)+".";
	
	СклонениеДатПадеж 	= "";
	ФизическиеЛицаЗарплатаКадры.Просклонять(Выборка.Фамилия, 3, СклонениеДатПадеж, Выборка.Пол);
	ФамилияИОДатПадеж 	= "";
	ФамилияИОДатПадеж	= СклонениеДатПадеж + " " + Лев(Выборка.Имя,1) + "."+Лев(Выборка.Отчество,1)+".";
	
	ТаблицаДолжностей = ОпределитьДолжность(Выборка.Должность);
	ДолжностьРодПадеж = "";
	Для Каждого СтрокаДолжности Из ТаблицаДолжностей Цикл 
		Если СтрокаДолжности.Свойство.Заголовок = "Родительный падеж" Тогда 
			ДолжностьРодПадеж = СтрокаДолжности.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ДолжностьДатПадеж = "";
	Для Каждого СтрокаДолжности Из ТаблицаДолжностей Цикл 
		Если СтрокаДолжности.Свойство.Заголовок = "Дательный падеж" Тогда 
			ДолжностьДатПадеж = СтрокаДолжности.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаПодразделений 	= ОпределитьПодразделение(Выборка.Подразделение);
	ПодразделениеРодПадеж = "";
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделений Цикл 
		Если СтрокаПодразделения.Свойство.Заголовок = "Родительный падеж" Тогда 
			ПодразделениеРодПадеж=ПодразделениеРодПадеж + СокрЛП(СтрокаПодразделения.Значение) + " ";
		КонецЕсли;
	КонецЦикла;
	ПодразделениеРодПадеж = СокрЛП(ПодразделениеРодПадеж);
	
	ДатаСрок = "";
	
	НайденРабочийДень = Ложь;
	СчетчикДней = 1;
	Пока Не НайденРабочийДень Цикл 
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеПроизводственногоКалендаря.ВидДня,
		               |	ДанныеПроизводственногоКалендаря.Дата
		               |ИЗ
		               |	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		               |ГДЕ
		               |	ДанныеПроизводственногоКалендаря.Дата = ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, &Дней)";
		Запрос.УстановитьПараметр("Дата",Выборка.ДатаНачала);  
		Запрос.УстановитьПараметр("Дней",СчетчикДней);
		ВыборкаПроизв = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаПроизв.Следующий() Тогда 
			Если ВыборкаПроизв.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий ИЛИ ВыборкаПроизв.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда 				
				ДатаСрок = ВыборкаПроизв.Дата;
				НайденРабочийДень = Истина;				
			КонецЕсли;
		КонецЕсли;
		СчетчикДней = СчетчикДней + 1;
	КонецЦикла; 
	
	СоответствиеПараметров = Новый Структура;
	ДобавитьПараметр(СоответствиеПараметров, "ДатаПриказа",				Формат(Выборка.ДатаПриказа,"ДФ=dd.MM.yyyy"));
	ДобавитьПараметр(СоответствиеПараметров, "НомерПриказа",			Выборка.НомерПриказа);
	ДобавитьПараметр(СоответствиеПараметров, "ДатаНачала", 				Формат(Выборка.ДатаНачала,"ДФ=dd.MM.yyyy"));
	ДобавитьПараметр(СоответствиеПараметров, "ФамилияИОРодПадеж",		ФамилияИОРодПадеж);
	ДобавитьПараметр(СоответствиеПараметров, "ДолжностьРодПадеж",		ДолжностьРодПадеж);
	ДобавитьПараметр(СоответствиеПараметров, "ПодразделениеРодПадеж",	ПодразделениеРодПадеж);
	ДобавитьПараметр(СоответствиеПараметров, "ДолжностьДатПадеж",		ДолжностьДатПадеж);
	ДобавитьПараметр(СоответствиеПараметров, "ФамилияИОДатПадеж",		ФамилияИОДатПадеж);
	ДобавитьПараметр(СоответствиеПараметров, "ДатаСрок",				Формат(ДатаСрок,"ДФ=dd.MM.yyyy"));
	
	Возврат СоответствиеПараметров;

КонецФункции

Процедура ДобавитьПараметр(Структура, ИсходнаяСтрока, СтрокаЗамены)
	 Структура.Вставить(ИсходнаяСтрока,СтрокаЗамены);
КонецПроцедуры

Функция ОпределитьДолжность(Должность)
	
	ЗапросПоДолжностям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДополнительныеСведения.Объект,
	               |	ДополнительныеСведения.Свойство КАК Свойство,
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Объект = &Объект";
	ЗапросПоДолжностям.Текст = ТекстЗапроса;
	ЗапросПоДолжностям.УстановитьПараметр("Объект",Должность);
	
	ВыгрузкаДолжностей = ЗапросПоДолжностям.Выполнить().Выгрузить();
		
	Возврат ВыгрузкаДолжностей;	
	
КонецФункции

Функция ОпределитьПодразделение(Подразделение)
	
	ЗапросПоПодразделениям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект,
	|	ДополнительныеСведения.Свойство КАК Свойство,
	|	ДополнительныеСведения.Значение КАК Значение,
	|	""1"" КАК УровеньВложенности
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Ссылка
	|ОБЪЕДИНИТЬ ВСЕ                             	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""2""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодитель
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""3""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
	ЗапросПоПодразделениям.Текст = ТекстЗапроса;
	ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
	
	ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			
	Возврат ВыгрузкаПодразделений;
	
КонецФункции

