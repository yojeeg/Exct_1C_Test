/////////////////////////////////////////////////////////////////////////
///////СВЕДЕНИЯ ОБ ОБРАБОТКЕ

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.Увольнение");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Печать увольнение Т8 "); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Расторжение трудового договора (Т-8)");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Приказ об увольнении (Т-8)", "ПФ_MXL_Т8", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
///////СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУКНЦИИ

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении"
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаТ8(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;

	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОбУвольнении";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаТ8(МассивОбъектов);
	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати);
	
	Возврат ДокументРезультат;

КонецФункции 

Функция ПолучитьДанныеДляПечатиКадровогоПриказаТ8(МассивОбъектов)
	
	Выборка = КадровыйУчет.СформироватьЗапросДляТ8(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока  Выборка.Следующий() Цикл
		
		Параметры = ПараметрыПриказаТ8();		
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);

		РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 4, РезультатСклонения, Параметры.Пол) Тогда
			Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ПредставлениеДатыУвольнения  = Формат(Выборка.ДатаУвольнения, "ДЛФ=DD");
		
		Параметры.ДатаУвольненияЧисло = ?(ЗначениеЗаполнено(Выборка.ДатаУвольнения),
			СокрЛП(Лев(ПредставлениеДатыУвольнения,2)),
			"      ");
		Параметры.ДатаУвольненияМесяцГод = ?(ЗначениеЗаполнено(Выборка.ДатаУвольнения),
			СокрЛП(Прав(ПредставлениеДатыУвольнения, СтрДлина(ПредставлениеДатыУвольнения)-2)),
			"                     г.");
			
		Если НЕ ПустаяСтрока(Выборка.ТекстОснования) Тогда
				
			Параметры.СтатьяТКРФ = Выборка.ТекстОснования
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru=', %1 Трудового кодекса Российской Федерации'"),
					Выборка.СтатьяТКРФ);
					
		КонецЕсли;
		
		Если Параметры.Свойство("Подразделение") Тогда 
			Подразделение = Параметры.Подразделение;
			
			ЗапросПоПодразделениям = Новый Запрос;
			ТекстЗапроса = "ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка) КАК Ссылка
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	ПодразделенияОрганизаций.Ссылка = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка)
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	ПодразделенияОрганизаций.Ссылка = &СсылкаРодитель
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка)
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	ПодразделенияОрганизаций.Ссылка = &СсылкаРодительРодитель";
			ЗапросПоПодразделениям.Текст = ТекстЗапроса;
			ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
			ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
			
			ВыборкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выбрать();
			
			СтрокаПодразделения = "";
			
			Пока ВыборкаПодразделений.Следующий() Цикл
				Если НРег(ВыборкаПодразделений.Ссылка) = "штат" Тогда Продолжить; КонецЕсли;
				Если НРег(ВыборкаПодразделений.Ссылка) = "агенты" Тогда Продолжить; КонецЕсли;
				СтрокаПодразделения = СтрокаПодразделения  + " " + ВыборкаПодразделений.Ссылка;
			КонецЦикла;
			
			Параметры.Подразделение = СтрокаПодразделения;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.ДолжностьРуководителя) ИЛИ Не ЗначениеЗаполнено(Выборка.РуководительРасшифровкаПодписи) Тогда 
			ЗапросПоОтветственным = Новый Запрос;
			ЗапросПоОтветственным.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			                              |	СведенияОбОтветственныхЛицахСрезПоследних.ДолжностьРуководителя,
			                              |	СведенияОбОтветственныхЛицахСрезПоследних.Руководитель,
			                              |	ФИОФизическихЛицСрезПоследних.Фамилия,
			                              |	ФИОФизическихЛицСрезПоследних.Имя,
			                              |	ФИОФизическихЛицСрезПоследних.Отчество
			                              |ИЗ
			                              |	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&ПериодСреза, Организация = &Организация) КАК СведенияОбОтветственныхЛицахСрезПоследних
			                              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
			                              |		ПО ФИОФизическихЛицСрезПоследних.ФизическоеЛицо = СведенияОбОтветственныхЛицахСрезПоследних.Руководитель
			                              |
			                              |УПОРЯДОЧИТЬ ПО
			                              |	СведенияОбОтветственныхЛицахСрезПоследних.Период УБЫВ";
			ЗапросПоОтветственным.УстановитьПараметр("ПериодСреза",Выборка.ДатаДок);									  
			ЗапросПоОтветственным.УстановитьПараметр("Организация",Выборка.Организация);
			ВыборкаПоОтветственным = ЗапросПоОтветственным.Выполнить().Выбрать();
			
			Если ВыборкаПоОтветственным.Следующий() Тогда
				Параметры.ДолжностьРуководителя = ВыборкаПоОтветственным.ДолжностьРуководителя;
				Параметры.РуководительРасшифровкаПодписи = Лев(ВыборкаПоОтветственным.Имя,1)+ "."+Лев(ВыборкаПоОтветственным.Отчество,1)+". "+ВыборкаПоОтветственным.Фамилия;
			КонецЕсли;
													  
		КонецЕсли;
		
		ДокументУвольнения = Документы.Увольнение.НайтиПоНомеру(Выборка.НомерДок, Выборка.ДатаДок);
		
		Если не ДокументУвольнения.Пустая() Тогда 
			Если ДокументУвольнения.ПризнакКомпенсацииУдержанияОтпуска = Перечисления.КомпенсацияУдержаниеОтпускаПриУвольнении.КомпенсироватьНеИспользованные Тогда 
				Если ТипЗнч(ДокументУвольнения.ВидРасчетаКомпенсацииУдержанияОтпуска) = Тип("ПланВидовРасчетаСсылка.Начисления") И Лев(ДокументУвольнения.ВидРасчетаКомпенсацииУдержанияОтпуска.ФормулаРасчета,1) = "-" Тогда 
					Параметры.Вставить("ДнейУдержания",ДокументУвольнения.ДнейКомпенсацииУдержанияОтпуска);
				Иначе 
					Параметры.Вставить("ДнейКомпенсации",ДокументУвольнения.ДнейКомпенсацииУдержанияОтпуска);
				КонецЕсли;
			ИначеЕсли  ДокументУвольнения.ПризнакКомпенсацииУдержанияОтпуска = Перечисления.КомпенсацияУдержаниеОтпускаПриУвольнении.УдержатьЗаИспользованныеАвансом Тогда 
				Параметры.Вставить("ДнейУдержания",ДокументУвольнения.ДнейКомпенсацииУдержанияОтпуска);
			КонецЕсли;	
			Параметры.Вставить("РабочийГодС",ДокументУвольнения.РабочийГодС);
			Параметры.Вставить("РабочийГодПо",ДокументУвольнения.РабочийГодПо);
		КонецЕсли;
		
		// Добавим дни компенсации/удержания за доп отпуск
		МассивДопОтпусков = Новый Массив;
		МассивДопОтпусков.Добавить(Справочники.ВидыОтпусков.НайтиПоНаименованию("Дополнительный ежегодный отпуск"));
		ЗапросПоДопОтпускам = Новый Запрос();
		ЗапросПоДопОтпускам.Текст = "ВЫБРАТЬ
		                            |	УвольнениеДополнительныеОтпуска.ДнейКомпенсацииУдержания,
		                            |	УвольнениеДополнительныеОтпуска.ПризнакКомпенсацииУдержания
									|ИЗ
		                            |	Документ.Увольнение.ДополнительныеОтпуска КАК УвольнениеДополнительныеОтпуска
		                            |ГДЕ
		                            |	УвольнениеДополнительныеОтпуска.Ссылка = &Ссылка
		                            |	И УвольнениеДополнительныеОтпуска.ВидОтпуска В(&ВидОтпуска)";
		ЗапросПоДопОтпускам.УстановитьПараметр("Ссылка",МассивОбъектов[0]);									
		ЗапросПоДопОтпускам.УстановитьПараметр("ВидОтпуска",МассивДопОтпусков);
		РезультатПоДоОтпускам = ЗапросПоДопОтпускам.Выполнить();
		
		Если не РезультатПоДоОтпускам.Пустой() Тогда 
			ВыборкаДоп = РезультатПоДоОтпускам.Выбрать();
			Пока ВыборкаДоп.Следующий() Цикл 
				Если ВыборкаДоп.ПризнакКомпенсацииУдержания = Перечисления.КомпенсацияУдержаниеОтпускаПриУвольнении.КомпенсироватьНеИспользованные Тогда 
					Параметры.Вставить("ДнейКомпенсации",Параметры.ДнейКомпенсации + ВыборкаДоп.ДнейКомпенсацииУдержания);
				ИначеЕсли ВыборкаДоп.ПризнакКомпенсацииУдержания = Перечисления.КомпенсацияУдержаниеОтпускаПриУвольнении.УдержатьЗаИспользованныеАвансом Тогда 
					Параметры.Вставить("ДнейУдержания",Параметры.ДнейУдержания + ВыборкаДоп.ДнейКомпенсацииУдержания);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
				
		Если Параметры.Свойство("СтатьяТКРФ") Тогда 
			Параметры.СтатьяТКРФ = Выборка.ТекстОснования;

		КонецЕсли;
		
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	
  
Процедура ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ТабличныйДокумент, МассивДанныхЗаполнения, ОбъектыПечати)
	
	Если Макет <> Неопределено Тогда
		
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета из МассивДанныхЗаполнения Цикл
			Если Не ПервыйПриказ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Макет.Параметры.Заполнить(ПараметрыМакета);
			ТабличныйДокумент.Вывести(Макет);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ПараметрыМакета.Ссылка);	
			
			ТабличныйДокумент.Автомасштаб = Истина;
			
			//ТабличныйДокумент.ПолеСлева = 10;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПараметрыПриказаТ8()
	
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("ДатаУвольненияЧисло");
	Параметры.Вставить("ДатаУвольненияМесяцГод");
	Параметры.Вставить("СтатьяТКРФ", "");
	Параметры.Вставить("ОснованиеУвольнения", "");
	Параметры.Вставить("ДнейКомпенсации",0);
	Параметры.Вставить("ДнейУдержания",0);
	
	Возврат Параметры;
	
КонецФункции


/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
///////ПРОЦЕДУРА ПЕЧАТИ

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("ПФ_MXL_Т8");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Т8") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_Т8", "Печать увольнение Т8",	ПолучитьТабличныйДокументПриказаТ8(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////

