Перем СоответствиеДолжностьПечатнойФормы;

/////////////////////////////////////////////////////////////////////////
///////СВЕДЕНИЯ ОБ ОБРАБОТКЕ

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ОтпускБезСохраненияОплаты");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Приказ на отпуск Т-6 (без зп) "); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Приказ на отпуск Т-6 (без зп)");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Приказ о предоставлении отпуска (Т-6)", "ПФ_MXL_Т6", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
///////СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУКНЦИИ


// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о предоставлении отпуска 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//
// Возвращаемое значение:
//	Табличный документ
//

Функция ТабличныйДокументПриказаТ6(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПредоставленииОтпуска";
	МассивДанныхЗаполнения = ДанныеДляПечатиКадровогоПриказаТ6(МассивОбъектов);
	
	Если Макет <> Неопределено Тогда
		
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета из МассивДанныхЗаполнения Цикл
			
			НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
			Если Не ПервыйПриказ Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			
			МакетШапка = Макет.ПолучитьОбласть("Шапка");
			МакетШапка.Параметры.Заполнить(ПараметрыМакета);
			ДокументРезультат.Вывести(МакетШапка);
				
			МакетРаботник = Макет.ПолучитьОбласть("Работник");
			МакетРаботник.Параметры.Заполнить(ПараметрыМакета);
		
			ДокументРезультат.Вывести(МакетРаботник);
				
			МакетПодвал = Макет.ПолучитьОбласть("Подвал");
			МакетПодвал.Параметры.Заполнить(ПараметрыМакета);
			ДокументРезультат.Вывести(МакетПодвал);
			
			//// Печать приложения
			//Если ПараметрыМакета.ДополнительныеОтпуска.Количество() > 0 Тогда
			//	
			//	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			//	
			//	МакетШапкиПриложения = Макет.ПолучитьОбласть("ПриложениеШапка");
			//	МакетШапкиПриложения.Параметры.Заполнить(ПараметрыМакета);
			//	ДокументРезультат.Вывести(МакетШапкиПриложения);
			//	
			//	Для Каждого ПараметрыМакетаПриложения Из ПараметрыМакета.ДополнительныеОтпуска Цикл
			//		МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаОтпуск");
			//		МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
			//		ДокументРезультат.Вывести(МакетСтрокиПриложения);
			//		
			//		Если ПараметрыМакетаПриложения.УказанПериодЗаКоторыйПредоставляетсяОтпуск Тогда
			//			МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаПериод");
			//			МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
			//			ДокументРезультат.Вывести(МакетСтрокиПриложения);
			//		КонецЕсли;
			//		
			//		МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаОснование");
			//		МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
			//		ДокументРезультат.Вывести(МакетСтрокиПриложения);
			//		
			//	КонецЦикла;
			//	
			//КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ПараметрыМакета.Ссылка);

		КонецЦикла;

	КонецЕсли;
	
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ДанныеДляПечатиКадровогоПриказаТ6(МассивОбъектов)
	
	МассивПараметров = Новый Массив;
	НомерДополнительногоОтпуска = 1;
	
	Результат = КадровыйУчет.СформироватьЗапросДляТ6(МассивОбъектов);
	
	Если Результат.Пустой() Тогда
		Возврат МассивПараметров
	КонецЕсли;
	
	ВыборкаПоСсылкам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		
		Выборка = ВыборкаПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка.Следующий() Цикл
			
			Параметры = СтруктураПараметровПриказаТ6();
			
			ВыборкаПоВидуОтпуска = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);  
			
			ДатаНачалаВсего = '00010101';
			ДатаОкончанияВсего = '00010101';
			ШапкаЗаполнена = Ложь;
			ПродолжительностьВсего = 0;
			ОрганизацияДокумента = Неопределено;
			Если ВыборкаПоВидуОтпуска.НайтиСледующий(Новый Структура("ЭтоОсновнойОтпуск", Истина)) Тогда
				
				КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, ВыборкаПоВидуОтпуска);
				
				Параметры.ДатаДок = Формат(ВыборкаПоВидуОтпуска.ДатаДок, "ДЛФ=Д");
				ШапкаЗаполнена = Истина;
				
				ПредставлениеДатыНачалаОсновногоОтпуска  = Формат(ВыборкаПоВидуОтпуска.ДатаНачала, "ДЛФ=DD");
				Параметры.ДатаНачалаЧисло = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала), СокрЛП(Лев(ПредставлениеДатыНачалаОсновногоОтпуска,2)), "      ");
				Параметры.ДатаНачалаМесяцГод = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала),  СокрЛП(Прав(ПредставлениеДатыНачалаОсновногоОтпуска, СтрДлина(ПредставлениеДатыНачалаОсновногоОтпуска)-2)), "                     г.");
				
				ПредставлениеДатыОкончанияОсновногоОтпуска  = Формат(ВыборкаПоВидуОтпуска.ДатаОкончания, "ДЛФ=DD");
				Параметры.ДатаОкончанияЧисло = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания), СокрЛП(Лев(ПредставлениеДатыОкончанияОсновногоОтпуска,2)), "      ");
				Параметры.ДатаОкончанияМесяцГод = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания),  СокрЛП(Прав(ПредставлениеДатыОкончанияОсновногоОтпуска, СтрДлина(ПредставлениеДатыОкончанияОсновногоОтпуска)-2)), "                     г.");
				
				Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.Продолжительность) Тогда
					Параметры.Продолжительность = ВыборкаПоВидуОтпуска.Продолжительность;
					ПродолжительностьВсего  = ВыборкаПоВидуОтпуска.Продолжительность;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала) Тогда
					ДатаНачалаВсего = ВыборкаПоВидуОтпуска.ДатаНачала;
				КонецЕсли;	
				
				Если  ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания) Тогда
					ДатаОкончанияВсего = ВыборкаПоВидуОтпуска.ДатаОкончания;
				КонецЕсли;
			КонецЕсли;
			
			ВыборкаПоВидуОтпуска.Сбросить();
			
			ДатаНачалаДоп = '00010101';
			ДатаОкончанияДоп = '00010101';
			СтрокаВидДопОтпуска = "";
			ПродолжительностьДоп = 0;
			
			Пока ВыборкаПоВидуОтпуска.НайтиСледующий(Новый Структура("ЭтоОсновнойОтпуск", Ложь)) Цикл
				Если НЕ ШапкаЗаполнена  Тогда
					КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, ВыборкаПоВидуОтпуска);
					Параметры.Продолжительность  = 0;
					Параметры.ДатаДок = Формат(?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаДок), ВыборкаПоВидуОтпуска.ДатаДок, ТекущаяДатаСеанса()), "ДЛФ=Д");
					ШапкаЗаполнена = Истина;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ДатаНачалаДоп) ИЛИ ДатаНачалаДоп > ВыборкаПоВидуОтпуска.ДатаНачала Тогда
					ДатаНачалаДоп = ВыборкаПоВидуОтпуска.ДатаНачала;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ДатаОкончанияДоп) ИЛИ ДатаОкончанияДоп < ВыборкаПоВидуОтпуска.ДатаОкончания Тогда
					ДатаОкончанияДоп = ВыборкаПоВидуОтпуска.ДатаОкончания; 
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска) Тогда
					СтрокаВидДопОтпуска = СтрокаВидДопОтпуска + ", " + Строка(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.Продолжительность) Тогда
					ПродолжительностьДоп = ПродолжительностьДоп + ВыборкаПоВидуОтпуска.Продолжительность;
				КонецЕсли;
				
				// Заполнение параметров приложения к приказу
				ПараметрыДопОтпуска = Новый Структура;
				ПараметрыДопОтпуска.Вставить("НомерОтпуска", НомерДополнительногоОтпуска);
				ПараметрыДопОтпуска.Вставить("НазваниеОтпуска", Строка(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска));
				ПараметрыДопОтпуска.Вставить("Продолжительность", ВыборкаПоВидуОтпуска.Продолжительность);
				ПараметрыДопОтпуска.Вставить("Основание", ВыборкаПоВидуОтпуска.Основание);
				ПараметрыДопОтпуска.Вставить("УказанПериодЗаКоторыйПредоставляетсяОтпуск", ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск));
				
				ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.ДатаНачала, "ДЛФ=DD");
				ПараметрыДопОтпуска.Вставить("ДатаНачалаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
				ПараметрыДопОтпуска.Вставить("ДатаНачалаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
				
				ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.ДатаОкончания, "ДЛФ=DD");
				ПараметрыДопОтпуска.Вставить("ДатаОкончанияЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
				ПараметрыДопОтпуска.Вставить("ДатаОкончанияМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
				
				ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск, "ДЛФ=DD");
				ПараметрыДопОтпуска.Вставить("ДатаНачалаПериодаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
				ПараметрыДопОтпуска.Вставить("ДатаНачалаПериодаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
				
				ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск, "ДЛФ=DD");
				ПараметрыДопОтпуска.Вставить("ДатаОкончанияПериодаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
				ПараметрыДопОтпуска.Вставить("ДатаОкончанияПериодаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
				
				Параметры.ДополнительныеОтпуска.Добавить(ПараметрыДопОтпуска);
				
				НомерДополнительногоОтпуска = НомерДополнительногоОтпуска + 1;
				
			КонецЦикла;
			
			РезультатСклонения = "";
			ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 3, РезультатСклонения, Параметры.Пол);
			Параметры.Работник	= РезультатСклонения;		
			
			ПредставлениеДатыНачалаДопОтпуска  = Формат(ДатаНачалаДоп, "ДЛФ=DD");
			Параметры.ДатаСДопЧисло = ?(ЗначениеЗаполнено(ДатаНачалаДоп), СокрЛП(Лев(ПредставлениеДатыНачалаДопОтпуска,2)), "      ");
			Параметры.ДатаСДопМесяцГод = ?(ЗначениеЗаполнено(ДатаНачалаДоп),  СокрЛП(Прав(ПредставлениеДатыНачалаДопОтпуска, СтрДлина(ПредставлениеДатыНачалаДопОтпуска)-2)), "                     г.");
			
			ПредставлениеДатыОкончанияДопОтпуска  = Формат(ДатаОкончанияДоп, "ДЛФ=DD");
			Параметры.ДатаПоДопЧисло = ?(ЗначениеЗаполнено(ДатаОкончанияДоп), СокрЛП(Лев(ПредставлениеДатыОкончанияДопОтпуска,2)), "      ");
			Параметры.ДатаПоДопМесяцГод = ?(ЗначениеЗаполнено(ДатаОкончанияДоп),  СокрЛП(Прав(ПредставлениеДатыОкончанияДопОтпуска, СтрДлина(ПредставлениеДатыОкончанияДопОтпуска)-2)), "                     г.");
			
			Если ЗначениеЗаполнено(ПродолжительностьДоп) Тогда
				Параметры.ПродолжительностьДоп = ПродолжительностьДоп;
				ПродолжительностьВсего = ПродолжительностьВсего + ПродолжительностьДоп;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПродолжительностьВсего) Тогда
				Параметры.ПродолжительностьВсего = ПродолжительностьВсего;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаВидДопОтпуска) Тогда
				СтрокаВидДопОтпуска = Прав(СтрокаВидДопОтпуска,СтрДлина(СтрокаВидДопОтпуска) - 2);
				Параметры.ВидДопОтпуска = СтрокаВидДопОтпуска;
			КонецЕсли;
			
			Если ТипЗнч(ВыборкаПоВидуОтпуска.Ссылка) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда 
				Параметры.ВидДопОтпуска = "Отпуск по уходу за ребенком до 3-х лет";
			КонецЕсли;		
			
			Если НЕ ЗначениеЗаполнено(ДатаНачалаВсего) ИЛИ (ЗначениеЗаполнено(ДатаНачалаДоп) И ДатаНачалаВсего > ДатаНачалаДоп) Тогда
				ДатаНачалаВсего = ДатаНачалаДоп;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДатаОкончанияВсего) ИЛИ (ЗначениеЗаполнено(ДатаОкончанияДоп) И ДатаОкончанияВсего < ДатаОкончанияДоп) Тогда
				ДатаОкончанияВсего = ДатаОкончанияДоп;
			КонецЕсли;
			
			ПредставлениеДатыНачалаВсего  = Формат(ДатаНачалаВсего, "ДЛФ=DD");
			Параметры.ДатаНачалаВсегоЧисло = ?(ЗначениеЗаполнено(ДатаНачалаВсего), СокрЛП(Лев(ПредставлениеДатыНачалаВсего,2)), "      ");
			Параметры.ДатаНачалаВсегоМесяцГод = ?(ЗначениеЗаполнено(ДатаНачалаВсего),  СокрЛП(Прав(ПредставлениеДатыНачалаВсего, СтрДлина(ПредставлениеДатыНачалаВсего)-2)), "                     г.");
			
			ПредставлениеДатыОкончанияВсего  = Формат(ДатаОкончанияВсего, "ДЛФ=DD");
			Параметры.ДатаОкончанияВсегоЧисло = ?(ЗначениеЗаполнено(ДатаОкончанияВсего), СокрЛП(Лев(ПредставлениеДатыОкончанияВсего,2)), "      ");
			Параметры.ДатаОкончанияВсегоМесяцГод = ?(ЗначениеЗаполнено(ДатаОкончанияВсего),  СокрЛП(Прав(ПредставлениеДатыОкончанияВсего, СтрДлина(ПредставлениеДатыОкончанияВсего)-2)), "                     г.");
			
			Если Параметры.Свойство("Подразделение") Тогда 
				Подразделение = Параметры.Подразделение;
				
				ЗапросПоПодразделениям = Новый Запрос;
				ТекстЗапроса = "ВЫБРАТЬ
				|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка) КАК Ссылка
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
				|ГДЕ
				|	ПодразделенияОрганизаций.Ссылка = &Ссылка
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка)
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
				|ГДЕ
				|	ПодразделенияОрганизаций.Ссылка = &СсылкаРодитель
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ПРЕДСТАВЛЕНИЕ(ПодразделенияОрганизаций.Ссылка)
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
				|ГДЕ
				|	ПодразделенияОрганизаций.Ссылка = &СсылкаРодительРодитель";
				ЗапросПоПодразделениям.Текст = ТекстЗапроса;
				ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
				ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
				ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
				
				ВыборкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выбрать();
				
				СтрокаПодразделения = "";
				
				Пока ВыборкаПодразделений.Следующий() Цикл 			
					Если НРег(ВыборкаПодразделений.Ссылка) = "штат" Тогда Продолжить; КонецЕсли;
					Если НРег(ВыборкаПодразделений.Ссылка) = "агенты" Тогда Продолжить; КонецЕсли;
					СтрокаПодразделения = СтрокаПодразделения  + " " + ВыборкаПодразделений.Ссылка;
				КонецЦикла;
				
				Параметры.Подразделение = СтрокаПодразделения;
				
			КонецЕсли;
			
			Сведения = "РуководительКадровойСлужбы,ДолжностьРуководителяКадровойСлужбы";
			ОтветственныеЛица = СведенияОбОтветственныхЛицах.СведенияОбОтветственныхЛицах(Параметры.Ссылка.Организация, Сведения, Параметры.Ссылка.Дата);
			
			Параметры.ДолжностьРуководителя = ОтветственныеЛица.ДолжностьРуководителяКадровойСлужбы;		
			
			ЗапросФИОФизЛица = Новый Запрос();
			ЗапросФИОФизЛица.Текст = "ВЫБРАТЬ
			|	ФИОФизическихЛицСрезПоследних.Фамилия,
			|	ФИОФизическихЛицСрезПоследних.Имя,
			|	ФИОФизическихЛицСрезПоследних.Отчество
			|ИЗ
			|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Период, ФизическоеЛицо = &ФизическоеЛицо) КАК ФИОФизическихЛицСрезПоследних";
			ЗапросФИОФизЛица.УстановитьПараметр("Период",Параметры.Ссылка.Дата);
			ЗапросФИОФизЛица.УстановитьПараметр("ФизическоеЛицо",ОтветственныеЛица.РуководительКадровойСлужбы);
			
			ВыборкаЗапросФИОФизЛица = ЗапросФИОФизЛица.Выполнить().Выбрать();
			
			Если ВыборкаЗапросФИОФизЛица.Следующий() Тогда 
				Параметры.РуководительРасшифровкаПодписи = Лев(ВыборкаЗапросФИОФизЛица.Имя,1) +"."+ Лев(ВыборкаЗапросФИОФизЛица.Отчество,1) +". "+ ВыборкаЗапросФИОФизЛица.Фамилия;			
			Иначе 
				Параметры.РуководительРасшифровкаПодписи = ОтветственныеЛица.РуководительКадровойСлужбы;
			КонецЕсли;
			
			МассивПараметров.Добавить(Параметры);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивПараметров;
КонецФункции 

Функция СтруктураПараметровПриказаТ6()
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("НазваниеОрганизации");				
	Параметры.Вставить("КодПоОКПО");
    Параметры.Вставить("Работник");						
	Параметры.Вставить("НомерДок");	
	Параметры.Вставить("ДатаДок");	
	Параметры.Вставить("ТабельныйНомер");
	Параметры.Вставить("Подразделение");							
	Параметры.Вставить("Должность");
	Параметры.Вставить("НачалоПериодаЗаКоторыйПредоставляетсяОтпуск");	
	Параметры.Вставить("КонецПериодаЗаКоторыйПредоставляетсяОтпуск");
	Параметры.Вставить("Продолжительность");
	Параметры.Вставить("ДатаНачалаЧисло");
	Параметры.Вставить("ДатаНачалаМесяцГод"); 
	Параметры.Вставить("ДатаОкончанияЧисло"); 
	Параметры.Вставить("ДатаОкончанияМесяцГод");  
	Параметры.Вставить("ПродолжительностьДоп");
	Параметры.Вставить("ДатаСДопЧисло");
	Параметры.Вставить("ДатаСДопМесяцГод");
	Параметры.Вставить("ДатаПоДопЧисло");
	Параметры.Вставить("ДатаПоДопМесяцГод");
    Параметры.Вставить("ВидДопОтпуска");						
	Параметры.Вставить("ПродолжительностьВсего");
	Параметры.Вставить("ДатаНачалаВсегоЧисло");
	Параметры.Вставить("ДатаНачалаВсегоМесяцГод");
	Параметры.Вставить("ДатаОкончанияВсегоЧисло");
	Параметры.Вставить("ДатаОкончанияВсегоМесяцГод");
	
	Параметры.Вставить("ДолжностьРуководителя");
	Параметры.Вставить("РуководительРасшифровкаПодписи");	
	
	Параметры.Вставить("ДополнительныеОтпуска", Новый Массив);

	Возврат Параметры;
КонецФункции 

/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
///////ПРОЦЕДУРА ПЕЧАТИ

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("ПФ_MXL_Т6");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Т6") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ПФ_MXL_Т6", "Приказ на отпуск Т-6",	ТабличныйДокументПриказаТ6(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////

СоответствиеДолжностьПечатнойФормы = Новый Соответствие;
СоответствиеДолжностьПечатнойФормы.Вставить(Справочники.Должности.НайтиПоНаименованию("Начальник отдела"),"Начальник отдела кадрового администрирования");