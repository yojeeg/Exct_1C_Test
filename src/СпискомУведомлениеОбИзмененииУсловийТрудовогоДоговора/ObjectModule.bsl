////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс
// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Назначение.Добавить(Неопределено);
	ПараметрыРегистрации.Версия = "1.3";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Уведомление об изменении условий трудового договора'");
	НоваяКоманда.Идентификатор = "СпискомУведомлениеОбИзмененииУсловийТрудовогоДоговора";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции
#КонецОбласти

#Область ПроцедурыПечати
/////////////////////////////////////////////////////////////////////////
///////СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУКНЦИИ
Функция ПолучитьДанныеПечати(МассивОбъектов) Экспорт
	Сотрудник = МассивОбъектов[0];
	Если ЗначениеЗаполнено(Сотрудник) Тогда 
		ДанныеДляПечати = ПолучитьДанныеДляПечати(Сотрудник);
		Если ДанныеДляПечати <> Неопределено Тогда 
			СоответствиеПараметров = Новый Структура;
			Для Каждого СтрокаСтруктуры Из ДанныеДляПечати Цикл 
				Если СтрНайти(СтрокаСтруктуры.Ключ, "Дата") Тогда 
					ДобавитьПараметр(СоответствиеПараметров, СтрокаСтруктуры.Ключ, Формат(СтрокаСтруктуры.Значение,"ДЛФ=ДД"));
				Иначе 
					ДобавитьПараметр(СоответствиеПараметров, СтрокаСтруктуры.Ключ, СтрокаСтруктуры.Значение);
				КонецЕсли;
			КонецЦикла;
			Возврат СоответствиеПараметров;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(Сотрудник)
	Если ЗначениеЗаполнено(Сотрудник) Тогда 
		ДанныеПечати = СтруктураПечати();
		МассивОкладов = Новый Массив;
		МассивОкладов.Добавить(Справочники.ПоказателиРасчетаЗарплаты.Оклад);
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник,
		               |	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """") КАК ФИОПолные,
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность,
					   |	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение,
		               |	ПриемНаРаботу.ТрудовойДоговорНомер КАК НомерДог,
		               |	ПриемНаРаботу.ТрудовойДоговорДата КАК ДатаДог,
		               |	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """") КАК ИО,
		               |	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо.Пол КАК Пол,
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник.Код КАК ТабНомер
		               |ИЗ
		               |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
		               |		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу КАК ПриемНаРаботу
		               |		ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = ПриемНаРаботу.Сотрудник
		               |ГДЕ
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник = &Сотрудник";		
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			ЗаполнитьЗначенияСвойств(ДанныеПечати, Выборка);		
			РезультатСклонения = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(Выборка.ФИОПолные, 3, РезультатСклонения, Выборка.Пол) Тогда
				ДанныеПечати.ФИО = РезультатСклонения
			КонецЕсли;
			
			ДолжностьВПадеже = "";
			ТаблицаДолжностей	 	= ОпределитьДолжность(Выборка.ТекущаяДолжность);
			Для Каждого СтрокаДолжности Из ТаблицаДолжностей Цикл 
				Если СтрокаДолжности.Свойство.Заголовок = "Дательный падеж" Тогда 
					ДолжностьВПадеже = СтрокаДолжности.Значение;
				КонецЕсли;
			КонецЦикла;
			ДанныеПечати.Должность = ДолжностьВПадеже;
			
			ПодразделениеВПадеже = "";
			ТаблицаПодразделений = ОпределитьПодразделение(Выборка.ТекущееПодразделение);
			Для Каждого СтрокаПодразделения Из ТаблицаПодразделений Цикл 
				Если СтрокаПодразделения.Свойство.Заголовок = "Родительный падеж" Тогда 
					ПодразделениеВПадеже=ПодразделениеВПадеже + СокрЛП(СтрокаПодразделения.Значение) + " ";
				КонецЕсли;
			КонецЦикла;	
			ДанныеПечати.Подразделение = ПодразделениеВПадеже;
			
		КонецЕсли; 						   
		Возврат ДанныеПечати;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ДобавитьПараметр(Структура, ИсходнаяСтрока, СтрокаЗамены)
	 Структура.Вставить(ИсходнаяСтрока,СтрокаЗамены);
КонецПроцедуры

Функция ОпределитьДолжность(Должность)
	
	ЗапросПоДолжностям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДополнительныеСведения.Объект,
	               |	ДополнительныеСведения.Свойство КАК Свойство,
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Объект = &Объект";
	ЗапросПоДолжностям.Текст = ТекстЗапроса;
	ЗапросПоДолжностям.УстановитьПараметр("Объект",Должность);
	
	ВыгрузкаДолжностей = ЗапросПоДолжностям.Выполнить().Выгрузить();
		
	Возврат ВыгрузкаДолжностей;	
	
КонецФункции

Функция ОпределитьПодразделение(Подразделение)
	
	ЗапросПоПодразделениям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект,
	|	ДополнительныеСведения.Свойство КАК Свойство,
	|	ДополнительныеСведения.Значение КАК Значение,
	|	""1"" КАК УровеньВложенности
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Ссылка
	|ОБЪЕДИНИТЬ ВСЕ                             	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""2""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодитель
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""3""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
	ЗапросПоПодразделениям.Текст = ТекстЗапроса;
	ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
	
	ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			
	Возврат ВыгрузкаПодразделений;
	
КонецФункции

Функция СтруктураПечати()
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("Должность");
	СтруктураПечати.Вставить("Подразделение");
	СтруктураПечати.Вставить("ФИО");
	СтруктураПечати.Вставить("ТабНомер");
	СтруктураПечати.Вставить("НомерДог");
	СтруктураПечати.Вставить("ДатаДог");
	СтруктураПечати.Вставить("ИО");
	Возврат СтруктураПечати;
КонецФункции
#КонецОбласти