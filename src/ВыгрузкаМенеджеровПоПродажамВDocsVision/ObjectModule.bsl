Функция СведенияОВнешнейОбработке() Экспорт
	
   РегистрационныеДанные = Новый Структура;
   РегистрационныеДанные.Вставить("Наименование", "Выгрузка менеджеров по продажам в docs vision");
   РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
   РегистрационныеДанные.Вставить("Версия", "1.0");
   РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
   РегистрационныеДанные.Вставить("Информация", "Выгрузка менеджеров по продажам в docs vision");
   
   Команды = Новый ТаблицаЗначений;
   Команды.Колонки.Добавить("Идентификатор");
   Команды.Колонки.Добавить("Представление");
   Команды.Колонки.Добавить("Модификатор");
   Команды.Колонки.Добавить("ПоказыватьОповещение");
   Команды.Колонки.Добавить("Использование");
   
   Команда = Команды.Добавить();
   Команда.Идентификатор 		= "1";
   Команда.Представление 		= "Выгрузка менеджеров по продажам в docs vision";
   Команда.ПоказыватьОповещение = Истина;
   Команда.Использование 		= "ВызовСерверногоМетода";
   
   РегистрационныеДанные.Вставить("Команды", Команды);
   
   Возврат РегистрационныеДанные;
   
КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды = Неопределено) Экспорт
	
	Каталог = "\\10.146.1.28\From1C\";
	ИмяФайла = "managers.txt";
	Файл  = Новый ТекстовыйДокумент;
	Файл.Очистить();
	
	// Проверка соответствия почты шаблону
	Шаблон = ".+@.+\..+";
	
	RegExp = Новый COMОбъект("VBScript.RegExp"); // создаем объект для работы  с регулярными выражениями
	RegExp.MultiLine = Ложь;    // истина — текст многострочный, ложь — одна строка
	RegExp.Global = Истина;     // истина — поиск по всей строке, ложь — до первого совпадения
	RegExp.IgnoreCase = Истина; // истина — игнорировать регистр строки при поиске
	RegExp.Pattern = Шаблон;    // шаблон (регулярное выражение) для проверки  корректности e-mail
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление КАК РабочийEmail,
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК ФизическоеЛицо
	               |ПОМЕСТИТЬ ВТ_ПочтовыеЯщики
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Вид.Наименование = ""Email (рабочий)""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК ТекущаяДолжность,
	               |	ФИОФизическихЛицСрезПоследних.Фамилия КАК Фамилия,
	               |	ФИОФизическихЛицСрезПоследних.Имя КАК Имя,
	               |	ФИОФизическихЛицСрезПоследних.Отчество КАК Отчество,
	               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник.Код КАК табНомер,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование КАК Должность,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Подразделение.Наименование КАК Подразделение,
	               |	ЕСТЬNULL(ВТ_ПочтовыеЯщики.РабочийEmail, """") КАК РабочийEmail
	               |ИЗ
	               |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ТекущаяДата, ) КАК ФИОФизическихЛицСрезПоследних
	               |		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&ТекущаяДата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПочтовыеЯщики КАК ВТ_ПочтовыеЯщики
	               |		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = ВТ_ПочтовыеЯщики.ФизическоеЛицо
	               |ГДЕ
	               |	ТекущиеКадровыеДанныеСотрудников.ДатаПриема <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= &ТекущаяДата)
	               |	И (КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""менеджер по продажам""
	               |			ИЛИ КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""Менеджер по продажам""
	               |			ИЛИ КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""директор по продажам""
	               |			ИЛИ КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""Директор по продажам""
	               |			ИЛИ КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""Старший директор по продажам""
	               |			ИЛИ КадроваяИсторияСотрудниковСрезПоследних.Должность.Наименование = ""старший директор по продажам"")
	               |	И НЕ ТекущиеКадровыеДанныеСотрудников.Сотрудник.ППФ_Агент
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Фамилия,
	               |	Имя,
	               |	Отчество
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ПочтовыеЯщики";
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл 
		СтрокаФайла = Выборка.Фамилия + ";" + Выборка.Имя + ";" + Выборка.Отчество + ";" + Выборка.табНомер+";"+Выборка.Должность+";"+Выборка.Подразделение;
		Если RegExp.Test(Выборка.РабочийEmail) Тогда 
			СтрокаФайла = СтрокаФайла + ";"+Выборка.РабочийEmail;
		КонецЕсли;
		Файл.ДобавитьСтроку(СтрокаФайла);
	КонецЦикла;
	Файл.Записать(	Каталог + "\"+ ИмяФайла, КодировкаТекста.UTF8);
	
КонецПроцедуры
