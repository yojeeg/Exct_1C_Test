Функция СведенияОВнешнейОбработке() Экспорт
	
   РегистрационныеДанные = Новый Структура;
   РегистрационныеДанные.Вставить("Наименование", "Выгрузка данных по сотрудникам в НФО");
   РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
   РегистрационныеДанные.Вставить("Версия", "1.0");
   РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
   РегистрационныеДанные.Вставить("Информация", "Выгрузка данных по сотрудникам в НФО");
   
   Команды = Новый ТаблицаЗначений;
   Команды.Колонки.Добавить("Идентификатор");
   Команды.Колонки.Добавить("Представление");
   Команды.Колонки.Добавить("Модификатор");
   Команды.Колонки.Добавить("ПоказыватьОповещение");
   Команды.Колонки.Добавить("Использование");
   
   Команда = Команды.Добавить();
   Команда.Идентификатор = "1";
   Команда.Представление = "Выгрузка данных по сотрудникам в НФО";
   Команда.ПоказыватьОповещение = Истина;
   Команда.Использование = "ВызовСерверногоМетода";
   
   РегистрационныеДанные.Вставить("Команды", Команды);
   
   Возврат РегистрационныеДанные;
   
КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды = Неопределено) Экспорт
	
	ИдентификаторПроцесса = НачатьПроцесс("17");
	
	ПараметрыПодключения = Новый Структура("Версия,Сервер,ИмяБазаДанных,Пользователь,Пароль","V83","RU00SP1C01","RU10_NFO","Синхронизация", "7NtSydTYtxTsnBChhBLq");
	//ПараметрыПодключения = Новый Структура("Версия,Сервер,ИмяБазаДанных,Пользователь,Пароль","V83","RU01ST1C01","RU10_NFO_TEST","Синхронизация", "7NtSydTYtxTsnBChhBLq");
	
	COM_Соединение = УстановитьCOMПодключениеСБазойДанных1С(ПараметрыПодключения);
	
	Если COM_Соединение <> Неопределено Тогда
		
		МВТ = Новый МенеджерВременныхТаблиц;
		
		ЗапросДействующиеСотрудники = Новый Запрос;
		ЗапросДействующиеСотрудники.МенеджерВременныхТаблиц = МВТ;
		ЗапросДействующиеСотрудники.Текст = 
		"ВЫБРАТЬ
		|	ТекущиеКадровыеДанныеСотрудников.Сотрудник,
		|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо,
		|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема,
		|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения,
		|	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение,
		|	ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность
		|ПОМЕСТИТЬ ВТ_ТЕКУЩИЕ_СОТРУДНИКИ
		|ИЗ
		|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|ГДЕ
		|	ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ТекущиеКадровыеДанныеСотрудников.ДатаПриема <> ДАТАВРЕМЯ(1, 1, 1)
		|	И ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)";
		
		ЗапросДействующиеСотрудники.Выполнить();
		
		//////////////////////////////////////////////////
		// Физические лица
		//////////////////////////////////////////////////
		
		ФизЛица = Новый ТаблицаЗначений;
		ФизЛица.Колонки.Добавить("ФизЛицоКод", 			Новый ОписаниеТипов("Строка"));
		ФизЛица.Колонки.Добавить("ИНН", 				Новый ОписаниеТипов("Строка"));
		ФизЛица.Колонки.Добавить("СтраховойНомерПФР",	Новый ОписаниеТипов("Строка"));
		ФизЛица.Колонки.Добавить("Наименование", 		Новый ОписаниеТипов("Строка"));
		ФизЛица.Колонки.Добавить("ПометкаУдаления", 	Новый ОписаниеТипов("Булево"));
		ФизЛица.Колонки.Добавить("ДатаРождения", 		Новый ОписаниеТипов("Дата"));
		ФизЛица.Колонки.Добавить("Пол", 				Новый ОписаниеТипов("Строка"));
		
		ЗапросФизическиеЛица = Новый Запрос;
		ЗапросФизическиеЛица.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизическиеЛица.Код КАК ФизЛицоКод,
		|	ФизическиеЛица.ИНН КАК ИНН,
		|	ФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ФизическиеЛица.Наименование КАК Наименование,
		|	ФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ПРЕДСТАВЛЕНИЕ(ФизическиеЛица.Пол) КАК Пол
		|ИЗ
		|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|ГДЕ
		|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема <> ДАТАВРЕМЯ(1, 1, 1)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ФизическиеЛица.ЭтоГруппа = ЛОЖЬ
		|	И НЕ ФизическиеЛица.СтраховойНомерПФР = """"
		|	И НЕ ФизическиеЛица.СтраховойНомерПФР ПОДОБНО ""%-   -%""";    //
		
		РезультатФизическиеЛица = ЗапросФизическиеЛица.Выполнить();
		
		Если Не РезультатФизическиеЛица.Пустой() Тогда  
			
			ВыгрузкаФизическиеЛица = РезультатФизическиеЛица.Выгрузить();
			Для Каждого Строка Из ВыгрузкаФизическиеЛица Цикл
				НоваяСтрока = ФизЛица.Добавить();
				НоваяСтрока.ДатаРождения 		= Строка.ДатаРождения;
				НоваяСтрока.ИНН 				= СокрЛП(Строка.ИНН);
				НоваяСтрока.СтраховойНомерПФР	= СокрЛП(Строка.СтраховойНомерПФР);
				НоваяСтрока.Наименование 		= Строка.Наименование;
				НоваяСтрока.ПометкаУдаления 	= Строка.ПометкаУдаления;
				НоваяСтрока.ФизЛицоКод 			= СокрЛП(Строка.ФизЛицоКод);
				НоваяСтрока.Пол 				= СокрЛП(Строка.Пол);
			КонецЦикла;
			
		КонецЕсли;
		
		Если ФизЛица.Количество() > 0 Тогда
		
			Запрос6 = COM_Соединение.NewObject("Запрос");
			Запрос6.Текст =
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ТЗ_ФИЗ_ЛИЦА.ФизЛицоКод КАК СТРОКА(10)) КАК ФизЛицоКод,
			|	ВЫРАЗИТЬ(ТЗ_ФИЗ_ЛИЦА.ИНН КАК СТРОКА(12)) КАК ИНН,
			|	ТЗ_ФИЗ_ЛИЦА.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ВЫРАЗИТЬ(ТЗ_ФИЗ_ЛИЦА.Наименование КАК СТРОКА(50)) КАК Наименование,
			|	ТЗ_ФИЗ_ЛИЦА.ПометкаУдаления КАК ПометкаУдаления,
			|	ТЗ_ФИЗ_ЛИЦА.ДатаРождения КАК ДатаРождения,
			|	ТЗ_ФИЗ_ЛИЦА.Пол КАК Пол
			|ПОМЕСТИТЬ ВТ_ФИЗ_ЛИЦА
			|ИЗ
			|	&ТЗ_ФИЗ_ЛИЦА КАК ТЗ_ФИЗ_ЛИЦА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка КАК Ссылка,
			|	ВЫРАЗИТЬ(ФизическиеЛица.Наименование КАК СТРОКА(50)) КАК БНФОНаименование,
			|	ВЫРАЗИТЬ(ФизическиеЛица.Код КАК СТРОКА(10)) КАК Код,
			|	ВТ_ФИЗ_ЛИЦА.ФизЛицоКод КАК ФизЛицоКод,
			|	ВТ_ФИЗ_ЛИЦА.ИНН КАК ИНН,
			|	ВТ_ФИЗ_ЛИЦА.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ВТ_ФИЗ_ЛИЦА.Наименование КАК Наименование,
			|	ВТ_ФИЗ_ЛИЦА.ПометкаУдаления КАК ПометкаУдаления,
			|	ВТ_ФИЗ_ЛИЦА.ДатаРождения КАК ДатаРождения,
			|	ВТ_ФИЗ_ЛИЦА.Пол КАК Пол
			|ИЗ
			|	ВТ_ФИЗ_ЛИЦА КАК ВТ_ФИЗ_ЛИЦА
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО ВЫРАЗИТЬ(ВТ_ФИЗ_ЛИЦА.СтраховойНомерПФР КАК СТРОКА(14)) = ФизическиеЛица.СтраховойНомерПФР
			|ГДЕ
			|	ВТ_ФИЗ_ЛИЦА.ФизЛицоКод <> """"
			|	И (ФизическиеЛица.ЭтоГруппа = ЛОЖЬ
			|			ИЛИ ФизическиеЛица.ЭтоГруппа ЕСТЬ NULL)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ФИЗ_ЛИЦА";
			
			//было
			//|		ПО (ВТ_ФИЗ_ЛИЦА.Наименование = (ВЫРАЗИТЬ(ФизическиеЛица.Наименование КАК СТРОКА(50))))
			//|			И ВТ_ФИЗ_ЛИЦА.ИНН = ФизическиеЛица.ИНН
			
			//|		ПО ВТ_ФИЗ_ЛИЦА.СтраховойНомерПФР = ФизическиеЛица.СтраховойНомерПФР

			Запрос6.УстановитьПараметр("ТЗ_ФИЗ_ЛИЦА", COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(ФизЛица)));
			
			Результат6 = Запрос6.Выполнить(); 
			
			Если Не Результат6.Пустой() Тогда
				Выборка6 = Результат6.Выбрать();
				Пока Выборка6.Следующий() Цикл
					Если ЗначениеЗаполнено(Выборка6.Код) Тогда	
												
						СсылкаСотрудник = Выборка6.Ссылка;
						
						Если СсылкаСотрудник.ДатаРождения  				= Выборка6.ДатаРождения
							И СокрЛП(СсылкаСотрудник.ИНН)				= СокрЛП(Выборка6.ИНН)
							И СокрЛП(СсылкаСотрудник.СтраховойНомерПФР)	= СокрЛП(Выборка6.СтраховойНомерПФР)
							И СокрЛП(СсылкаСотрудник.Наименование) 		= СокрЛП(Выборка6.Наименование)
							И СсылкаСотрудник.ПометкаУдаления 			= Выборка6.ПометкаУдаления
							И СокрЛП(СсылкаСотрудник.ФИО) 				= СокрЛП(Выборка6.Наименование) Тогда 
							Продолжить;
						КонецЕсли;
						
						ОбъектСотрудник = СсылкаСотрудник.ПолучитьОбъект();
						
						ОбъектСотрудник.ДатаРождения 		= Выборка6.ДатаРождения;
						ОбъектСотрудник.ИНН 				= Выборка6.ИНН;
						ОбъектСотрудник.СтраховойНомерПФР	= Выборка6.СтраховойНомерПФР;
						ОбъектСотрудник.Наименование 		= Выборка6.Наименование;
						ОбъектСотрудник.ПометкаУдаления 	= Выборка6.ПометкаУдаления;
						ОбъектСотрудник.Код 				= Выборка6.ФизЛицоКод;
						ОбъектСотрудник.Пол 				= Выборка6.Пол;
						ОбъектСотрудник.ФИО 				= Выборка6.Наименование;
						
						Попытка
							ОбъектСотрудник.Записать();
						Исключение
							ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
						КонецПопытки; 
						
					Иначе
						
						НовыйСотрудник = COM_Соединение.Справочники["ФизическиеЛица"].СоздатьЭлемент();
						НовыйСотрудник.ДатаРождения 		= Выборка6.ДатаРождения;
						НовыйСотрудник.ИНН 					= СокрЛП(Выборка6.ИНН);
						НовыйСотрудник.СтраховойНомерПФР	= СокрЛП(Выборка6.СтраховойНомерПФР);
						НовыйСотрудник.Наименование 		= СокрЛП(Выборка6.Наименование);
						НовыйСотрудник.ПометкаУдаления 		= Выборка6.ПометкаУдаления;
						НовыйСотрудник.Код 					= СокрЛП(Выборка6.ФизЛицоКод);
						НовыйСотрудник.Пол 					= Выборка6.Пол;
						НовыйСотрудник.ФИО 					= СокрЛП(Выборка6.Наименование);
						
						Попытка
							НовыйСотрудник.Записать();
						Исключение		
							ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
						КонецПопытки;
						
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;	
		
		//////////////////////////////////////////////////
		// Паспортные данные 
		////////////////////////////////////////////////// 
		
		ПаспортныеДанные = Новый ТаблицаЗначений;
		ПаспортныеДанные.Колонки.Добавить("ФизЛицоКод", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		ПаспортныеДанные.Колонки.Добавить("ДокументВид", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("ДокументСерия", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("ДокументНомер", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("ДокументДатаВыдачи", Новый ОписаниеТипов("Дата"));
		ПаспортныеДанные.Колонки.Добавить("ДокументКемВыдан", Новый ОписаниеТипов("Строка"));
		ПаспортныеДанные.Колонки.Добавить("ДокументКодПодразделения", Новый ОписаниеТипов("Строка"));

		ЗапросПаспортныеДанные = Новый Запрос;
		ЗапросПаспортныеДанные.МенеджерВременныхТаблиц = МВТ;
		ЗапросПаспортныеДанные.Текст = 
		"ВЫБРАТЬ
		|	ДокументыФизическихЛиц.Период,
		|	ДокументыФизическихЛиц.Физлицо.Код КАК ФизЛицоКод,
		|	ДокументыФизическихЛиц.Физлицо.Наименование КАК Наименование,
		|	ДокументыФизическихЛиц.Физлицо.ИНН КАК ИНН,
		|	ДокументыФизическихЛиц.ВидДокумента КАК ДокументВид,
		|	ДокументыФизическихЛиц.Серия КАК ДокументСерия,
		|	ДокументыФизическихЛиц.Номер КАК ДокументНомер,
		|	ДокументыФизическихЛиц.ДатаВыдачи КАК ДокументДатаВыдачи,
		|	ДокументыФизическихЛиц.КемВыдан КАК ДокументКемВыдан,
		|	ДокументыФизическихЛиц.КодПодразделения КАК ДокументКодПодразделения
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|ГДЕ
		|	ДокументыФизическихЛиц.Физлицо В
		|			(ВЫБРАТЬ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ.ФизическоеЛицо
		|			ИЗ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ КАК ВТ_ТЕКУЩИЕ_СОТРУДНИКИ)";
			
		РезультатПаспортныеДанные = ЗапросПаспортныеДанные.Выполнить();
	
		Если Не РезультатПаспортныеДанные.Пустой() Тогда
			
			ВыборкаПаспортныеДанные = РезультатПаспортныеДанные.Выбрать();
			Пока ВыборкаПаспортныеДанные.Следующий() Цикл
				НоваяСтрока2 = ПаспортныеДанные.Добавить();
				НоваяСтрока2.ФизЛицоКод 				= СокрЛП(ВыборкаПаспортныеДанные.ФизЛицоКод);
				НоваяСтрока2.Наименование 				= СокрЛП(ВыборкаПаспортныеДанные.Наименование);
				НоваяСтрока2.ИНН 						= СокрЛП(ВыборкаПаспортныеДанные.ИНН);
				НоваяСтрока2.Период 					= ВыборкаПаспортныеДанные.Период;
				НоваяСтрока2.ДокументСерия 				= ВыборкаПаспортныеДанные.ДокументСерия;
				НоваяСтрока2.ДокументНомер 				= СокрЛП(ВыборкаПаспортныеДанные.ДокументНомер);
				НоваяСтрока2.ДокументДатаВыдачи 		= ВыборкаПаспортныеДанные.ДокументДатаВыдачи;
				НоваяСтрока2.ДокументКемВыдан 			= СокрЛП(ВыборкаПаспортныеДанные.ДокументКемВыдан);
				НоваяСтрока2.ДокументКодПодразделения 	= СокрЛП(ВыборкаПаспортныеДанные.ДокументКодПодразделения);
				НоваяСтрока2.ДокументВид 				= СокрЛП(ВыборкаПаспортныеДанные.ДокументВид);
			КонецЦикла;
			
		КонецЕсли;	
		
		Если ПаспортныеДанные.Количество() > 0 Тогда
			
			Запрос7 = COM_Соединение.NewObject("Запрос");
			Запрос7.Текст =
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ТЗ_ПД.ФизЛицоКод КАК СТРОКА(10)) КАК ФизЛицоКод,
			|	ВЫРАЗИТЬ(ТЗ_ПД.Наименование КАК СТРОКА(50)) КАК Наименование,
			|	ВЫРАЗИТЬ(ТЗ_ПД.ИНН КАК СТРОКА(12)) КАК ИНН,
			|	ТЗ_ПД.Период,
			|	ВЫРАЗИТЬ(ТЗ_ПД.ДокументВид КАК СТРОКА(250)) КАК ДокументВид,
			|	ТЗ_ПД.ДокументСерия,
			|	ТЗ_ПД.ДокументНомер,
			|	ТЗ_ПД.ДокументДатаВыдачи,
			|	ТЗ_ПД.ДокументКемВыдан,
			|	ТЗ_ПД.ДокументКодПодразделения
			|ПОМЕСТИТЬ ВТ_ПД
			|ИЗ
			|	&ТЗ_ПД КАК ТЗ_ПД
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицоКод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ПД.ФизЛицоКод,
			|	ВТ_ПД.Период,
			|	ВТ_ПД.ДокументВид,
			|	ВТ_ПД.ДокументСерия,
			|	ВТ_ПД.ДокументНомер,
			|	ВТ_ПД.ДокументДатаВыдачи,
			|	ВТ_ПД.ДокументКемВыдан,
			|	ВТ_ПД.ДокументКодПодразделения,
			|	ФизическиеЛица.Ссылка,
			|	ФизическиеЛица.Код
			|ИЗ
			|	ВТ_ПД КАК ВТ_ПД
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО ВТ_ПД.Наименование = ФизическиеЛица.Наименование
			|			И ВТ_ПД.ИНН = ФизическиеЛица.ИНН
			|ГДЕ
			|	НЕ ФизическиеЛица.Ссылка ЕСТЬ NULL
			|   И ВТ_ПД.ДокументВид <> """"
			|   И ВТ_ПД.ФизЛицоКод <> """"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_ПД";
			
			Запрос7.УстановитьПараметр("ТЗ_ПД", COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(ПаспортныеДанные)));
			
			Результат7 = Запрос7.Выполнить();
			
			Если Не Результат7.Пустой() Тогда
				Запись = COM_Соединение.РегистрыСведений["ДокументыФизическихЛиц"].СоздатьНаборЗаписей();
				Запись.Записать(Истина);

				Запись = COM_Соединение.РегистрыСведений["ДокументыФизическихЛиц"].СоздатьНаборЗаписей();
				
				Выборка7 = Результат7.Выбрать();
				Пока Выборка7.Следующий() Цикл
					
					Если СокрЛП(Выборка7.ДокументВид) = "Паспорт гражданина РФ" Тогда
						ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ПаспортРФ;
					//ИначеЕсли СокрЛП(Выборка7.ДокументВид) = "Паспорт гражданина СССР" Тогда
					//	ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ПаспортСССР;
					ИначеЕсли СокрЛП(Выборка7.ДокументВид) = "Иностранный паспорт" Тогда
						ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].НайтиПоНаименованию("Иностранный паспорт");
					//ИначеЕсли СокрЛП(Выборка7.ДокументВид) = "Военный билет офицера запаса" Тогда
					//	ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ВоенныйБилетОфицераЗапаса;
					//ИначеЕсли СокрЛП(Выборка7.ДокументВид) = "Загранпаспорт гражданина Российской Федерации" Тогда
					//	ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ЗагранпаспортРФ;
					//ИначеЕсли СокрЛП(Выборка7.ДокументВид) = "Дипломатический паспорт гражданина Российской Феде" Тогда 
					//	ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ДипломатическийПаспорт;
					Иначе
						ВидДокумента = COM_Соединение.Справочники["ВидыДокументовФизическихЛиц"].ПустаяСсылка();	
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ВидДокумента.Наименование) Тогда
						НаборЗаписей 											= Запись.Добавить();
						НаборЗаписей.Активность 								= Истина;
						НаборЗаписей.Период 									= Выборка7.Период;
						НаборЗаписей.Физлицо 									= Выборка7.Ссылка;
						НаборЗаписей.Номер 										= Выборка7.ДокументНомер;
						НаборЗаписей.Серия 										= Выборка7.ДокументСерия;
						НаборЗаписей.КемВыдан 									= Выборка7.ДокументКемВыдан;
						НаборЗаписей.КодПодразделения 							= Выборка7.ДокументКодПодразделения;
						НаборЗаписей.ДатаВыдачи 								= Выборка7.ДокументДатаВыдачи;
						НаборЗаписей.ВидДокумента 								= ВидДокумента;
						НаборЗаписей.ЯвляетсяДокументомУдостоверяющимЛичность 	= Истина;
					КонецЕсли;
					
				КонецЦикла;
				
				Попытка
					Запись.Записать(Истина);
				Исключение
					ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//////////////////////////////////////////////////
		// Контактная информация
		////////////////////////////////////////////////// 
		
		КонтактнаяИнформация = Новый ТаблицаЗначений;
		КонтактнаяИнформация.Колонки.Добавить("ФизЛицоКод", Новый ОписаниеТипов("Строка"));
		КонтактнаяИнформация.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
		КонтактнаяИнформация.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
		КонтактнаяИнформация.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
		КонтактнаяИнформация.Колонки.Добавить("Тип", Новый ОписаниеТипов("Строка"));
		КонтактнаяИнформация.Колонки.Добавить("Вид", Новый ОписаниеТипов("Строка"));
		
		ЗапросКонтактнаяИнформация = Новый Запрос;
		ЗапросКонтактнаяИнформация.МенеджерВременныхТаблиц = МВТ;
		ЗапросКонтактнаяИнформация.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка.Код КАК ФизЛицоКод,
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка.Наименование КАК Наименование,
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка.ИНН КАК ИНН,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ФизическиеЛицаКонтактнаяИнформация.Тип) КАК Тип,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ФизическиеЛицаКонтактнаяИнформация.Вид) КАК Вид,
		|	ФизическиеЛицаКонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ.ФизическоеЛицо
		|			ИЗ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ КАК ВТ_ТЕКУЩИЕ_СОТРУДНИКИ)
		|	И ФизическиеЛицаКонтактнаяИнформация.Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица)
		|			ИЛИ ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица)
		|			ИЛИ ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица)
		|			ИЛИ ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица)
		|			ИЛИ ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресДляИнформированияФизическиеЛица))";
		
		РезультатКонтактнаяИнформация = ЗапросКонтактнаяИнформация.Выполнить();
		
		Если Не РезультатКонтактнаяИнформация.Пустой() Тогда
			ВыборкаКонтактнаяИнформация = РезультатКонтактнаяИнформация.Выбрать();
			Пока ВыборкаКонтактнаяИнформация.Следующий() Цикл
				Если Не ПустаяСтрока(СокрЛП(ВыборкаКонтактнаяИнформация.Представление)) Тогда
					НоваяСтрока3 = КонтактнаяИнформация.Добавить();
					НоваяСтрока3.ФизЛицоКод 	= ВыборкаКонтактнаяИнформация.ФизЛицоКод;
					НоваяСтрока3.Наименование 	= ВыборкаКонтактнаяИнформация.Наименование;
					НоваяСтрока3.ИНН	 		= ВыборкаКонтактнаяИнформация.ИНН;
					НоваяСтрока3.Представление 	= ВыборкаКонтактнаяИнформация.Представление;
					НоваяСтрока3.Тип 			= Строка(ВыборкаКонтактнаяИнформация.Тип);
					НоваяСтрока3.Вид 			= Строка(ВыборкаКонтактнаяИнформация.Вид);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если КонтактнаяИнформация.Количество() > 0 Тогда
			
			Запрос9 = COM_Соединение.NewObject("Запрос");
			Запрос9.Текст =
			"ВЫБРАТЬ
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.ФизЛицоКод КАК СТРОКА(10)) КАК ФизЛицоКод,
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Наименование КАК СТРОКА(50)) КАК Наименование,
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.ИНН КАК СТРОКА(12)) КАК ИНН,
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Тип КАК СТРОКА(100)) КАК Тип,
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Вид КАК СТРОКА(100)) КАК Вид,
			|	ВЫРАЗИТЬ(ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Представление КАК СТРОКА(1000)) КАК Представление
			|ПОМЕСТИТЬ ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ
			|ИЗ
			|	&ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ КАК ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.ФизЛицоКод,
			|	ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Тип,
			|	ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Вид,
			|	ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Представление,
			|	ФизическиеЛица.Ссылка КАК Ссылка
			|ИЗ
			|	ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ КАК ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.Наименование = ФизическиеЛица.Наименование
			|			И  ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.ИНН = ФизическиеЛица.ИНН
			|ГДЕ
			|	НЕ ФизическиеЛица.Ссылка ЕСТЬ NULL
			|	И НЕ ФизическиеЛица.ЭтоГруппа
			|	И ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ.ФизЛицоКод <> """"
			|ИТОГИ ПО
			|	Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТ_КОНТАКТНАЯ_ИНФОРМАЦИЯ";
			
			Запрос9.УстановитьПараметр("ТЗ_КОНТАКТНАЯ_ИНФОРМАЦИЯ", COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(КонтактнаяИнформация)));
			
			Результат9 = Запрос9.Выполнить();
			
			Если Не Результат9.Пустой() Тогда
				ВыборкаФизЛицо = Результат9.Выбрать(COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(ОбходРезультатаЗапроса.ПоГруппировкам)));
				Пока ВыборкаФизЛицо.Следующий() Цикл			
					Если ЗначениеЗаполнено(ВыборкаФизЛицо.ФизЛицоКод) Тогда
						Попытка
							ОбъектФизЛицо = ВыборкаФизЛицо.Ссылка.ПолучитьОбъект();
							КИ = ОбъектФизЛицо.КонтактнаяИнформация;
						Исключение
							КИ = Неопределено;
						КонецПопытки;
						
						ВыборкаКонтакты = ВыборкаФизЛицо.Выбрать();
						Пока ВыборкаКонтакты.Следующий() Цикл	
							Если СокрЛП(ВыборкаКонтакты.Тип) = "Адрес" Тогда
								Тип = COM_Соединение.Перечисления["ТипыКонтактнойИнформации"].Адрес;	
							ИначеЕсли СокрЛП(ВыборкаКонтакты.Тип) = "Телефон" Тогда
								Тип = COM_Соединение.Перечисления["ТипыКонтактнойИнформации"].Телефон;
							КонецЕсли;
							
							Если СокрЛП(ВыборкаКонтакты.Вид) = "Адрес места проживания" Тогда
								Вид = COM_Соединение.Справочники["ВидыКонтактнойИнформации"].АдресМестаПроживанияФизическиеЛица;
								
							ИначеЕсли СокрЛП(ВыборкаКонтакты.Вид) = "Адрес по прописке" Тогда
								Вид = COM_Соединение.Справочники["ВидыКонтактнойИнформации"].АдресПоПропискеФизическиеЛица;
								
							ИначеЕсли СокрЛП(ВыборкаКонтакты.Вид) = "Домашний телефон" Тогда
								Вид = COM_Соединение.Справочники["ВидыКонтактнойИнформации"].ТелефонДомашнийФизическиеЛица;
								
							ИначеЕсли СокрЛП(ВыборкаКонтакты.Вид) = "Рабочий телефон" Тогда
								Вид = COM_Соединение.Справочники["ВидыКонтактнойИнформации"].ТелефонРабочийФизическиеЛица;
								
							ИначеЕсли СокрЛП(ВыборкаКонтакты.Вид) = "Адрес для информирования" Тогда
								Вид = COM_Соединение.Справочники["ВидыКонтактнойИнформации"].АдресДляИнформированияФизическиеЛица;
							КонецЕсли;
							
							Если COM_Соединение.ЗначениеЗаполнено(Тип) И COM_Соединение.ЗначениеЗаполнено(Вид) Тогда
								
								СтруктураПараметров = COM_Соединение.NewObject("Структура");
								СтруктураПараметров.Вставить("Тип", Тип);
								СтруктураПараметров.Вставить("Вид", Вид);
								
								НайденнаяЗапись = КИ.НайтиСтроки(СтруктураПараметров);
								Если ЗначениеИзСтрокиВнутр(COM_Соединение.ЗначениеВСтрокуВнутр(НайденнаяЗапись.Количество())) > 0 Тогда
									НоваяСтрока = НайденнаяЗапись.Получить(0);
									НоваяСтрока.Тип = Тип;
									НоваяСтрока.Вид = Вид;
									НоваяСтрока.Представление = ВыборкаКонтакты.Представление;						
								Иначе
									
									
									Структура = COM_Соединение.NewObject("Структура");
									Структура.Вставить("Тип", Тип);
									Структура.Вставить("Вид", Вид);
									Структура.Вставить("Представление", ВыборкаКонтакты.Представление);
									
									НоваяСтрока = ОбъектФизЛицо.КонтактнаяИнформация.Добавить();
									НоваяСтрока.Тип = Тип;
									НоваяСтрока.Вид = Вид;
									НоваяСтрока.Представление =  ВыборкаКонтакты.Представление;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЦикла;
						
						Попытка
							ОбъектФизЛицо.Записать();
						Исключение
							ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
						КонецПопытки;
						
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
			
		КонецЕсли;
				
		//////////////////////////////////////////////////
		// Контрагенты
		//////////////////////////////////////////////////
		
		Запрос10 = COM_Соединение.NewObject("Запрос");
		Запрос10.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизическиеЛица.Ссылка,
		|	ФизическиеЛица.ИНН,
		|	ФизическиеЛица.ФИО,
		|	ФизическиеЛица.Наименование
		|ПОМЕСТИТЬ ВТ_ФИЗИЧЕСКИЕ_ЛИЦА
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.ЭтоГруппа = ЛОЖЬ
		|	И ФизическиеЛица.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	Контрагенты.ППФ_ХОЗ_ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_КОНТРАГЕНТЫ
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.Ссылка КАК ФизЛицо,
		|	ВТ_КОНТРАГЕНТЫ.Контрагент КАК Контрагент,
		|	ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.ИНН,
		|	ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.ФИО,
		|	ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.Наименование,
		|	ДокументыФизическихЛицСрезПоследних.Серия,
		|	ДокументыФизическихЛицСрезПоследних.Номер,
		|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
		|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
		|	ДокументыФизическихЛицСрезПоследних.ВидДокумента.Наименование КАК ВидДокумента
		|ИЗ
		|	ВТ_ФИЗИЧЕСКИЕ_ЛИЦА КАК ВТ_ФИЗИЧЕСКИЕ_ЛИЦА
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КОНТРАГЕНТЫ КАК ВТ_КОНТРАГЕНТЫ
		|		ПО ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.Ссылка = ВТ_КОНТРАГЕНТЫ.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
		|		ПО ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.Ссылка = ДокументыФизическихЛицСрезПоследних.Физлицо
		|ГДЕ
		|	ВТ_КОНТРАГЕНТЫ.Контрагент ЕСТЬ NULL 
		|	И ВТ_ФИЗИЧЕСКИЕ_ЛИЦА.Наименование <> ""АГЕНТ""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ФИЗИЧЕСКИЕ_ЛИЦА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_КОНТРАГЕНТЫ";	
		
		Результат10 = Запрос10.Выполнить();
		
		Если Не Результат10.Пустой() Тогда
			
			Выборка10 = Результат10.Выбрать();
			Пока Выборка10.Следующий() Цикл
				Контрагент = ОпределитьКонтрагента(COM_Соединение, Выборка10.ФизЛицо);
				Если Контрагент = Неопределено Тогда 
					Контрагент = COM_Соединение.Справочники.Контрагенты.СоздатьЭлемент();
				КонецЕсли;
				Контрагент.ППФ_ХОЗ_ФизическоеЛицо 			= Выборка10.ФизЛицо;
				Контрагент.ЮридическоеФизическоеЛицо 		= COM_Соединение.Перечисления["ЮридическоеФизическоеЛицо"].ФизическоеЛицо;
				Если ЗначениеЗаполнено(Выборка10.ИНН) Тогда 
					Контрагент.ИНН 								= Выборка10.ИНН;
				КонецЕсли;
				Контрагент.Наименование 					= ?(Не ПустаяСтрока(СокрЛП(Выборка10.ФИО)), СокрЛП(Выборка10.ФИО), СокрЛП(Выборка10.Наименование));
				Контрагент.НаименованиеПолное 				= ?(Не ПустаяСтрока(СокрЛП(Выборка10.ФИО)), СокрЛП(Выборка10.ФИО), СокрЛП(Выборка10.Наименование));
				Контрагент.ДокументУдостоверяющийЛичность 	= СокрЛП(СокрЛП(Выборка10.ВидДокумента) + " " + СокрЛП(Выборка10.Серия) + СокрЛП(Выборка10.Номер) + ?(Не ПустаяСтрока(СокрЛП(Выборка10.КемВыдан))," Выдан: " + СокрЛП(Выборка10.КемВыдан), "") + ?(Выборка10.ДатаВыдачи = Дата(1,1,1) ,"", " " + СокрЛП(Формат(Выборка10.ДатаВыдачи, "ДФ=dd.MM.yyyy"))));
				Контрагент.Родитель 						= COM_Соединение.Справочники["Контрагенты"].НайтиПоКоду("00-000208");
				Попытка
					Контрагент.Записать();
				Исключение
					ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;    		              		
		
		//////////////////////////////////////////////////
		// Лицевые счета
		//////////////////////////////////////////////////
		
		ЛицевыеСчетаФизическихЛиц = Новый ТаблицаЗначений;
		ЛицевыеСчетаФизическихЛиц.Колонки.Добавить("ФизЛицоКод", Новый ОписаниеТипов("Строка"));
		ЛицевыеСчетаФизическихЛиц.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
		ЛицевыеСчетаФизическихЛиц.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
		ЛицевыеСчетаФизическихЛиц.Колонки.Добавить("НомерЛицевогоСчета", Новый ОписаниеТипов("Строка"));
		
		ЗапросЛицевыеСчетаФизическихЛиц = Новый Запрос;
		ЗапросЛицевыеСчетаФизическихЛиц.МенеджерВременныхТаблиц = МВТ;
		ЗапросЛицевыеСчетаФизическихЛиц.Текст =
		"ВЫБРАТЬ
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних.ФизическоеЛицо.Код КАК ФизЛицоКод,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних.ФизическоеЛицо.Наименование КАК Наименование,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних.ФизическоеЛицо.ИНН КАК ИНН,
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних.НомерЛицевогоСчета КАК НомерЛицевогоСчета
		|ИЗ
		|	РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СрезПоследних КАК ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних
		|ГДЕ
		|	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамСрезПоследних.ЗарплатныйПроект.Наименование = ""ООО """"ХКФ БАНК"""" №123""";
		
		РезультатЛицевыеСчетаФизическихЛиц = ЗапросЛицевыеСчетаФизическихЛиц.Выполнить();
		
		Если Не РезультатЛицевыеСчетаФизическихЛиц.Пустой() Тогда
			
			ВыборкаЛицевыеСчетаФизическихЛиц = РезультатЛицевыеСчетаФизическихЛиц.Выбрать();
			Пока ВыборкаЛицевыеСчетаФизическихЛиц.Следующий() Цикл
				НоваяСтрокаЛицевыеСчетаФизическихЛиц = ЛицевыеСчетаФизическихЛиц.Добавить();
				НоваяСтрокаЛицевыеСчетаФизическихЛиц.НомерЛицевогоСчета = СокрЛП(ВыборкаЛицевыеСчетаФизическихЛиц.НомерЛицевогоСчета);
				НоваяСтрокаЛицевыеСчетаФизическихЛиц.ФизЛицоКод 		= СокрЛП(ВыборкаЛицевыеСчетаФизическихЛиц.ФизЛицоКод);
				НоваяСтрокаЛицевыеСчетаФизическихЛиц.Наименование 		= СокрЛП(ВыборкаЛицевыеСчетаФизическихЛиц.Наименование);
				НоваяСтрокаЛицевыеСчетаФизическихЛиц.ИНН 				= СокрЛП(ВыборкаЛицевыеСчетаФизическихЛиц.ИНН);
			КонецЦикла;
			
		КонецЕсли;
		
		Запрос11 = COM_Соединение.NewObject("Запрос");
		Запрос11.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТЗ_ЛИЦСЧЕТА.ФизЛицоКод КАК СТРОКА(10)) КАК КодФизЛица,
		|	ВЫРАЗИТЬ(ТЗ_ЛИЦСЧЕТА.Наименование КАК СТРОКА(50)) КАК Наименование,
		|	ВЫРАЗИТЬ(ТЗ_ЛИЦСЧЕТА.ИНН КАК СТРОКА(12)) КАК ИНН,
		|	ВЫРАЗИТЬ(ТЗ_ЛИЦСЧЕТА.НомерЛицевогоСчета КАК СТРОКА(30)) КАК НомерЛицевогоСчета
		|ПОМЕСТИТЬ ВТ_ЛИЦСЧЕТА
		|ИЗ
		|	&ТЗ_ЛИЦСЧЕТА КАК ТЗ_ЛИЦСЧЕТА
		|ИНДЕКСИРОВАТЬ ПО
		|	КодФизЛица	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ВТ_ЛИЦСЧЕТА.НомерЛицевогоСчета
		|ПОМЕСТИТЬ ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА
		|ИЗ
		|	ВТ_ЛИЦСЧЕТА КАК ВТ_ЛИЦСЧЕТА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ВТ_ЛИЦСЧЕТА.Наименование = ФизическиеЛица.Наименование
		|		И ВТ_ЛИЦСЧЕТА.ИНН = ФизическиеЛица.ИНН
		|ГДЕ
		|	НЕ ФизическиеЛица.Ссылка ЕСТЬ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА.НомерЛицевогоСчета
		|ПОМЕСТИТЬ ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА
		|ИЗ
		|	ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА КАК ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА.Ссылка = Контрагенты.ППФ_ХОЗ_ФизическоеЛицо
		|ГДЕ
		|	НЕ Контрагенты.Ссылка ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА.Контрагент КАК Контрагент,
		|	ЕСТЬNULL(БанковскиеСчета.НомерСчета,"""") КАК НомерСчета,
		|	ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА.НомерЛицевогоСчета КАК НомерСчетаИзЗиУП
		|ПОМЕСТИТЬ ВТ_ПРЕД
		|ИЗ
		|	ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА КАК ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|		ПО ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА.Контрагент = БанковскиеСчета.Владелец
		|			И ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА.НомерЛицевогоСчета = БанковскиеСчета.НомерСчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПРЕД.Контрагент,
		|	ЕСТЬNULL(ВТ_ПРЕД.НомерСчета, """") КАК НомерСчета,
		|	ВТ_ПРЕД.НомерСчетаИзЗиУП
		|ИЗ
		|	ВТ_ПРЕД КАК ВТ_ПРЕД
		|ГДЕ
		|	ВТ_ПРЕД.НомерСчета = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ЛИЦСЧЕТА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ФИЗ_ЛИЦА_ЛИЦ_СЧЕТА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_КОНТРАГЕНТЫ_ЛИЦ_СЧЕТА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ПРЕД";
		
		Запрос11.УстановитьПараметр("ТЗ_ЛИЦСЧЕТА", COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(ЛицевыеСчетаФизическихЛиц)));
		                                                     
		Результат11 = Запрос11.Выполнить();
		
		Если Не Результат11.Пустой() Тогда	
			Выборка11 = Результат11.Выбрать();
			Пока Выборка11.Следующий()Цикл 
				Если COM_Соединение.ЗначениеЗаполнено(Выборка11.Контрагент) И СокрЛП(Выборка11.НомерСчетаИзЗиУП) <> "" Тогда
					НовыйБС = COM_Соединение.Справочники["БанковскиеСчета"].СоздатьЭлемент();
					НовыйБС.Наименование 			= СокрЛП(Выборка11.НомерСчетаИзЗиУП) + " в ООО ""ХКФ БАНК""";
					НовыйБС.Владелец 				= Выборка11.Контрагент;
					НовыйБС.НомерСчета 				= СокрЛП(Выборка11.НомерСчетаИзЗиУП);
					НовыйБС.Банк 					= COM_Соединение.Справочники["Банки"].НайтиПоНаименованию("ООО ""ХКФ БАНК""");
					НовыйБС.ВалютаДенежныхСредств 	= COM_Соединение.Справочники["Валюты"].НайтиПоНаименованию("RUB");
					НовыйБС.Валютный 				= Ложь;
					НовыйБС.ВидСчета 				= "Расчетный";
					Если COM_Соединение.ЗначениеЗаполнено(НовыйБС.Банк) Тогда					
						НовыйБС.Записать();	
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;  
		КонецЕсли;
		
		//////////////////////////////////////////////////
		// ФИО
		////////////////////////////////////////////////// 
		
		ИсторияФИО = Новый ТаблицаЗначений;
		ИсторияФИО.Колонки.Добавить("ФизЛицоКод", Новый ОписаниеТипов("Строка"));
		ИсторияФИО.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
		ИсторияФИО.Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
		ИсторияФИО.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		ИсторияФИО.Колонки.Добавить("Фамилия", Новый ОписаниеТипов("Строка"));
		ИсторияФИО.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
		ИсторияФИО.Колонки.Добавить("Отчество", Новый ОписаниеТипов("Строка"));
		
		ЗапросИсторияФИО = Новый Запрос;
		ЗапросИсторияФИО.МенеджерВременныхТаблиц = МВТ;
		ЗапросИсторияФИО.Текст =
		"ВЫБРАТЬ
		|	ФИОФизическихЛиц.Фамилия,
		|	ФИОФизическихЛиц.Имя,
		|	ФИОФизическихЛиц.Отчество,
		|	ФИОФизическихЛиц.ФизическоеЛицо.Код КАК ФизЛицоКод,
		|	ФИОФизическихЛиц.ФизическоеЛицо.Наименование КАК Наименование,
		|	ФИОФизическихЛиц.ФизическоеЛицо.ИНН КАК ИНН,
		|	ФИОФизическихЛиц.Период
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
		|ГДЕ
		|	ФИОФизическихЛиц.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ.ФизическоеЛицо
		|			ИЗ
		|				ВТ_ТЕКУЩИЕ_СОТРУДНИКИ КАК ВТ_ТЕКУЩИЕ_СОТРУДНИКИ)";
		
		Результат4 = ЗапросИсторияФИО.Выполнить();
		
		Если Не Результат4.Пустой() Тогда
			Выборка4 = Результат4.Выбрать();
			Пока Выборка4.Следующий() Цикл
				НоваяСтрока4 = ИсторияФИО.Добавить();
				НоваяСтрока4.Имя = СокрЛП(Выборка4.Имя);
				НоваяСтрока4.Фамилия = СокрЛП(Выборка4.Фамилия);
				НоваяСтрока4.Отчество = СокрЛП(Выборка4.Отчество);
				НоваяСтрока4.Период = Выборка4.Период;
				НоваяСтрока4.ФизЛицоКод = СокрЛП(Выборка4.ФизЛицоКод);
			КонецЦикла; 
		КонецЕсли;

		Запрос8 = COM_Соединение.NewObject("Запрос");
		Запрос8.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТЗ_ФИО.ФизЛицоКод КАК СТРОКА(10)) КАК ФизЛицоКод,
		|	ВЫРАЗИТЬ(ТЗ_ФИО.Наименование КАК СТРОКА(50)) КАК Наименование,
		|	ВЫРАЗИТЬ(ТЗ_ФИО.ИНН КАК СТРОКА(12)) КАК ИНН,
		|	ТЗ_ФИО.Период,
		|	ТЗ_ФИО.Фамилия,
		|	ТЗ_ФИО.Имя,
		|	ТЗ_ФИО.Отчество
		|ПОМЕСТИТЬ ВТ_ФИО
		|ИЗ
		|	&ТЗ_ФИО КАК ТЗ_ФИО
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицоКод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФИО.ФизЛицоКод,
		|	ВТ_ФИО.Период,
		|	ВТ_ФИО.Фамилия,
		|	ВТ_ФИО.Имя,
		|	ВТ_ФИО.Отчество,
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	ВТ_ФИО КАК ВТ_ФИО
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО ВТ_ФИО.Наименование = ФизическиеЛица.Наименование
		|			И ВТ_ФИО.ИНН = ФизическиеЛица.ИНН
		|ГДЕ
		|	НЕ ФизическиеЛица.Ссылка ЕСТЬ NULL
		|   И ВТ_ФИО.ФизЛицоКод <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ФИО";
		
		Запрос8.УстановитьПараметр("ТЗ_ФИО", COM_Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(ИсторияФИО)));
		
		Результат8 = Запрос8.Выполнить();
		
		Если Не Результат8.Пустой() Тогда
			Запись = COM_Соединение.РегистрыСведений["ФИОФизическихЛиц"].СоздатьНаборЗаписей();
			Запись.Записать(Истина);
			
			Запись = COM_Соединение.РегистрыСведений["ФИОФизическихЛиц"].СоздатьНаборЗаписей();
			Выборка8 = Результат8.Выбрать();
			
			Пока Выборка8.Следующий() Цикл
				НаборЗаписей 				= Запись.Добавить();
				НаборЗаписей.Активность 	= Истина;
				НаборЗаписей.ФизическоеЛицо = Выборка8.Ссылка;
				НаборЗаписей.Фамилия 		= СокрЛП(Выборка8.Фамилия);
				НаборЗаписей.Период 		= Выборка8.Период;
				НаборЗаписей.Имя 			= СокрЛП(Выборка8.Имя);
				НаборЗаписей.Отчество 		= СокрЛП(Выборка8.Отчество);
			КонецЦикла;
			
			Попытка
				Запись.Записать(Истина);
			Исключение
				ЗаписатьВЖурналРегистрации(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), УровеньЖурналаРегистрации.Ошибка);
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;	
	
	ЗавершитьПроцесс(ИдентификаторПроцесса, Ложь); 
КонецПроцедуры

Функция ОпределитьКонтрагента(COM_Соединение, ФизЛицо)
	
	НайденныйКонтрагент = COM_Соединение.Справочники.Контрагенты.НайтиПоРеквизиту("ППФ_ХОЗ_ФизическоеЛицо",ФизЛицо);
	Если ЗначениеЗаполнено(НайденныйКонтрагент.Код) Тогда 
		Возврат НайденныйКонтрагент.ПолучитьОбъект();
	КонецЕсли;
	
	Запрос = COM_Соединение.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Наименование = &Наименование
	               |	И Контрагенты.ППФ_ХОЗ_ФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	Запрос.УстановитьПараметр("Наименование",ФизЛицо.Наименование);				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	Запрос = COM_Соединение.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Наименование = &Наименование
	               |	И Контрагенты.ИНН = &ИНН";
	Запрос.УстановитьПараметр("Наименование",ФизЛицо.Наименование);				   
	Запрос.УстановитьПараметр("ИНН",ФизЛицо.ИНН);				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли; 
	
	Возврат Неопределено;		
	
КонецФункции

Функция УстановитьCOMПодключениеСБазойДанных1С(БазаДанных)
	COM_Соединение = Неопределено;
	Попытка
		V8 = Новый COMОбъект(Строка(БазаДанных.Версия) + ".COMConnector");
		СтрокаПодключения = "Srvr=""" 	+ БазаДанных.Сервер 			+ 
							"""; Ref=" 	+ БазаДанных.ИмяБазаДанных 	+
							"; Usr=" 	+ БазаДанных.Пользователь 	+ 
							"; Pwd=" 	+ БазаДанных.Пароль;						
		COM_Соединение = V8.Connect(СтрокаПодключения);
		Возврат COM_Соединение;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Неопределено;
	КонецПопытки;
КонецФункции // УстановитьCOMПодключениеСБазойДанных1С()

Функция НачатьПроцесс(КодСервиса)
	
	Попытка
	
		Соединение = Новый HTTPСоединение("bg:8889/");	
		
		ИмяВыходногоФайла = ПолучитьимяВременногоФайла("txt");
		
		HTTPЗапрос = Новый HTTPЗапрос("/start/" + СокрЛП(КодСервиса));
		
		Соединение.Получить(HTTPЗапрос, ИмяВыходногоФайла);
		
		ЧтениеТекста = Новый ЧтениеТекста(имяВыходногоФайла);
		
		ИдентификаторПроцесса = ЧтениеТекста.Прочитать();
		
		ЧтениеТекста.Закрыть();	
		
		УдалитьФайлы(ИмяВыходногоФайла);
		
		Возврат ИдентификаторПроцесса;
	
	Исключение
		
		Возврат Неопределено;
		
	КонецПопытки;

КонецФункции // НачатьПроцесс()
   
Функция ЗавершитьПроцесс(ИдентификаторПроцесса, Отказ, ТекстСообщения = "")
	
	Если ИдентификаторПроцесса = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Попытка
	
		Соединение = Новый HTTPСоединение("bg:8889/");
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
		
		ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, "CESU-8");
		ЗаписьТекста.Записать(ТекстСообщения);
		ЗаписьТекста.Закрыть();
		
		ИмяВыходногоФайла = ПолучитьимяВременногоФайла("txt");
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		
		УдалитьФайлы(ИмяВременногоФайла);
		
		Строка = СтрЗаменить(СтрЗаменить(СтрЗаменить(Base64Строка(ДвоичныеДанные), "+", "PPF1PPF"), Символы.ПС, ""), " ", "");
		КоличествоСтрок = СтрЧислоСтрок(Строка);
		
		НоваяСтрока = "";
		
		Для Сч = 1 По КоличествоСтрок Цикл
			
			НоваяСтрока = НоваяСтрока + СтрПолучитьСтроку(Строка, Сч);	
		
		КонецЦикла;  
		
		HTTPЗапрос = Новый HTTPЗапрос("/end/" + СокрЛП(ИдентификаторПроцесса) + "/" + ?(Отказ = Истина, "3", "2") + "/" + НоваяСтрока);
		Соединение.Получить(HTTPЗапрос, имяВыходногоФайла);
		
		ЧтениеТекста = Новый ЧтениеТекста(имяВыходногоФайла);	
		Результат = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();	
		
		УдалитьФайлы(ИмяВыходногоФайла);
		
		Возврат Результат;
		
	Исключение
		
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции // ЗавершитьПроцесс()


Процедура ЗаписатьВЖурналРегистрации(Комментарий, Уровень = Неопределено) Экспорт
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен данными с НФО'"), ?(Уровень = Неопределено, УровеньЖурналаРегистрации.Ошибка, Уровень), , , Комментарий);	
	
КонецПроцедуры
