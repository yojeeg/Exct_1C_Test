#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СписокКолонок") Тогда
		Если ТипЗнч(Параметры.СписокКолонок) = Тип("СписокЗначений") Тогда 
			СписокКолонок = Параметры.СписокКолонок;
		КонецЕсли;
	КонецЕсли;	
	
	Если Параметры.Свойство("СписокКолонокБезСокращенияПробелов") Тогда
		
		Если ТипЗнч(Параметры.СписокКолонокБезСокращенияПробелов) = Тип("СписокЗначений") Тогда
			
			СписокКолонокБезСокращенияПробелов = Параметры.СписокКолонокБезСокращенияПробелов;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("НаименованиеРезультирующейТаблицы") Тогда
		НаименованиеРезультирующейТаблицы = СокрЛП(Параметры.НаименованиеРезультирующейТаблицы);	
	Иначе
		НаименованиеРезультирующейТаблицы = "ПолучениеЗагруженнойТаблицыЗначений";
	КонецЕсли;

	Если СписокКолонок.Количество() = 0 Тогда
		СписокКолонок.Добавить("Значение");
	КонецЕсли;
	
	ПостроитьФормуОбработкиПоСпискуКолонок();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	Состояние("Загрузка данных из табличного документа...");
	ВыполнитьЗагрузкуДанныхСервер();
	Состояние("Передача данных...");
	
	Если ЗагруженныеДанные.Количество() > 0 Тогда
		Адрес = ПолучитьАдресЗагруженныхДанныхВоВременномХранилище();
		Оповестить(НаименованиеРезультирующейТаблицы, Адрес);
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьШапкуТабличногоДокумента()
	
	НомерКолонки = 1;
	Для Каждого Колонка Из СписокКолонок Цикл
		
		СплошнаяЛиния 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
		Ячейка 			= ТабличныйДокумент.Область("R1C" + Строка(НомерКолонки));
		
		Ячейка.Текст 			= ?(Не ПустаяСтрока(Колонка.Представление),СокрЛП(Колонка.Представление),СокрЛП(Колонка.Значение));
		Ячейка.Защита			= Истина;
		Ячейка.ШиринаКолонки 	= СтрДлина(Ячейка.Текст) + 5;
		Ячейка.ЦветФона 		= Новый Цвет(255,231,196);
		Ячейка.Отступ			= 1;
		Ячейка.Шрифт			= Новый Шрифт(Ячейка.Шрифт,,10,Истина);
 		Ячейка.ГраницаСверху	= СплошнаяЛиния;
		Ячейка.ГраницаСнизу		= СплошнаяЛиния;
		Ячейка.ГраницаСлева		= СплошнаяЛиния;
		Ячейка.ГраницаСправа	= СплошнаяЛиния;
		
		НомерКолонки = НомерКолонки + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ФиксацияСверху = 1;
	
КонецПроцедуры // СформироватьШапкуТабличногоДокумента()

&НаСервере
Процедура ДобавитьКолонкиВТаблицуЗагруженныеДанные()
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	Для Каждого Строка Из СписокКолонок Цикл
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Строка.Значение, Новый ОписаниеТипов("Строка"), "ЗагруженныеДанные"));
	КонецЦикла;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

	Для Каждого Строка Из СписокКолонок Цикл
        НовыйЭлемент = Элементы.Добавить(Строка.Значение, Тип("ПолеФормы"), Элементы.ЗагруженныеДанные);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ЗагруженныеДанные." + Строка.Значение;
	КонецЦикла;	
	
КонецПроцедуры // ДобавитьКолонкиВТаблицуЗагруженныеДанные()

&НаСервере
Процедура ПостроитьФормуОбработкиПоСпискуКолонок()
	
	СформироватьШапкуТабличногоДокумента();
	ДобавитьКолонкиВТаблицуЗагруженныеДанные();	
	
КонецПроцедуры // ПостроитьФормуОбработкиПоСпискуКолонок()

&НаСервере
Функция ПолучитьАдресЗагруженныхДанныхВоВременномХранилище()
	
	ТабЗнч = РеквизитФормыВЗначение("ЗагруженныеДанные", Тип("ТаблицаЗначений"));
	Возврат ПоместитьВоВременноеХранилище(ТабЗнч, ЭтаФорма.УникальныйИдентификатор);	
	
КонецФункции // ПолучитьАдресЗагруженныхДанныхВоВременномХранилище()

&НаСервере
Процедура ВыполнитьЗагрузкуДанныхСервер()
	
	ДанныеСтроки = Новый Массив;
	НомерСтроки = 2;
	Пока 1 = 1 Цикл
		Если ПустаяСтрока(ПолучитьЗначениеЯчейки(НомерСтроки, 1)) Тогда
			Прервать;
		Иначе
			ДанныеСтроки.Очистить();
			Для НомерКолонки = 1 По СписокКолонок.Количество() Цикл
				ДанныеСтроки.Добавить(ПолучитьЗначениеЯчейки(НомерСтроки, НомерКолонки));
			КонецЦикла;
			ДобавитьСтрокуВТаблицуЗагруженныеДанные(ДанныеСтроки);
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;		
	КонецЦикла;	
	
КонецПроцедуры // ВыполнитьЗагрузкуДанныхСервер()

&НаСервере
Функция ДобавитьСтрокуВТаблицуЗагруженныеДанные(ДанныеСтроки)
	
	НоваяСтрока = ЗагруженныеДанные.Добавить();
	Для НомерКолонки = 0 По ДанныеСтроки.Количество() - 1 Цикл
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Новый Структура(СписокКолонок[НомерКолонки].Значение, ДанныеСтроки[НомерКолонки]));
	КонецЦикла;
	
КонецФункции // ДобавитьСтрокуВТаблицуЗагруженныеДанные()

&НаСервере
Функция ПолучитьЗначениеЯчейки(НомерСтроки, НомерКолонки)
	
	ДанныеСтроки = ТабличныйДокумент.Область("R"+СтрЗаменить(строка(НомерСтроки),символ(160),"")+"C" + СтрЗаменить(строка(НомерКолонки),символ(160),"")).Текст;
	
	Если СписокКолонокБезСокращенияПробелов.Количество() > 0 Тогда
		
		Если НеСокращатьПробелы(НомерКолонки) = Истина Тогда
				
			Возврат ДанныеСтроки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СокрЛП(ДанныеСтроки);	
	
КонецФункции // ПолучитьЗначениеЯчейки()

&НаСервере
Функция НеСокращатьПробелы(НомерКолонки) 
	
	Если СписокКолонок.Количество() > 0 Тогда
		
		ИмяКолоники = СписокКолонок[НомерКолонки-1];
		Если СписокКолонокБезСокращенияПробелов.НайтиПоЗначению(ИмяКолоники.Значение) = Неопределено Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти 
