#Область КомандыФормы

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	Если СохранятьКопиюНаДиске И ПустаяСтрока(КаталогРасчетныхЛистков) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран каталог для сохранения расчетных листков", , "КаталогРасчетныхЛистков");
		Возврат;
	КонецЕсли;
	
	Если Объект.УчетнаяЗапись.Пустая() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана учетная запись для отправки электронной почты. Для настройки обратитесь к администратору системы", , "Объект.УчетнаяЗапись");
		Возврат;
	КонецЕсли;
		
	Для Каждого Строка Из Объект.Работники Цикл 
		ТабличныеДокументыАдреса = Новый СписокЗначений;
		Отправить_Сервер(ТабличныеДокументыАдреса,Строка.Физлицо, Строка.Адрес);
		
		Для Каждого ТаблДок из ТабличныеДокументыАдреса Цикл
			Вложения.Очистить();
			Если Вложения.Количество()<>0 Тогда 
				Сообщить("Невозможно очистить список вложений расчетных листков. Действие обработки прекращено. Обратитесь к разработчику 1С.");
				Возврат;
			КонецЕсли;
						
			ТабличныеДокументы = Новый СписокЗначений;
			ТабличныеДокументы.Добавить(ТаблДок.Значение, "Расчетный листок");
			ОтправкаСообщения(ТабличныеДокументы, ТаблДок.Представление, Строка.Физлицо);
		КонецЦикла;
	КонецЦикла;
	
	Если ФормироватьОтчетОбОтправленныхУведомлениях Тогда 
		ТабличныйДокумент = Новый ТабличныйДокумент;
		СформироватьОтчетОбОтправке(ТабличныйДокумент);
		ТабличныйДокумент.Показать("Список отправленных уведомлений");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаДиске(Команда)
	
	Если ПустаяСтрока(КаталогРасчетныхЛистков) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран каталог для сохранения расчетных листков", , "КаталогРасчетныхЛистков");
		Возврат;
	КонецЕсли;
	
	ПолучитьРасширениеФайла(РасширениеФайла); 	
	
	Для Каждого Строка Из Объект.Работники Цикл 
		ТабличныеДокументыАдреса = Новый СписокЗначений;
		Отправить_Сервер(ТабличныеДокументыАдреса,Строка.Физлицо, Строка.Адрес);
		
		Для Каждого ТаблДок из ТабличныеДокументыАдреса Цикл			
			ИмяФайла = Строка(Строка.Физлицо) + "."+РасширениеФайла;
			ПолноеИмяФайла = КаталогРасчетныхЛистков + "\" + ИмяФайла;

			ТаблДок.Значение.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента[РасширениеФайла]); 
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора",Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Ложь, Истина), ЭтаФорма.Элементы.Работники, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСПустымEmail(Команда)
	Счетчик = Объект.Работники.Количество()-1;
	Пока Счетчик>=0 Цикл
		СтрокаДанных = Объект.Работники[Счетчик];
		Если ПустаяСтрока(СтрокаДанных.Адрес) Тогда 
			Объект.Работники.Удалить(СтрокаДанных);
		КонецЕсли;
		Счетчик = Счетчик - 1;
	КонецЦикла;			
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Объект.Работники.Очистить();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура РаботникиФизлицоПриИзменении(Элемент)
	Элементы.Работники.ТекущиеДанные.Адрес = ПолучитьАдрес(Элементы.Работники.ТекущиеДанные.Физлицо);
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ДобавитьВыбранныхСотрудниковВТаблицу(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура КаталогРасчетныхЛистковНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
	ДиалогОткрытия.Каталог = ""; 
	ДиалогОткрытия.МножественныйВыбор = Ложь; 
	ДиалогОткрытия.Заголовок = "Выберите каталог"; 
	
	Если ДиалогОткрытия.Выбрать() Тогда 
		КаталогРасчетныхЛистков = ДиалогОткрытия.Каталог; 
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьПараметрыПоУмолчанию_сервер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчетОбОтправке(ТабличныйДокумент)
	
	Макет = ОбъектОбработки().ПолучитьМакет("РассылкаПечатныхЛистков");
	ЗаголовокМакета	= Макет.ПолучитьОбласть("Заголовок");
	Строка			= Макет.ПолучитьОбласть("Строка");
	Подвал			= Макет.ПолучитьОбласть("Итого");
		
	ЗаголовокМакета.Параметры.Сформировано = ТекущаяДата();
	ТабличныйДокумент.Вывести(ЗаголовокМакета);
	
	Для Каждого СтрокаДанных Из СписокОтправленныхУведомлений Цикл 
		ЗаполнитьЗначенияСвойств(Строка.Параметры, СтрокаДанных);
		ТабличныйДокумент.Вывести(Строка);
	КонецЦикла;
	
	Подвал.Параметры.Итого = СписокОтправленныхУведомлений.Количество();
	ТабличныйДокумент.Вывести(Подвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыПоУмолчанию_сервер()
	Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	НачалоПредыдущегоМесяца = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);
	Объект.Период.Вариант = ВариантСтандартногоПериода.Месяц;
	Объект.Период.ДатаНачала = НачалоМесяца(НачалоПредыдущегоМесяца);
	ОБъект.Период.ДатаОкончания = КонецМесяца(НачалоПредыдущегоМесяца);
	Если Не ЗначениеЗаполнено(Объект.ФорматСохранения) Тогда 
		Объект.ФорматСохранения = "PDF";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВидEmail) Тогда 
		Объект.ВидEmail = Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ВариантОтчета) Тогда 
		Объект.ВариантОтчета = "РасчетныйЛисток";
	КонецЕсли;
	
	Если Объект.УчетнаяЗапись.Пустая() Тогда 		
		Попытка
			Объект.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		Исключение
			ДоступныеУчетныеЗаписи = РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина);
			Если Не ДоступныеУчетныеЗаписи.Количество() = 0 Тогда
				Объект.УчетнаяЗапись = ДоступныеУчетныеЗаписи[0].Ссылка;	
			КонецЕсли;
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос();
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Физлицо,
	               |	ВложенныйЗапрос.АдресЭП КАК Адрес
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	               |		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = Сотрудники.Ссылка)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ФизическиеЛицаКонтактнаяИнформация.АдресЭП КАК АдресЭП,
	               |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	               |		ИЗ
	               |			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |		ГДЕ
	               |			ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидКИ) КАК ВложенныйЗапрос
	               |		ПО Сотрудники.ФизическоеЛицо = ВложенныйЗапрос.Ссылка
	               |ГДЕ
				   |	НЕ Сотрудники.ППФ_Агент
	               |	И ТекущиеКадровыеДанныеСотрудников.ДатаПриема <> ДАТАВРЕМЯ(1, 1, 1)
	               |	И ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1) #УсловиеПоПодразделению	               
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудники.ФизическоеЛицо.Наименование";
	Если Подразделение.Количество() = 0 Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УсловиеПоПодразделению", "");
	Иначе 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УсловиеПоПодразделению", " И ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение В ИЕРАРХИИ(&Подразделение)");
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	КонецЕсли;	
	Запрос.УстановитьПараметр("ВидКИ",Объект.ВидEmail);	
	Запрос.Текст = ТекстЗапроса;
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Объект.Работники.Загрузить(Выгрузка);
КонецПроцедуры

&НаСервере
Функция ПолучитьАдрес(ФизЛицо)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Физлицо,
	               |	ВложенныйЗапрос.АдресЭП КАК Адрес
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ФизическиеЛицаКонтактнаяИнформация.АдресЭП КАК АдресЭП,
	               |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	               |		ИЗ
	               |			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |		ГДЕ
	               |			ФизическиеЛицаКонтактнаяИнформация.Вид = &ВидКИ) КАК ВложенныйЗапрос
	               |		ПО Сотрудники.ФизическоеЛицо = ВложенныйЗапрос.Ссылка
	               |ГДЕ
	               |	Сотрудники.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудники.ФизическоеЛицо.Наименование";
	Запрос.УстановитьПараметр("ВидКИ",Объект.ВидEmail);
	Запрос.УстановитьПараметр("Ссылка",ФизЛицо);	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Адрес;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ОтправкаСообщения(ТабличныеДокументы, Адрес, Сотрудник)
	
	ФорматыСохранения = Новый Массив;
	ПолучитьРасширениеФайла(РасширениеФайла, ФорматыСохранения);
	
	Если СохранятьКопиюНаДиске Тогда 
		Для Каждого ТабличныйДокумент Из ТабличныеДокументы Цикл			
			ИмяФайла = Строка(Сотрудник) + "."+РасширениеФайла;
			ПолноеИмяФайла = КаталогРасчетныхЛистков + "\" + ИмяФайла;			
			ТабличныйДокумент.Значение.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента[РасширениеФайла]); 
		КонецЦикла;
	КонецЕсли; 
	
	ПараметрыОтправки = Новый Структура;
	ПараметрыОтправки.Вставить("Тема", "Расчетный листок");
	ПараметрыОтправки.Вставить("Вложения", ПоместитьТабличныеДокументыВоВременноеХранилище(ФорматыСохранения,ТабличныеДокументы));
	ПараметрыОтправки.Вставить("УдалятьФайлыПослеОтправки", Истина);	
	ПараметрыОтправки.Вставить("Кому", Адрес);
	
	Если Вложения.Количество()<>0 Тогда 
		Сообщить("Невозможно очистить список вложений расчетных листков. Действие обработки прекращено. Обратитесь к разработчику 1С.");
		Возврат;
	КонецЕсли;
	
	Для Каждого Вложение Из ПараметрыОтправки.Вложения Цикл
		ОписаниеВложения = Вложения.Добавить();
		Если ТипЗнч(ПараметрыОтправки.Вложения) = Тип("СписокЗначений") Тогда
			ОписаниеВложения.Представление = Вложение.Представление;
			Если ТипЗнч(Вложение.Значение) = Тип("ДвоичныеДанные") Тогда
				ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Вложение.Значение, УникальныйИдентификатор);
			Иначе
				Если ЭтоАдресВременногоХранилища(Вложение.Значение) Тогда
					ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(Вложение.Значение), УникальныйИдентификатор);
				Иначе
					ОписаниеВложения.ПутьКФайлу = Вложение.Значение;
				КонецЕсли;
			КонецЕсли;
		Иначе // ТипЗнч(Параметры.Вложения) = "массив структур"
			ЗаполнитьЗначенияСвойств(ОписаниеВложения, Вложение);
			Если Не ПустаяСтрока(ОписаниеВложения.АдресВоВременномХранилище) Тогда
				ОписаниеВложения.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(
				ПолучитьИзВременногоХранилища(ОписаниеВложения.АдресВоВременномХранилище), УникальныйИдентификатор);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(ПараметрыОтправки.Кому) = Тип("СписокЗначений") Тогда
		ПочтовыйАдресПолучателя = "";
		Для Каждого ЭлементПочтовыйАдрес Из ПараметрыОтправки.Кому Цикл
			Если ЗначениеЗаполнено(ЭлементПочтовыйАдрес.Представление) Тогда 
				ПочтовыйАдресПолучателя = ПочтовыйАдресПолучателя
				+ ЭлементПочтовыйАдрес.Представление
				+ " <"
				+ ЭлементПочтовыйАдрес.Значение
				+ ">; "
			Иначе
				ПочтовыйАдресПолучателя = ПочтовыйАдресПолучателя 
				+ ЭлементПочтовыйАдрес.Значение
				+ "; ";
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ПараметрыОтправки.Кому) = Тип("Строка") Тогда
		ПочтовыйАдресПолучателя = ПараметрыОтправки.Кому;
	ИначеЕсли ТипЗнч(ПараметрыОтправки.Кому) = Тип("Массив") Тогда
		Для Каждого СтруктураПолучателя Из ПараметрыОтправки.Кому Цикл
			МассивАдресов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтруктураПолучателя.Адрес, ";");
			Для Каждого Адрес Из МассивАдресов Цикл
				Если ПустаяСтрока(Адрес) Тогда 
					Продолжить;
				КонецЕсли;
				ПочтовыйАдресПолучателя = ПочтовыйАдресПолучателя + СтруктураПолучателя.Представление + " <" + СокрЛП(Адрес) + ">; ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Попытка
		ПриведенныйПочтовыйАдрес = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(ПочтовыйАдресПолучателя);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		КраткоеПредставлениеОшибки(ИнформацияОбОшибке()), ,
		ПочтовыйАдресПолучателя);
		Возврат;
	КонецПопытки;
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Кому", ПриведенныйПочтовыйАдрес);
	ПараметрыПисьма.Вставить("Тема", "Расчетный лист");	
	ПараметрыПисьма.Вставить("Вложения", Вложения());
	ПараметрыПисьма.Вставить("Тело", "Во вложении находится расчетный листок. Сообщение сформировано автоматически из системы 1С:ЗУП. Отвечать на письмо не требуется.");
	
	Попытка
		ОтправитьПочтовоеСообщение(Объект.УчетнаяЗапись, ПараметрыПисьма);
		Сообщить("Сообщения отпарвлены на " + Адрес);
		НоваяСтрока = СписокОтправленныхУведомлений.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.Почта = Адрес;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Функция Вложения()
	
	Результат = Новый Массив;
	Для Каждого Вложение Из Вложения Цикл
		ОписаниеВложения = Новый Структура;
		ОписаниеВложения.Вставить("Представление", Вложение.Представление);
		ОписаниеВложения.Вставить("АдресВоВременномХранилище", Вложение.АдресВоВременномХранилище);
		ОписаниеВложения.Вставить("Кодировка", Вложение.Кодировка);
		Результат.Добавить(ОписаниеВложения);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура Отправить_Сервер(ТабличныйДокумент, Физлицо, Адрес)
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Физлицо");
	ТаблицаЗначений.Колонки.Добавить("Адрес");
	НоваяСтрока = ТаблицаЗначений.Добавить();
	НоваяСтрока.Физлицо 	= Физлицо;
	НоваяСтрока.Адрес 		= Адрес;
	ОбъектОбработки().Отправить(НоваяСтрока, ТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранныеФорматыСохранения, ТабличныеДокументы)
	Результат = Новый СписокЗначений;
	
	// Каталог временных файлов
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ПолныйПутьКФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки);
	
	// Сохранение табличных документов.
	Для Каждого ТабличныйДокумент Из ТабличныеДокументы Цикл
		
		Если ТабличныйДокумент.Значение.Вывод = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТипФайла Из ВыбранныеФорматыСохранения Цикл
			
			ИмяФайла = ТабличныйДокумент.Представление + "."+РасширениеФайла;
			ПолноеИмяФайла = ПолныйПутьКФайлу + ИмяФайла;
			
			ТабличныйДокумент.Значение.Записать(ПолноеИмяФайла, ТипФайла);
			
			Результат.Добавить(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяФайла), УникальныйИдентификатор), ИмяФайла);
		КонецЦикла;
		
	КонецЦикла;
	
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтправитьПочтовоеСообщение(Знач УчетнаяЗапись, Знач ПараметрыПисьма)
	
	Возврат РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);
	
КонецФункции

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервере
Функция ДобавитьВыбранныхСотрудниковВТаблицу(Сотрудники)
	Если ТипЗнч(Сотрудники) = Тип("Массив") Тогда 
		Для Каждого Элемент Из Сотрудники Цикл 
			НоваяСтрока = Объект.Работники.Добавить();
			НоваяСтрока.Физлицо = Элемент;
			НоваяСтрока.Адрес = ПолучитьАдрес(Элемент);
		КонецЦикла;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПолучитьРасширениеФайла(РасширениеФайла, ФорматыСохранения = Неопределено)
	
	Если Объект.ФорматСохранения = "PDF" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.PDF);	
		КонецЕсли;
		РасширениеФайла = "pdf";
	ИначеЕсли Объект.ФорматСохранения = "DOCX" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.DOCX);	
		КонецЕсли;
		РасширениеФайла = "docx";
	ИначеЕсли Объект.ФорматСохранения = "XLS" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.XLS);			
		КонецЕсли;
		РасширениеФайла = "xls";
	ИначеЕсли Объект.ФорматСохранения = "XLS95" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.XLS95);			
		КонецЕсли;
		РасширениеФайла = "xls";
	ИначеЕсли Объект.ФорматСохранения = "XLS97" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.XLS97);			
		КонецЕсли;
		РасширениеФайла = "xls";
	ИначеЕсли Объект.ФорматСохранения = "XLSX" Тогда 
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.XLSX);					
		КонецЕсли;
		РасширениеФайла = "xlsx";
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выбран неизвестный формат документа. Расчтёный листок будет отправлен в формате pdf", , "ФорматСохранения");
		Если ТипЗнч(ФорматыСохранения) = Тип("Массив") Тогда 
			ФорматыСохранения.Добавить(ТипФайлаТабличногоДокумента.PDF);	
		КонецЕсли;
		РасширениеФайла = "pdf";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПолноеИмяФормы(ИмяФормы)

    Возврат Лев(ЭтотОбъект.ИмяФормы, СтрНайти(ЭтотОбъект.ИмяФормы, ".", НаправлениеПоиска.СКонца)) + ИмяФормы;//

КонецФункции

#КонецОбласти

