
#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
	ПараметрыРегистрации.Вставить("Наименование", "Среднесписочная численность");
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("Информация", "Среднесписочная численность");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	Команды = ТаблицаКоманд();
	ДобавитьКоманду(Команды, "Среднесписочная численность", "ППФ_СреднесписочнаяЧисленность", "ОткрытиеФормы", Ложь, "");
	
	ПараметрыРегистрации.Вставить("Команды", Команды);
	
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ТаблицаКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

#КонецОбласти

Функция РегламентированныйКалендар(ДатаКалендаря, ВидДня)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата = &Дата
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	Запрос.УстановитьПараметр("Дата", ДатаКалендаря);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();	
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидДня	= Выборка.ВидДня;
	КонецЦикла;
	
КонецФункции

Функция РегламентированныйКалендарНачало(ВидДняНачало) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата = &ПараметрДата
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	Запрос.УстановитьПараметр("ПараметрДата", НачалоМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();	
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидДняНачало	= Выборка.ВидДня;
	КонецЦикла;
	
КонецФункции

Функция РабочийПередВыходнымНачало (РабочийДень, ДатаС, ДатаПо) Экспорт
	
	СЗБудни = Новый СписокЗначений;
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &с И &по
	|	И ДанныеПроизводственногоКалендаря.ВидДня В(&ВидДня)
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПроизводственногоКалендаря.Дата УБЫВ";
	Запрос.УстановитьПараметр("по", ДатаПо);
	Запрос.УстановитьПараметр("с", ДатаС);
	Запрос.УстановитьПараметр("ВидДня", СЗБудни);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();	
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		РабочийДень = Выборка.Дата;
	КонецЦикла;
	
КонецФункции

Функция РабочийПередВыходным(РабочийДень, ДатаКалендаря) Экспорт
	
	СЗБудни = Новый СписокЗначений;
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &с И &по
	|	И ДанныеПроизводственногоКалендаря.ВидДня В(&ВидДня)
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПроизводственногоКалендаря.Дата УБЫВ";
	Запрос.УстановитьПараметр("по", ДатаКалендаря);
	Запрос.УстановитьПараметр("с", НачалоМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("ВидДня", СЗБудни);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();	
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		РабочийДень = Выборка.Дата;
	КонецЦикла;
	
КонецФункции

Функция РабочийПослеВыходных(РабочийПослеВыходного) экспорт
	
	СЗБудни = Новый СписокЗначений;
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
	СЗБудни.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &с И &по
	|	И ДанныеПроизводственногоКалендаря.ВидДня В(&ВидДня)
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПроизводственногоКалендаря.Дата";
	Запрос.УстановитьПараметр("по", КонецМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("с", НачалоМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("ВидДня", СЗБудни);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		РабочийПослеВыходного = Выборка.Дата;
	КонецЦикла;
	
КонецФункции	

Функция ПодразделенияАгентства(СЗПодразделенияАгентства) Экспорт
	
	//список подразделений агентств
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка КАК Ссылка1,
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Свойство,
	|	ЗначенияСвойствОбъектов.Значение КАК Значение1
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК СвойстваОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|		ПО СвойстваОбъектов.Ссылка = ЗначенияСвойствОбъектов.Свойство
	|ГДЕ
	|	СвойстваОбъектов.Ссылка = &ДопСвойство
	|	И ЗначенияСвойствОбъектов.Значение = &ЗначениеСвойства";
	Запрос.УстановитьПараметр("ДопСвойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Местонахождение"));  //Местонахождение
	Запрос.УстановитьПараметр("ЗначениеСвойства", Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию("г.Москва")); //г.Москва
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СЗПодразделенияАгентства.Добавить(Выборка.Объект);	
		
	КонецЦикла;
	
КонецФункции

Функция СотрудникикГПХ(ГПХ_ДВОУ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиДополнительныеРеквизиты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Сотрудники.ДополнительныеРеквизиты КАК СотрудникиДополнительныеРеквизиты
	|ГДЕ
	|	СотрудникиДополнительныеРеквизиты.Свойство.Заголовок = ""ДВОУ""";
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	ГПХ_ДВОУ = новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		ГПХ_ДВОУ.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
КонецФункции

Процедура НовыйРасчетРаботников(Режим, ДатаКалендаря, ДеньНедели, ДопПодразделения, СЗПодразделенияАгентства, СчДней1, СчДней2, СчДней3, СчДней4, СчДней5, СчДней6, СчДней7, СчДней8, СчДней9, СчДней10,
	СчДней11, СчДней12, СчДней13, СчДней14, СчДней15, СчДней16, СчДней17, СчДней18, СчДней19, СчДней20, СчДней21, СчДней22, СчДней23, СчДней24, СчДней25, СчДней26,
	СчДней27, СчДней28, СчДней29, СчДней30, СчДней31, ВидДняНачало, РабочийДеньНачало, ДопПодр, ФормаОтчета)Экспорт	
	
	ВидДня = "";
	РегламентированныйКалендар(ДатаКалендаря, ВидДня);
	
	Если ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	КонецЕсли;
	
	Если Режим = "2" Тогда	//Агентства - подразделения  
		
		Если РежимЗапроса = "Выходной" Тогда				
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ДопПодр);
		
	ИначеЕсли Режим = "1" Тогда	//Вся организация	
		
		Если РежимЗапроса = "Выходной" Тогда				
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		
	ИначеЕсли Режим = "3" Тогда	 //г.Москва
		
		Если РежимЗапроса = "Выходной" Тогда
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", СЗПодразделенияАгентства);
	ИначеЕсли Режим = "4" Тогда
		
		Если РежимЗапроса = "Выходной" Тогда				
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
			|			ТОГДА ДОБАВИТЬКДАТЕ(КадроваяИсторияСотрудниковСрезПоследних.Период, ДЕНЬ, -1)
			|		ИНАЧЕ КадроваяИсторияСотрудниковСрезПоследних.Период
			|	КОНЕЦ КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
	
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	СчДней		= 0;
	
	списокСотр = новый СписокЗначений;	
	
	тзСотр = новый ТаблицаЗначений;	
	тзСотр.Колонки.Добавить("фио");
	тзСотр.Колонки.Добавить("Подразделение");
	тзСотр.Колонки.Добавить("Дата");
	тзСотр.Колонки.Добавить("Состояние");
	
	Пока Выборка.Следующий() Цикл
		
		тзстрока = тзСотр.Добавить();
		
		РабочийПослеВыходного = "";
		РабочийПослеВыходных(РабочийПослеВыходного);
		
		//середина месяца уволены перед праздником или выходным
		РабочийДень = "";
		Если РежимЗапроса = "Выходной" Тогда
			//получить последний рабочий день перед выходным и праздником
			РабочийПередВыходным (РабочийДень, ДатаКалендаря);
			Если РабочийДень = "" Тогда
				РабочийДень = РабочийДеньНачало;
			КонецЕсли;
			
			Если Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
				Если НачалоМесяца(МесяцПериод) > РабочийДеньНачало И ДатаКалендаря <= РабочийПослеВыходного Тогда		
					Если Выборка.Период >= РабочийДеньНачало Тогда
						СчДней	= СчДней + 1;
						Если отладка И НачалоДня(ДатаКалендаря) = НачалоДня(ДатаОтладка) тогда
							списокСотр.Добавить(Выборка.Сотрудник);
							тзстрока.фио			= Выборка.Сотрудник;
							тзстрока.Подразделение	= Выборка.Подразделение;
							тзстрока.Дата			= Выборка.Период;
							тзстрока.Состояние		= Выборка.ВидСобытия;					
						Конецесли;	
					КонецЕсли;				
				ИначеЕсли НачалоМесяца(МесяцПериод) <= РабочийДень Тогда
					Если Выборка.Период >= РабочийДень Тогда          
						СчДней	= СчДней + 1;
						Если отладка И НачалоДня(ДатаКалендаря) = НачалоДня(ДатаОтладка) тогда
							списокСотр.Добавить(Выборка.Сотрудник);
							тзстрока.фио = Выборка.Сотрудник;
							тзстрока.Подразделение = Выборка.Подразделение;
							тзстрока.Дата = Выборка.Период;
							тзстрока.Состояние		= Выборка.ВидСобытия;
						Конецесли;
					КонецЕсли; 	
					
				КонецЕсли;
			Иначе
				СчДней	= СчДней + 1;
				Если отладка И НачалоДня(ДатаКалендаря) = НачалоДня(ДатаОтладка) тогда
					списокСотр.Добавить(Выборка.Сотрудник);
					тзстрока.фио = Выборка.Сотрудник;
					тзстрока.Подразделение = Выборка.Подразделение;
					тзстрока.Дата = Выборка.Период;
					тзстрока.Состояние		= Выборка.ВидСобытия;
				Конецесли;
			КонецЕсли;		
		ИначеЕсли РежимЗапроса = "Будни" Тогда		
			СчДней	= СчДней + 1;
			Если отладка И НачалоДня(ДатаКалендаря) = НачалоДня(ДатаОтладка) тогда
				списокСотр.Добавить(Выборка.Сотрудник);
				тзстрока.фио = Выборка.Сотрудник;
				тзстрока.Подразделение = Выборка.Подразделение;
				тзстрока.Дата = Выборка.Период;
				тзстрока.Состояние		= Выборка.ВидСобытия;
			Конецесли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если День(ДатаКалендаря) = 1 Тогда
		СчДней1	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 2 Тогда
		СчДней2	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 3 Тогда
		СчДней3	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 4 Тогда
		СчДней4	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 5 Тогда
		СчДней5	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 6 Тогда
		СчДней6	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 7 Тогда
		СчДней7	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 8 Тогда
		СчДней8	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 9 Тогда
		СчДней9	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 10 Тогда
		СчДней10= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 11 Тогда
		СчДней11	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 12 Тогда
		СчДней12	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 13 Тогда
		СчДней13	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 14 Тогда
		СчДней14	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 15 Тогда
		СчДней15	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 16 Тогда
		СчДней16	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 17 Тогда
		СчДней17	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 18 Тогда
		СчДней18	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 19 Тогда
		СчДней19	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 20 Тогда
		СчДней20	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 21 Тогда
		СчДней21	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 22 Тогда
		СчДней22	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 23 Тогда
		СчДней23	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 24 Тогда
		СчДней24	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 25 Тогда
		СчДней25	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 26 Тогда
		СчДней26	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 27 Тогда
		СчДней27	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 28 Тогда
		СчДней28	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 29 Тогда
		СчДней29	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 30 Тогда
		СчДней30	= СчДней;
	ИначеЕсли День(ДатаКалендаря) = 31 Тогда
		СчДней31	= СчДней;		
	КонецЕсли;
	
	Если отладка И НачалоДня(ДатаКалендаря) = НачалоДня(ДатаОтладка) тогда	
		
		ТабДокОтладка	= ФормаОтчета.ПолеТабличногоДокументаОтладка;
		ТабДокОтладка.Очистить();
		
		макет = ПолучитьМакет("Отладка");
		ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
		
		для каждого стр из тзСотр цикл
			Если стр.фио = НЕОПРЕДЕЛЕНО Тогда
			Иначе
				ОбластьСтрока.Параметры.фио				= стр.фио;
				ОбластьСтрока.Параметры.Подразделение	= стр.Подразделение;
				ОбластьСтрока.Параметры.Дата			= стр.Дата;
				ОбластьСтрока.Параметры.Состояние		= стр.Состояние;
				ТабДокОтладка.Вывести(ОбластьСтрока);
			КонецЕсли;	
		конеццикла;   
		
	конецесли;
	
КонецПроцедуры

Процедура НовыйРасчетСовместители(Режим, ДатаКалендаря, ДеньНедели, ДопПодразделения, СЗПодразделенияАгентства, Совм1, Совм2, Совм3, Совм4, Совм5, Совм6, Совм7, Совм8, Совм9, Совм10,
	Совм11, Совм12, Совм13, Совм14, Совм15, Совм16, Совм17, Совм18, Совм19, Совм20, Совм21, Совм22, Совм23, Совм24, Совм25, Совм26,
	Совм27, Совм28, Совм29, Совм30, Совм31, ВидДняНачало, РабочийДеньНачало, ДопПодр, ФормаОтчета) Экспорт	
	
	ВидДня = "";
	РегламентированныйКалендар(ДатаКалендаря, ВидДня);
	Если ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	КонецЕсли;
	
	Если Режим = "2" Тогда	//Агентства - подразделения  
		
		Если РежимЗапроса = "Выходной" Тогда 
			
			Запрос = Новый Запрос;    //праздник/суббота/воскресенье
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //рабочий/предпраздничный
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ДопПодр);
		
	ИначеЕсли Режим = "1" Тогда	//Вся организация	
		
		Если РежимЗапроса = "Выходной" Тогда				
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		
	ИначеЕсли Режим = "3" Тогда	 //г.Москва
		
		Если РежимЗапроса = "Выходной" Тогда				
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", СЗПодразделенияАгентства);
	ИначеЕсли Режим = "4" Тогда
		
		Если РежимЗапроса = "Выходной" Тогда 
			
			Запрос = Новый Запрос;    //выходные
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";
		Иначе	
			Запрос = Новый Запрос;    //Будни
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
			|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
			|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
			|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
			|ГДЕ
			|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
			|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
			|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)
			|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору";	
			Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);	
		КонецЕсли;	
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.НайтиПоНаименованию("ППФ Страхование жизни ООО"));
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровССотрудниками.ТрудовойДоговор);
	Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.Совместительство);	
	
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	Совм		= 0;
	Пока Выборка.Следующий() Цикл
		Если День(ДатаКалендаря) > 2 Тогда
			Если ДеньНедели = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда  
				Если Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение И Выборка.Период <= ДатаКалендаря  Тогда							 
					Если НачалоДня(ДатаКалендаря) = Выборка.Период Тогда
						Совм	= Совм + 1;											
					КонецЕсли;										
				КонецЕсли;	
			ИначеЕсли ДеньНедели = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда  
				Если Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение И Выборка.Период <= ДатаКалендаря  Тогда							 
					Если НачалоДня(НачалоДня(ДатаКалендаря)-1) = Выборка.Период ИЛИ НачалоДня(ДатаКалендаря) = Выборка.Период Тогда
						Совм	= Совм + 1;											
					КонецЕсли;
				КонецЕсли;				
			КонецЕсли;			
		ИначеЕсли День(ДатаКалендаря) <= 2 Тогда		
			Если ДеньНедели = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда  
				Если Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение И Выборка.Период <= ДатаКалендаря  Тогда							 
					Если НачалоДня(ДатаКалендаря) = Выборка.Период Тогда
						Совм	= Совм + 1;											
					КонецЕсли;										
				КонецЕсли;	
			ИначеЕсли ДеньНедели = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда  
				Если Выборка.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение И Выборка.Период <= ДатаКалендаря  Тогда							 
					Если НачалоДня(НачалоДня(ДатаКалендаря)-1) = Выборка.Период ИЛИ НачалоДня(ДатаКалендаря) = Выборка.Период Тогда
						Совм	= Совм + 1;											
					КонецЕсли;
				КонецЕсли;				
			КонецЕсли;						
		КонецЕсли;
	КонецЦикла;
	
	Если Режим = "2" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
		Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);
		Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ДопПодр);	
		Результат	= Запрос.Выполнить();
		Выборка		= Результат.Выбрать();	
	ИначеЕсли Режим = "1" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
		Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);
		Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
		Результат	= Запрос.Выполнить();
		Выборка		= Результат.Выбрать();	
	ИначеЕсли Режим = "3" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
		Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);
		Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", СЗПодразделенияАгентства);	
		Результат	= Запрос.Выполнить();
		Выборка		= Результат.Выбрать();	
	ИначеЕсли Режим = "4" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия <> &ПричинаИзмененияСостояния
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ПодразделениеОрганизации)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Совместительство)";	
		Запрос.УстановитьПараметр("ПричинаИзмененияСостояния", Перечисления.ВидыКадровыхСобытий.Увольнение);
		Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);	
		Результат	= Запрос.Выполнить();
		Выборка		= Результат.Выбрать();	
	КонецЕсли;
	
	Если День(ДатаКалендаря) = 1 Тогда
		Совм1	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 2 Тогда
		Совм2	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 3 Тогда
		Совм3	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 4 Тогда
		Совм4	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 5 Тогда
		Совм5	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 6 Тогда
		Совм6	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 7 Тогда
		Совм7	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 8 Тогда
		Совм8	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 9 Тогда
		Совм9	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 10 Тогда
		Совм10	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 11 Тогда
		Совм11	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 12 Тогда
		Совм12	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 13 Тогда
		Совм13	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 14 Тогда
		Совм14	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 15 Тогда
		Совм15	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 16 Тогда
		Совм16	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 17 Тогда
		Совм17	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 18 Тогда
		Совм18	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 19 Тогда
		Совм19	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 20 Тогда
		Совм20	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 21 Тогда
		Совм21	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 22 Тогда
		Совм22	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 23 Тогда
		Совм23	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 24 Тогда
		Совм24	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 25 Тогда
		Совм25	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 26 Тогда
		Совм26	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 27 Тогда
		Совм27	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 28 Тогда
		Совм28	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 29 Тогда
		Совм29	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 30 Тогда
		Совм30	= Выборка.Количество() + Совм;
	ИначеЕсли День(ДатаКалендаря) = 31 Тогда
		Совм31	= Выборка.Количество() + Совм;		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверкаОтпускВДекрет(Сотрудник, ДатаКалендаря, Подр, ЕстьОтпуск)
	
	СЗВР = Новый СписокЗначений;
	
	ВыборкаНачислений = ПланыВидовРасчета.Начисления.Выбрать();
	
	Пока ВыборкаНачислений.Следующий() Цикл
		Если ВыборкаНачислений.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска
			И ВыборкаНачислений.ВидОтпуска = Справочники.ВидыОтпусков.Основной Тогда
			СЗВР.Добавить(ВыборкаНачислений.Ссылка);
		КонецЕсли;
	КонецЦикла;
	СЗВР.Добавить(ПланыВидовРасчета.Начисления.НайтиПоКоду("ОТПДО"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора КАК ВидДоговора,
	|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|	Начисления.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Начисления.Регистратор ССЫЛКА Документ.ОтпускБезСохраненияОплаты
	|			ТОГДА Начисления.ПериодДействияНачало
	|		ИНАЧЕ Начисления.Регистратор.ДатаНачалаОсновногоОтпуска
	|	КОНЕЦ КАК РегистраторДатаНачалаОсновногоОтпуска,
	|	ВЫБОР
	|		КОГДА Начисления.Регистратор ССЫЛКА Документ.ОтпускБезСохраненияОплаты
	|			ТОГДА Начисления.ПериодДействияКонец
	|		ИНАЧЕ Начисления.Регистратор.ДатаОкончанияОсновногоОтпуска
	|	КОНЕЦ КАК РегистраторДатаОкончанияОсновногоОтпуска
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
	|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = Начисления.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних КАК ВидыЗанятостиСотрудниковСрезПоследних
	|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	Начисления.ПериодДействияНачало <= &С
	|	И Начисления.ПериодДействияКонец >= &По
	|	И Начисления.ВидРасчета В(&ВидРасчета)
	|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
	|	И Начисления.Сотрудник = &Сотрудник
	|	И НЕ Начисления.Сторно
	|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
	|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор УБЫВ";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ВидРасчета", СЗВР);
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ОрганизацияПоУмолчанию());
	Запрос.УстановитьПараметр("по", ДатаКалендаря);
	Запрос.УстановитьПараметр("с", ДатаКалендаря);
	Запрос.УстановитьПараметр("Дата", ДатаКалендаря);
	Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", Подр);
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();	
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.РегистраторДатаНачалаОсновногоОтпуска <= ДатаКалендаря И Выборка.РегистраторДатаОкончанияОсновногоОтпуска >= ДатаКалендаря Тогда		
			//Сообщить("В отпуске на " + ДатаКалендаря +  " " + Сотрудник);
			ЕстьОтпуск = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Процедура Декрет(Режим, ДатаКалендаря, ДеньНедели, ДопПодразделения, СЗПодразделенияАгентства, Декрет1, Декрет2, Декрет3, Декрет4, Декрет5, Декрет6, Декрет7, Декрет8, Декрет9, Декрет10,
	Декрет11, Декрет12, Декрет13, Декрет14, Декрет15, Декрет16, Декрет17, Декрет18, Декрет19, Декрет20, Декрет21, Декрет22, Декрет23, Декрет24, Декрет25, Декрет26,
	Декрет27, Декрет28, Декрет29, Декрет30, Декрет31, ВидДняНачало, РабочийДеньНачало, ДопПодр) Экспорт	
	
	СЗВР = Новый СписокЗначений;
	СЗВРО= Новый СписокЗначений;
	ВыборкаНачислений = ПланыВидовРасчета.Начисления.Выбрать();
	
	Пока ВыборкаНачислений.Следующий() Цикл
		Если ВыборкаНачислений.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет
			ИЛИ ВыборкаНачислений.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоТрехЛет Тогда
			СЗВР.Добавить(ВыборкаНачислений.Ссылка);
		КонецЕсли;
		Если ВыборкаНачислений.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам Тогда
			СЗВРО.Добавить(ВыборкаНачислений.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если Режим = "2" Тогда	//Агентства - подразделения  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Период КАК Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор КАК Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность КАК Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо КАК ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК ИспользуетсяПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК РазмерПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется КАК ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись КАК ВторичнаяЗапись
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
		|		ПО (ПлановыеНачисленияСрезПоследних.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ПлановыеНачисленияСрезПоследних.Начисление В(&ВидРасчета)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеНачисленияСрезПоследних.Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", ДопПодр);
		
	ИначеЕсли Режим = "1" Тогда	//Вся организация	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Период КАК Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор КАК Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность КАК Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо КАК ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК ИспользуетсяПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК РазмерПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется КАК ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись КАК ВторичнаяЗапись
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
		|		ПО (ПлановыеНачисленияСрезПоследних.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ПлановыеНачисленияСрезПоследних.Начисление В(&ВидРасчета)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеНачисленияСрезПоследних.Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	ИначеЕсли Режим = "3" Тогда	 //г.Москва
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Период КАК Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор КАК Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность КАК Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК Размер,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисленияСрезПоследних.Регистратор ССЫЛКА Документ.ОтпускПоУходуЗаРебенком
		|			ТОГДА ДОБАВИТЬКДАТЕ(ПлановыеНачисленияСрезПоследних.ДействуетДо, СЕКУНДА, -1)
		|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ДействуетДо
		|	КОНЕЦ КАК ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК ИспользуетсяПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК РазмерПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется КАК ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись КАК ВторичнаяЗапись
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
		|		ПО (ПлановыеНачисленияСрезПоследних.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ПлановыеНачисленияСрезПоследних.Начисление В(&ВидРасчета)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеНачисленияСрезПоследних.Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись,
		|	ВЫБОР
		|		КОГДА ПлановыеНачисленияСрезПоследних.Регистратор ССЫЛКА Документ.ОтпускПоУходуЗаРебенком
		|			ТОГДА ДОБАВИТЬКДАТЕ(ПлановыеНачисленияСрезПоследних.ДействуетДо, СЕКУНДА, -1)
		|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ДействуетДо
		|	КОНЕЦ,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|АВТОУПОРЯДОЧИВАНИЕ";

		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", СЗПодразделенияАгентства);
	ИначеЕсли Режим = "4" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Период КАК Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор КАК Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки КАК НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность КАК Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо КАК ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.Используется КАК ИспользуетсяПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.Размер КАК РазмерПоОкончании,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется КАК ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись КАК ВторичнаяЗапись
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
		|		ПО (ПлановыеНачисленияСрезПоследних.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ПлановыеНачисленияСрезПоследних.Начисление В(&ВидРасчета)
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеНачисленияСрезПоследних.Период,
		|	ПлановыеНачисленияСрезПоследних.Регистратор,
		|	ПлановыеНачисленияСрезПоследних.НомерСтроки,
		|	ПлановыеНачисленияСрезПоследних.Активность,
		|	ПлановыеНачисленияСрезПоследних.Сотрудник,
		|	ПлановыеНачисленияСрезПоследних.Начисление,
		|	ПлановыеНачисленияСрезПоследних.ФизическоеЛицо,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер,
		|	ПлановыеНачисленияСрезПоследних.ДействуетДо,
		|	ПлановыеНачисленияСрезПоследних.ПересчетНеТребуется,
		|	ПлановыеНачисленияСрезПоследних.ВторичнаяЗапись,
		|	ПлановыеНачисленияСрезПоследних.Используется,
		|	ПлановыеНачисленияСрезПоследних.Размер
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", Подразделение);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидРасчета", СЗВР);
	Запрос.УстановитьПараметр("Дата", КонецДня(ДатаКалендаря));
	
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	ЗаРебенком	= 0;	
	
	СотрДубли = Справочники.Сотрудники.ПустаяСсылка();
	
	МассивСотрудниковВОтпускеПоУходу = Новый Массив;
	
	МассивСостояний = Новый Массив;
	МассивСостояний.Добавить(Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком);
	МассивСостояний.Добавить(Перечисления.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком );
	
	Пока Выборка.Следующий() Цикл
		
		Если СотрудникВОтпускеПоУходуЗаРебенкомИлиПоБеременностиИРодам(Выборка.Сотрудник, ДатаКалендаря, МассивСостояний) И МассивСотрудниковВОтпускеПоУходу.Найти(Выборка.Сотрудник) = Неопределено Тогда 
			МассивСотрудниковВОтпускеПоУходу.Добавить(Выборка.Сотрудник);
			ЗаРебенком = ЗаРебенком + 1;
			ЭтотОбъект.Лог = ЭтотОбъект.Лог + "В отпуске по уходу за ребенком на : " + ДатаКалендаря + " " + Выборка.Сотрудник + Символы.ВК; 
		КонецЕсли;
		
		////new
		//Если Выборка.Сотрудник = СотрДубли Тогда // мы его уже добавили, следующую запись с таким же сотрудником пропускаем
		//	Продолжить;
		//КонецЕсли;
		//Если Выборка.Используется Тогда
		//	Если (?(ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком"),Выборка.Регистратор.ДатаОкончания,Выборка.ДействуетДо) > ДатаКалендаря И Выборка.Период <= КонецДня(ДатаКалендаря)) ИЛИ (Выборка.ДействуетДо = Дата(1, 1, 1) И Выборка.Период <= КонецДня(ДатаКалендаря))  Тогда
		//		//проверка на отпуск
		//		Сотрудник	= Выборка.Сотрудник;
		//		ЕстьОтпуск	= Ложь;
		//		Если Режим = "3" Тогда
		//			Подр		= СЗПодразделенияАгентства;
		//		ИначеЕсли Режим = "2" Тогда
		//			Подр		= ДопПодр;	
		//		ИначеЕсли Режим = "4" Тогда
		//			Подр		= Подразделение;
		//		КонецЕсли;	
		//		ПроверкаОтпускВДекрет(Сотрудник, ДатаКалендаря, Подр, ЕстьОтпуск);
		//		Если ЕстьОтпуск = Ложь Тогда
		//			МассивСотрудниковВОтпускеПоУходу.Добавить(Сотрудник);
		//			ЭтотОбъект.Лог = ЭтотОбъект.Лог + "В отпуске по уходу за ребенком на : " + ДатаКалендаря + " " + Выборка.Сотрудник + Символы.ВК; 
		//			//Сообщить("В отпуске по уходу за ребенком на : " + ДатаКалендаря + " " + Выборка.Сотрудник);
		//			ЗаРебенком	= ЗаРебенком + 1;
		//			СотрДубли = Выборка.Сотрудник;
		//		КонецЕсли;	
		//	КонецЕсли;
		//КонецЕсли;
		
	КонецЦикла;
	
	Если Режим = "2" Тогда	//Агентства - подразделения  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	Начисления.Организация КАК Организация,
		|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора КАК ВидДоговора,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости КАК ВидЗанятости,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала КАК РегистраторДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания КАК РегистраторДатаОкончания
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = Начисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	Начисления.ПериодДействияНачало <= &С
		|	И Начисления.ПериодДействияКонец >= &По
		|	И Начисления.ВидРасчета В(&ВидРасчета)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|	И НЕ Начисления.Сторно
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Сотрудник,
		|	Начисления.ВидРасчета,
		|	Начисления.Организация,
		|	Начисления.ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
		|	Начисления.ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости";

		//|УПОРЯДОЧИТЬ ПО
		//|	Регистратор УБЫВ";
		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", ДопПодр);
		
	ИначеЕсли Режим = "1" Тогда	//Вся организация	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	Начисления.Организация КАК Организация,
		|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора КАК ВидДоговора,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости КАК ВидЗанятости,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала КАК РегистраторДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания КАК РегистраторДатаОкончания
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = Начисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	Начисления.ПериодДействияНачало <= &С
		|	И Начисления.ПериодДействияКонец >= &По
		|	И Начисления.ВидРасчета В(&ВидРасчета)
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|	И НЕ Начисления.Сторно
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Сотрудник,
		|	Начисления.ВидРасчета,
		|	Начисления.Организация,
		|	Начисления.ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
		|	Начисления.ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости";

		//|УПОРЯДОЧИТЬ ПО
		//|	Регистратор УБЫВ";
	ИначеЕсли Режим = "3" Тогда	 //г.Москва
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	Начисления.Организация КАК Организация,
		|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора КАК ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала КАК РегистраторДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания КАК РегистраторДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости КАК ВидЗанятости
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = Начисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	Начисления.ПериодДействияНачало <= &С
		|	И Начисления.ПериодДействияКонец >= &По
		|	И Начисления.ВидРасчета В(&ВидРасчета)
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|	И НЕ Начисления.Сторно
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Сотрудник,
		|	Начисления.ВидРасчета,
		|	Начисления.Организация,
		|	Начисления.ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
		|	Начисления.ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости";

		//|УПОРЯДОЧИТЬ ПО
		//|	Регистратор УБЫВ";
		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", СЗПодразделенияАгентства);
	ИначеЕсли Режим = "4" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	Начисления.Организация КАК Организация,
		|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора КАК ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	Начисления.ПериодРегистрации КАК ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала КАК РегистраторДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания КАК РегистраторДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости КАК ВидЗанятости
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = Начисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	Начисления.ПериодДействияНачало <= &С
		|	И Начисления.ПериодДействияКонец >= &По
		|	И Начисления.ВидРасчета В(&ВидРасчета)
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение В(&ТекущееПодразделениеОрганизации)
		|	И НЕ Начисления.Сторно
		|	И ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|	И ТекущиеКадровыеДанныеСотрудников.ОформленПоТрудовомуДоговору
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Сотрудник,
		|	Начисления.ВидРасчета,
		|	Начисления.Организация,
		|	Начисления.ПериодДействияНачало,
		|	Начисления.ПериодДействияКонец,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидДоговора,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
		|	Начисления.ПериодРегистрации,
		|	Начисления.Регистратор.ДатаНачала,
		|	Начисления.Регистратор.ДатаОкончания,
		|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости";

		//|УПОРЯДОЧИТЬ ПО
		//|	Регистратор УБЫВ";
		Запрос.УстановитьПараметр("ТекущееПодразделениеОрганизации", Подразделение);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидРасчета", СЗВРО);
	Запрос.УстановитьПараметр("по", ДатаКалендаря);
	Запрос.УстановитьПараметр("с", ДатаКалендаря);
	Запрос.УстановитьПараметр("Дата", ДатаКалендаря);

	
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	стар		= "";
	нов			= "";
	БерИРоды	= 0;	
	
	МассивСотрудниковВОтпускеПоУходу = Новый Массив;
	МассивСостояний = Новый Массив;
	МассивСостояний.Добавить(Перечисления.СостоянияСотрудника.ОтпускПоБеременностиИРодам);
	
	Пока Выборка.Следующий() Цикл		
		
		//проверка на отпуск
		Сотрудник	= Выборка.Сотрудник;
		
		Если СотрудникВОтпускеПоУходуЗаРебенкомИлиПоБеременностиИРодам(Сотрудник, ДатаКалендаря, МассивСостояний) И МассивСотрудниковВОтпускеПоУходу.Найти(Выборка.Сотрудник) = Неопределено Тогда 
			МассивСотрудниковВОтпускеПоУходу.Добавить(Выборка.Сотрудник);
			БерИРоды	= БерИРоды + 1;
			ЭтотОбъект.Лог = ЭтотОбъект.Лог + "По беременности и родам на : " + ДатаКалендаря + " " + Выборка.Сотрудник + Символы.ВК;
		КонецЕсли;                   	
		
		//ЕстьОтпуск	= Ложь;
		//Если Режим = "3" Тогда
		//	Подр		= СЗПодразделенияАгентства;
		//ИначеЕсли Режим = "2" Тогда
		//	Подр		= ДопПодр;
		//ИначеЕсли Режим = "4" Тогда
		//	Подр		= Подразделение;
		//КонецЕсли;	
		//ПроверкаОтпускВДекрет(Сотрудник, ДатаКалендаря, Подр, ЕстьОтпуск);
		//Если ЕстьОтпуск = Ложь И МассивСотрудниковВОтпускеПоУходу.Найти(Сотрудник) = Неопределено Тогда
		//	ЭтотОбъект.Лог = ЭтотОбъект.Лог + "По беременности и родам на : " + ДатаКалендаря + " " + Выборка.Сотрудник + Символы.ВК;
		//	//Сообщить("По беременности и родам на : " + ДатаКалендаря + " " + Выборка.Сотрудник);
		//	БерИРоды	= БерИРоды + 1;
		//КонецЕсли;
	КонецЦикла; 

	Декрет = ЗаРебенком + БерИРоды;
		
	ВидДня = "";
	РегламентированныйКалендар(ДатаКалендаря, ВидДня);
	
	Если ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		РежимЗапроса = "Будни"; //рабочий/предпраздничный
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	ИначеЕсли ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда
		РежимЗапроса = "Выходной"; //праздник/суббота/воскресенье
	КонецЕсли;
	
	Если День(ДатаКалендаря) = 1 Тогда
		Декрет1	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 2 Тогда
		Декрет2	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 3 Тогда
		Декрет3	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 4 Тогда
		Декрет4	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 5 Тогда
		Декрет5	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 6 Тогда
		Декрет6	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 7 Тогда
		Декрет7	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 8 Тогда
		Декрет8	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 9 Тогда
		Декрет9	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 10 Тогда
		Декрет10	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 11 Тогда
		Декрет11	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 12 Тогда
		Декрет12	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 13 Тогда
		Декрет13	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 14 Тогда
		Декрет14	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 15 Тогда
		Декрет15	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 16 Тогда
		Декрет16	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 17 Тогда
		Декрет17	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 18 Тогда
		Декрет18	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 19 Тогда
		Декрет19	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 20 Тогда
		Декрет20	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 21 Тогда
		Декрет21	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 22 Тогда
		Декрет22	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 23 Тогда
		Декрет23	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 24 Тогда
		Декрет24	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 25 Тогда
		Декрет25	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 26 Тогда
		Декрет26	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 27 Тогда
		Декрет27	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 28 Тогда
		Декрет28	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 29 Тогда
		Декрет29	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 30 Тогда
		Декрет30	= Декрет;
	ИначеЕсли День(ДатаКалендаря) = 31 Тогда
		Декрет31	= Декрет;		
	КонецЕсли;
	
	Если РежимЗапроса = "Выходной" Тогда
		Если День(ДатаКалендаря) = 1 Тогда
		ИначеЕсли День(ДатаКалендаря) = 2 И Декрет1 > Декрет Тогда
			Декрет2 = Декрет1;
		ИначеЕсли День(ДатаКалендаря) = 3 И Декрет2 > Декрет Тогда
			Декрет3 = Декрет2;
		ИначеЕсли День(ДатаКалендаря) = 4 И Декрет3 > Декрет Тогда
			Декрет4 = Декрет3;
		ИначеЕсли День(ДатаКалендаря) = 5 И Декрет4 > Декрет Тогда
			Декрет5 = Декрет4;
		ИначеЕсли День(ДатаКалендаря) = 6 И Декрет5 > Декрет Тогда
			Декрет6 = Декрет5;
		ИначеЕсли День(ДатаКалендаря) = 7 И Декрет6 > Декрет Тогда
			Декрет7 = Декрет6;
		ИначеЕсли День(ДатаКалендаря) = 8 И Декрет7 > Декрет Тогда
			Декрет8 = Декрет7;
		ИначеЕсли День(ДатаКалендаря) = 9 И Декрет8 > Декрет Тогда
			Декрет9 = Декрет8;
		ИначеЕсли День(ДатаКалендаря) = 10 И Декрет9 > Декрет Тогда
			Декрет10 = Декрет9;
		ИначеЕсли День(ДатаКалендаря) = 11 И Декрет10 > Декрет Тогда
			Декрет11 = Декрет10;
		ИначеЕсли День(ДатаКалендаря) = 12 И Декрет11 > Декрет Тогда
			Декрет12 = Декрет11;
		ИначеЕсли День(ДатаКалендаря) = 13 И Декрет12 > Декрет Тогда
			Декрет13 = Декрет12;
		ИначеЕсли День(ДатаКалендаря) = 14 И Декрет13 > Декрет Тогда
			Декрет14 = Декрет13;
		ИначеЕсли День(ДатаКалендаря) = 15 И Декрет14 > Декрет Тогда
			Декрет15 = Декрет14;
		ИначеЕсли День(ДатаКалендаря) = 16 И Декрет15 > Декрет Тогда
			Декрет16 = Декрет15;
		ИначеЕсли День(ДатаКалендаря) = 17 И Декрет16 > Декрет Тогда
			Декрет17 = Декрет16;
		ИначеЕсли День(ДатаКалендаря) = 18 И Декрет17 > Декрет Тогда
			Декрет18 = Декрет17;
		ИначеЕсли День(ДатаКалендаря) = 19 И Декрет18 > Декрет Тогда
			Декрет19 = Декрет18;
		ИначеЕсли День(ДатаКалендаря) = 20 И Декрет19 > Декрет Тогда
			Декрет20 = Декрет19;
		ИначеЕсли День(ДатаКалендаря) = 21 И Декрет20 > Декрет Тогда
			Декрет21 = Декрет20;
		ИначеЕсли День(ДатаКалендаря) = 22 И Декрет21 > Декрет Тогда
			Декрет22 = Декрет21;
		ИначеЕсли День(ДатаКалендаря) = 23 И Декрет22 > Декрет Тогда
			Декрет23 = Декрет22;
		ИначеЕсли День(ДатаКалендаря) = 24 И Декрет23 > Декрет Тогда
			Декрет24 = Декрет23;
		ИначеЕсли День(ДатаКалендаря) = 25 И Декрет24 > Декрет Тогда
			Декрет25 = Декрет24;
		ИначеЕсли День(ДатаКалендаря) = 26 И Декрет25 > Декрет Тогда
			Декрет26 = Декрет25;
		ИначеЕсли День(ДатаКалендаря) = 27 И Декрет26 > Декрет Тогда
			Декрет27 = Декрет26;
		ИначеЕсли День(ДатаКалендаря) = 28 И Декрет27 > Декрет Тогда
			Декрет28 = Декрет27;
		ИначеЕсли День(ДатаКалендаря) = 29 И Декрет28 > Декрет Тогда
			Декрет29 = Декрет28;
		ИначеЕсли День(ДатаКалендаря) = 30 И Декрет29 > Декрет Тогда
			Декрет30 = Декрет29;
		ИначеЕсли День(ДатаКалендаря) = 31 И Декрет30 > Декрет Тогда
			Декрет31 = Декрет30;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция СотрудникВОтпускеПоУходуЗаРебенкомИлиПоБеременностиИРодам(Сотрудник, ДатаКалендаря, Состояния)
	
	Запрос = Новый Запрос();	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостоянияСотрудников.Сотрудник КАК Сотрудник,
	               |	МАКСИМУМ(СостоянияСотрудников.Период) КАК Период
	               |ПОМЕСТИТЬ ВТ_ПериодыСостояний
	               |ИЗ
	               |	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
	               |ГДЕ
	               |	СостоянияСотрудников.Период <= &Дата
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СостоянияСотрудников.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПериодыСостояний.Сотрудник КАК Сотрудник,
	               |	ВТ_ПериодыСостояний.Период КАК Период,
	               |	СостоянияСотрудников.Состояние КАК Состояние
	               |ИЗ
	               |	ВТ_ПериодыСостояний КАК ВТ_ПериодыСостояний
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
	               |		ПО ВТ_ПериодыСостояний.Сотрудник = СостоянияСотрудников.Сотрудник
	               |			И (СостоянияСотрудников.Период = ВТ_ПериодыСостояний.Период)
	               |ГДЕ
	               |	ВТ_ПериодыСостояний.Сотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("Дата",КонецДня(ДатаКалендаря));
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда 
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			Если Состояния.Найти(Выборка.Состояние) <> Неопределено Тогда  
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

Процедура ГПХ(Режим, ДатаКалендаря, ДеньНедели, ДопПодразделения, СЗПодразделенияАгентства, ГПХ_ДВОУ, ГПХ1, ГПХ2, ГПХ3, ГПХ4, ГПХ5, ГПХ6, ГПХ7, ГПХ8, ГПХ9, ГПХ10,
	ГПХ11, ГПХ12, ГПХ13, ГПХ14, ГПХ15, ГПХ16, ГПХ17, ГПХ18, ГПХ19, ГПХ20, ГПХ21, ГПХ22, ГПХ23, ГПХ24, ГПХ25, ГПХ26,
	ГПХ27, ГПХ28, ГПХ29, ГПХ30, ГПХ31, ВидДняНачало, РабочийДеньНачало, ДопПодр) Экспорт	
	
	Если Режим = "2" Тогда	//Агентства - подразделения  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорРаботыУслуги.Ссылка,
		|	ДоговорРаботыУслуги.Сотрудник,
		|	ДоговорРаботыУслуги.ДатаНачала,
		|	ДоговорРаботыУслуги.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
		|ГДЕ
		|	ДоговорРаботыУслуги.Сотрудник В(&Сотрудник)
		|	И ДоговорРаботыУслуги.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорРаботыУслуги.Организация = &Организация
		|	И ДоговорРаботыУслуги.Подразделение В(&ПодразделениеОрганизации)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорАвторскогоЗаказа.Ссылка,
		|	ДоговорАвторскогоЗаказа.Сотрудник,
		|	ДоговорАвторскогоЗаказа.ДатаНачала,
		|	ДоговорАвторскогоЗаказа.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорАвторскогоЗаказа КАК ДоговорАвторскогоЗаказа
		|ГДЕ
		|	ДоговорАвторскогоЗаказа.Сотрудник В(&Сотрудник)
		|	И ДоговорАвторскогоЗаказа.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорАвторскогоЗаказа.Организация = &Организация
		|	И ДоговорАвторскогоЗаказа.Подразделение В(&ПодразделениеОрганизации)";
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ДопПодр);
		
	ИначеЕсли Режим = "1" Тогда	//Вся организация	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорРаботыУслуги.Ссылка,
		|	ДоговорРаботыУслуги.Сотрудник,
		|	ДоговорРаботыУслуги.ДатаНачала,
		|	ДоговорРаботыУслуги.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
		|ГДЕ
		|	ДоговорРаботыУслуги.Сотрудник В(&Сотрудник)
		|	И ДоговорРаботыУслуги.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорРаботыУслуги.Организация = &Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорАвторскогоЗаказа.Ссылка,
		|	ДоговорАвторскогоЗаказа.Сотрудник,
		|	ДоговорАвторскогоЗаказа.ДатаНачала,
		|	ДоговорАвторскогоЗаказа.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорАвторскогоЗаказа КАК ДоговорАвторскогоЗаказа
		|ГДЕ
		|	ДоговорАвторскогоЗаказа.Сотрудник В(&Сотрудник)
		|	И ДоговорАвторскогоЗаказа.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорАвторскогоЗаказа.Организация = &Организация";
		
	ИначеЕсли Режим = "3" Тогда	 //г.Москва
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорРаботыУслуги.Ссылка,
		|	ДоговорРаботыУслуги.Сотрудник,
		|	ДоговорРаботыУслуги.ДатаНачала,
		|	ДоговорРаботыУслуги.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
		|ГДЕ
		|	ДоговорРаботыУслуги.Сотрудник В(&Сотрудник)
		|	И ДоговорРаботыУслуги.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорРаботыУслуги.Организация = &Организация
		|	И ДоговорРаботыУслуги.Подразделение В(&ПодразделениеОрганизации)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорАвторскогоЗаказа.Ссылка,
		|	ДоговорАвторскогоЗаказа.Сотрудник,
		|	ДоговорАвторскогоЗаказа.ДатаНачала,
		|	ДоговорАвторскогоЗаказа.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорАвторскогоЗаказа КАК ДоговорАвторскогоЗаказа
		|ГДЕ
		|	ДоговорАвторскогоЗаказа.Сотрудник В(&Сотрудник)
		|	И ДоговорАвторскогоЗаказа.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорАвторскогоЗаказа.Организация = &Организация
		|	И ДоговорАвторскогоЗаказа.Подразделение В(&ПодразделениеОрганизации)";
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", СЗПодразделенияАгентства);
	ИначеЕсли Режим = "4" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорРаботыУслуги.Ссылка,
		|	ДоговорРаботыУслуги.Сотрудник,
		|	ДоговорРаботыУслуги.ДатаНачала,
		|	ДоговорРаботыУслуги.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
		|ГДЕ
		|	ДоговорРаботыУслуги.Сотрудник В(&Сотрудник)
		|	И ДоговорРаботыУслуги.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорРаботыУслуги.Организация = &Организация
		|	И ДоговорРаботыУслуги.Подразделение В(&ПодразделениеОрганизации)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорАвторскогоЗаказа.Ссылка,
		|	ДоговорАвторскогоЗаказа.Сотрудник,
		|	ДоговорАвторскогоЗаказа.ДатаНачала,
		|	ДоговорАвторскогоЗаказа.ДатаОкончания
		|ИЗ
		|	Документ.ДоговорАвторскогоЗаказа КАК ДоговорАвторскогоЗаказа
		|ГДЕ
		|	ДоговорАвторскогоЗаказа.Сотрудник В(&Сотрудник)
		|	И ДоговорАвторскогоЗаказа.ДатаОкончания >= &ДатаКалендаря
		|	И ДоговорАвторскогоЗаказа.Организация = &Организация
		|	И ДоговорАвторскогоЗаказа.Подразделение В(&ПодразделениеОрганизации)";
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Подразделение);
		
	КонецЕсли;
	Запрос.УстановитьПараметр("Сотрудник", ГПХ_ДВОУ);
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.НайтиПоНаименованию("ППФ Страхование жизни ООО"));
	Запрос.УстановитьПараметр("ДатаКалендаря", ДатаКалендаря);
	
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	ГПХ		= 0;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДатаНачала <= ДатаКалендаря Тогда		
			ГПХ	= ГПХ + 1;
		КонецЕсли;	
	КонецЦикла;
	
	Если День(ДатаКалендаря) = 1 Тогда
		ГПХ1	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 2 Тогда
		ГПХ2	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 3 Тогда
		ГПХ3	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 4 Тогда
		ГПХ4	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 5 Тогда
		ГПХ5	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 6 Тогда
		ГПХ6	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 7 Тогда
		ГПХ7	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 8 Тогда
		ГПХ8	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 9 Тогда
		ГПХ9	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 10 Тогда
		ГПХ10	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 11 Тогда
		ГПХ11	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 12 Тогда
		ГПХ12	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 13 Тогда
		ГПХ13	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 14 Тогда
		ГПХ14	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 15 Тогда
		ГПХ15	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 16 Тогда
		ГПХ16	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 17 Тогда
		ГПХ17	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 18 Тогда
		ГПХ18	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 19 Тогда
		ГПХ19	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 20 Тогда
		ГПХ20	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 21 Тогда
		ГПХ21	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 22 Тогда
		ГПХ22	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 23 Тогда
		ГПХ23	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 24 Тогда
		ГПХ24	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 25 Тогда
		ГПХ25	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 26 Тогда
		ГПХ26	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 27 Тогда
		ГПХ27	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 28 Тогда
		ГПХ28	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 29 Тогда
		ГПХ29	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 30 Тогда
		ГПХ30	= ГПХ;
	ИначеЕсли День(ДатаКалендаря) = 31 Тогда
		ГПХ31	= ГПХ;		
	КонецЕсли;
	
КонецПроцедуры

Функция СписокДнейВМесяце(ТЗДниМесяца) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.Год,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &с И &по
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	Запрос.УстановитьПараметр("по", КонецМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("с", НачалоМесяца(МесяцПериод));
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.НайтиПоКоду("РФ"));
	Результат	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	Пока Выборка.Следующий()Цикл
		НоваяСтрока					= ТЗДниМесяца.Добавить();
		НоваяСтрока.ДатаКалендаря	= Выборка.Дата;
		НоваяСтрока.ВидДня			= Выборка.ВидДня;		
		Если ДеньНедели(Выборка.Дата) = 6 Тогда // Суббота
			НоваяСтрока.ДеньНедели	= Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
		ИначеЕсли ДеньНедели(Выборка.Дата) = 7 Тогда // Воскресенье
			НоваяСтрока.ДеньНедели	= Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;	
		КонецЕсли;		
	КонецЦикла;
	
	Возврат ТЗДниМесяца; 
	
КонецФункции;

