&НаКлиенте
Процедура Печать(ИдентификаторКоманды, МассивДокументов) Экспорт
	Сотрудник = МассивДокументов[0];
	ЭтаФорма.Открыть();
	Инициализация();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Инициализация();
	
КонецПроцедуры

&НаКлиенте
Процедура Инициализация()
	
	ЭтаФорма.Модифицированность = Ложь;
	ТрудоваяДеятельностьФизическихЛиц.Очистить();
	СведенияОСтажах.Очистить();
	СтажиФизическихЛиц.Очистить();
	СтажиФизическихЛицПрочитан = Ложь;
	ТрудоваяДеятельностьФизическихЛицПрочитан = Ложь;
	
	СотрудникПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	ФизическоеЛицоСсылка = Сотрудник.ФизическоеЛицо;
	
	Если НЕ СтажиФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "СтажиФизическихЛиц");
		СтажиФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если НЕ ТрудоваяДеятельностьФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "ТрудоваяДеятельностьФизическихЛиц");
		ТрудоваяДеятельностьФизическихЛицПрочитан = Истина;
	КонецЕсли; 

	
	ЗаполнитьДанныеОСтаже();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОСтаже()	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыСтажа.Ссылка КАК ВидСтажа
	|ИЗ
	|	Справочник.ВидыСтажа КАК ВидыСтажа
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыСтажа.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СведенияОСтажах.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		СформироватьПредставлениеСтажа(НоваяСтрока, ТекущаяДатаСеанса());
	КонецЦикла;
	
	СтажиФизическихЛицВСведенияОСтажах();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСтажа(ДанныеСтажа, ДатаАктуальности)
	
	ПредставлениеСтажа = "";
	Если Не ЗначениеЗаполнено(ДанныеСтажа.ДатаОтсчета) Тогда
		ПредставлениеСтажа = НСтр("ru = 'Нажмите, чтобы заполнить'");
	КонецЕсли;
	
	Если ПредставлениеСтажа = "" Тогда 
	
		СведенияОСтаже = ЗарплатаКадрыРасширенныйКлиентСервер.СведенияОСтаже();
		СведенияОСтаже.ДатаОтсчета = ДанныеСтажа.ДатаОтсчета;
		СведенияОСтаже.Лет = ДанныеСтажа.Лет;
		СведенияОСтаже.Месяцев = ДанныеСтажа.Месяцев;
		СведенияОСтаже.Дней = ДанныеСтажа.Дней;
		СведенияОСтаже.ИсчисляетсяСДатыПриема = ДанныеСтажа.ИсчисляетсяСДатыПриема;
		
		ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(СведенияОСтаже, ДатаАктуальности);
		
		Если СведенияОСтаже.ИсчисляетсяСДатыПриема Тогда
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'С момента приема на работу (%1) на %2 составил %3'"), 
				Формат(ДанныеСтажа.ДатаОтсчета, "ДЛФ=Д"),
				Формат(ДатаАктуальности, "ДЛФ=Д"),
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		Иначе
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По трудовой книжке на %1 составил %2'"), 
				Формат(ДатаАктуальности, "ДЛФ=Д"), 
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСтажа.ПредставлениеСтажа = ПредставлениеСтажа;
	
КонецПроцедуры

&НаСервере
Процедура СтажиФизическихЛицВСведенияОСтажах()
	
	//МассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого СтрокаСтажа Из СведенияОСтажах Цикл
		
		НайденныеСтроки = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", СтрокаСтажа.ВидСтажа));
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			ДанныеСтажа = Неопределено;
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если ДанныеСтажа = Неопределено
					Или ДанныеСтажа.Период < НайденнаяСтрока.Период Тогда
					
					ДанныеСтажа = НайденнаяСтрока;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(СтрокаСтажа, ДанныеСтажа);
			СтрокаСтажа.Лет = Цел(ДанныеСтажа.РазмерМесяцев / 12);
			СтрокаСтажа.Месяцев = ДанныеСтажа.РазмерМесяцев - СтрокаСтажа.Лет * 12;
			СтрокаСтажа.Дней = ДанныеСтажа.РазмерДней;
			
			СформироватьПредставлениеСтажа(СтрокаСтажа, ТекущаяДатаСеанса());
		//	
		//Иначе 
		//	МассивУдаляемыхСтрок.Добавить(СтрокаСтажа);
		КонеЦЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
	//Для Каждого Строка Из МассивУдаляемыхСтрок Цикл 
	//	СведенияОСтажах.Удалить(Строка);
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтажиЗаданы(Форма)
	
	СтажиЗаданы = Ложь;
	
	Для Каждого СтрокаСтажа Из Форма.СведенияОСтажах Цикл 
		
		Если СтрокаСтажа.ИсчисляетсяСДатыПриема Или ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета)
			Или СтрокаСтажа.Лет <> 0 Или СтрокаСтажа.Месяцев <> 0 Или СтрокаСтажа.Дней <> 0 Тогда 
			
			СтажиЗаданы = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтажиЗаданы;
	
КонецФункции

&НаКлиенте
Процедура РасчитатьСтаж(Команда)
	
	Если ТрудоваяДеятельностьФизическихЛиц.Количество()>0 Тогда
		
		ЭтаФорма.Модифицированность = Истина;
		
		ИтогСтажДатаОтсчёта		=	Дата('00010101');
		ИтогСтажЛет				=	0;
		ИтогСтажМесяцев			=	0;
		ИтогСтажДней			=	0;

		РасчитатьСтажНаСервере(ИтогСтажДатаОтсчёта, ИтогСтажЛет, ИтогСтажМесяцев, ИтогСтажДней);
		
		ДанныеСтажа = Новый Структура("ИсчисляетсяСДатыПриема,ДатаОтсчета,Лет,Месяцев,Дней,ПредставлениеСтажа");
		
		ДанныеСтажа.ИсчисляетсяСДатыПриема 	= Ложь;
		ДанныеСтажа.ДатаОтсчета 			= ИтогСтажДатаОтсчёта;
		ДанныеСтажа.Лет 					= ИтогСтажЛет;
		ДанныеСтажа.Месяцев 				= ИтогСтажМесяцев;
		ДанныеСтажа.Дней 					= ИтогСтажДней;
		
	    СформироватьПредставлениеСтажа(ДанныеСтажа, ОбщегоНазначенияКлиент.ДатаСеанса());
		
		НайденнаяСтрока = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", ПолучитьВидСтажаДляБольничногоЛиста()));
		Если НайденнаяСтрока.Количество() > 0 Тогда
			
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока[0], ДанныеСтажа); 
			
		КонецЕсли;
		
		ЭтаФорма.ОбновитьОтображениеДанных();
		
		НоваяСтрокаСтажейНаФорме = ЭтотОбъект.СтажиФизическихЛиц.Добавить();
		НоваяСтрокаСтажейНаФорме.ВидСтажа = ПолучитьВидСтажаДляБольничногоЛиста();
		НоваяСтрокаСтажейНаФорме.ДатаОтсчета = ИтогСтажДатаОтсчёта;
		НоваяСтрокаСтажейНаФорме.ФизическоеЛицо = ФизическоеЛицоСсылка;
		НоваяСтрокаСтажейНаФорме.РазмерДней = ИтогСтажДней;
		НоваяСтрокаСтажейНаФорме.РазмерМесяцев = ИтогСтажМесяцев + (ИтогСтажЛет * 12);
		НоваяСтрокаСтажейНаФорме.ИсчисляетсяСДатыПриема = Ложь;
		НоваяСтрокаСтажейНаФорме.Период = ИтогСтажДатаОтсчёта;	
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РасчитатьСтажНаСервере(ИтогСтажДатаОтсчёта, ИтогСтажЛет, ИтогСтажМесяцев, ИтогСтажДней)
	
	ЗаполнитьСтажНаСервере(ИтогСтажДатаОтсчёта, ИтогСтажЛет, ИтогСтажМесяцев, ИтогСтажДней);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтажНаСервере(ИтогСтажДатаОтсчёта, ИтогСтажЛет, ИтогСтажМесяцев, ИтогСтажДней)
	
	ТаблицаЗаписейОСтажеПоСотруднику = ТрудоваяДеятельностьФизическихЛиц.Выгрузить();
	
	ПолучитьТаблицуИтоговСтажаПоСотруднику(ТаблицаЗаписейОСтажеПоСотруднику, ИтогСтажДатаОтсчёта, ИтогСтажЛет, ИтогСтажМесяцев, ИтогСтажДней);
	
	Если ИтогСтажДатаОтсчёта <> Дата(1,1,1) Или ИтогСтажЛет <> 0 Или ИтогСтажМесяцев <> 0 Или ИтогСтажДней <> 0 Тогда
		
		МенеджерЗаписи = РегистрыСведений.СтажиФизическихЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ВидСтажа = ПолучитьВидСтажаДляБольничногоЛиста();
		МенеджерЗаписи.ДатаОтсчета = ИтогСтажДатаОтсчёта;
		МенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоСсылка;
		МенеджерЗаписи.РазмерДней = ИтогСтажДней;
		МенеджерЗаписи.РазмерМесяцев = ИтогСтажМесяцев + (ИтогСтажЛет * 12);
		МенеджерЗаписи.ИсчисляетсяСДатыПриема = Ложь;
		МенеджерЗаписи.Активность = Истина;
		МенеджерЗаписи.Записать(Истина);
	
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьСтажНаСервере()

&НаСервере
Процедура ПолучитьТаблицуИтоговСтажаПоСотруднику(ЗаписиОСтаже, РасчётСтажДатаОтсчёта, РасчётЛет=0, РасчётМесяцев=0, РасчётДней =0);
    ДлинаСуток = 86400;
	
	ТаблицаЗаписейОСтаже = ЗаписиОСтаже.Скопировать();
    //РАСЧЕТ ОБЩЕГО ТРУДОВОГО СТАЖА С УЧЕТОМ ПЕРЕСЕЧЕНИЯ ПЕРИОДОВ

	//Выполним календарное поглащение:
	ВсегоЗаписей = ТаблицаЗаписейОСтаже.Количество(); 
	Для Н = 0 по ВсегоЗаписей - 1 Цикл
		Запись = ТаблицаЗаписейОСтаже[Н];

		Для К = 0 по ВсегоЗаписей - 1 Цикл
			Запись2 = ТаблицаЗаписейОСтаже[К];

			Если Запись = Запись2 Тогда//Запись не может поглатить саму себя
				Продолжить;
			КонецЕсли;	 
			
			Если (Запись2.ДатаНачала > Запись.ДатаОкончания) или
				(Запись2.ДатаОкончания < Запись.ДатаНачала)Тогда
				//Периоды не пересекаются
				Продолжить;
			Иначе	
				Если (Запись2.ДатаНачала >= Запись.ДатаНачала) Тогда
					Если (Запись2.ДатаОкончания <= Запись.ДатаОкончания) Тогда
						//Полное поглощение периода - удаляем запись2 с помощью задания отрицательного интервала
						Запись2.ДатаНачала = Дата('00010102');
						Запись2.ДатаОкончания = Дата('00010101');
					Иначе//Запись 2 начинается позднее и оканчивается позднее записи 1 - обрежем голову
						Запись2.ДатаНачала = Запись.ДатаОкончания + ДлинаСуток;
					КонецЕсли;	
				Иначе
					Если (Запись2.ДатаОкончания <= Запись.ДатаОкончания) Тогда
						//Запись2 начинается раньше и оканчивается раньше Записи1 - обрежем хвост
						Запись2.ДатаОкончания = Запись.ДатаНачала - ДлинаСуток;
					Иначе//Запись 2 начинается раньше и оканчивается позднее записи 1 - разбиение интервала на 2 части
						//породим вторую часть копирование исходной записи
						НоваяСтрока = ТаблицаЗаписейОСтаже.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись2);
						//обрежем хвост у первой части
						Запись2.ДатаОкончания = Запись.ДатаНачала - ДлинаСуток;
						//обрежем голову у второй части
						НоваяСтрока.ДатаНачала = Запись.ДатаОкончания + ДлинаСуток;
					КонецЕсли;	
				КонецЕсли;	 
			КонецЕсли;	 
		КонецЦикла;	

	КонецЦикла;	
	

	//Расчет общего стажа по оставшимся записям
	ОбщийСтажДатаОтсчёта		=	Дата('00010101');
	ОбщийСтажЛет				=	0;
	ОбщийСтажМесяцев			=	0;
	ОбщийСтажДней				=	0;

	Для Каждого Запись из ТаблицаЗаписейОСтаже Цикл

		//Пропустим поглощенные и дополнительные записи
		Если  Запись.ДатаОкончания = Дата('00010101') Тогда
			Продолжить;
		КонецЕсли;	
		
		ЛетПоПериоду = 0;
		МесяцевПоПериоду = 0;
		ДнейПоПериоду = 0;
		ПерсонифицированныйУчет.ПолучитьСтажЗаПериод(Запись.ДатаОкончания,	Запись.ДатаНачала, ЛетПоПериоду,	МесяцевПоПериоду, ДнейПоПериоду);

		ОбщийСтажДатаОтсчёта	= Запись.ДатаОкончания; 
		ОбщийСтажЛет			=	ОбщийСтажЛет		+	ЛетПоПериоду;
		ОбщийСтажМесяцев		=	ОбщийСтажМесяцев	+	МесяцевПоПериоду;
		ОбщийСтажДней			=	ОбщийСтажДней		+	ДнейПоПериоду;
	КонецЦикла;	
	
	//Заносим в таблицу итогового стажа данные об общем стаже

	ПерсонифицированныйУчет.ПолучитьПриведенныйСтаж(ОбщийСтажЛет,ОбщийСтажМесяцев,ОбщийСтажДней);
	Если ОбщийСтажЛет + ОбщийСтажМесяцев + ОбщийСтажДней <> 0 Тогда
		//РасчётСтажДатаОтсчёта	= ОбщийСтажДатаОтсчёта+ДлинаСуток;
		//Получаем дату приёма
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицоСсылка);
		ПараметрыПолученияСотрудников.НачалоПериода = ТекущаяДатаСеанса();	
		ПараметрыПолученияСотрудников.ОкончаниеПериода = ТекущаяДатаСеанса();
		ПараметрыПолученияСотрудников.КадровыеДанные = "ДатаПриема";
		
		СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников);
		
		ДатаПриема = Неопределено;
		Для Каждого ДанныеСотрудника Из СотрудникиОрганизации Цикл
			Если ЗначениеЗаполнено(ДанныеСотрудника.ДатаПриема) Тогда 
				Если ДатаПриема = Неопределено Тогда 
					ДатаПриема = ДанныеСотрудника.ДатаПриема;
				Иначе 
					ДатаПриема = Мин(ДатаПриема, ДанныеСотрудника.ДатаПриема);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(ДатаПриема) Тогда 
			Выборка = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.Выбрать(Новый Структура("Сотрудник", Сотрудник));
			Если Выборка.Следующий() Тогда 
				ДатаПриема = Выборка.ДатаПриема;
			Иначе     								
				ДатаПриема = ТекущаяДатаСеанса();
			КонецЕсли;
		КонецЕсли;
		
		РасчётСтажДатаОтсчёта 	= ДатаПриема;
		
		РасчётЛет				= ОбщийСтажЛет;
		РасчётМесяцев			= ОбщийСтажМесяцев;
		РасчётДней				= ОбщийСтажДней;
	КонецЕсли;	 
КонецПроцедуры 

&НаСервере
Функция ПолучитьВидСтажаДляБольничногоЛиста()
	Возврат Справочники.ВидыСтажа.НайтиПоНаименованию("Страховой стаж для оплаты больничных листов", Истина);
КонецФункции // ПолучитьВидСтажаДляБольничногоЛиста()


&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	
	Попытка
		
		НачатьТранзакцию();
		
		ТрудоваяДеятельностьНЗ = РегистрыСведений.ТрудоваяДеятельностьФизическихЛиц.СоздатьНаборЗаписей();	
		ТрудоваяДеятельностьНЗ.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоСсылка);
		ТрудоваяДеятельностьНЗ.Очистить();
		ТрудоваяДеятельностьНЗ.Загрузить(ТрудоваяДеятельностьФизическихЛиц.Выгрузить());
		
		СтажиНЗ = РегистрыСведений.СтажиФизическихЛиц.СоздатьНаборЗаписей();
		СтажиНЗ.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицоСсылка);
		СтажиНЗ.Очистить();
		Для Каждого СтрокаСтажей Из СведенияОСтажах Цикл 
			Если СтрокаСтажей.ПредставлениеСтажа = "Нажмите, чтобы заполнить" Тогда 
				Продолжить;
			КонецЕсли;
			СтажиНЗНоваяСтрока = СтажиНЗ.Добавить();
			ЗаполнитьЗначенияСвойств(СтажиНЗНоваяСтрока, СтрокаСтажей);
			СтажиНЗНоваяСтрока.Период			= СтрокаСтажей.ДатаОтсчета;
			СтажиНЗНоваяСтрока.РазмерМесяцев 	= СтрокаСтажей.Лет * 12 + СтрокаСтажей.Месяцев;
			СтажиНЗНоваяСтрока.РазмерДней		= СтрокаСтажей.Дней;
			СтажиНЗНоваяСтрока.ФизическоеЛицо 	= ФизическоеЛицоСсылка;
		КонецЦикла;         	
		
		ТрудоваяДеятельностьНЗ.Записать(Истина);
		СтажиНЗ.Записать(Истина);
		
		ЗафиксироватьТранзакцию();
		
		ЭтаФорма.Модифицированность = Ложь;
		Сообщить("Данные записаны");
		
	Исключение
		
		ОтменитьТранзакцию();
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент<>Неопределено И Элемент.ТекущиеДанные<>Неопределено Тогда 
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СведенияОСтажахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДатаСведений = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ВидыСтажа = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущиеДанные.ВидСтажа));
	
	КадровыйУчетРасширенныйКлиент.ОткрытьФормуРедактированияСтажейФизическогоЛица(
	ЭтотОбъект, ФизическоеЛицоСсылка, ДатаСведений, ВидыСтажа, СтажиФизическихЛиц, Заголовок);

КонецПроцедуры

