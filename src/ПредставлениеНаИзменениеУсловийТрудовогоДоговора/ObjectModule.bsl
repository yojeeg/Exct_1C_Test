////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Назначение.Добавить(Неопределено);
	ПараметрыРегистрации.Версия = "1.3";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Представление на изменение условий трудового договора списком'");
	НоваяКоманда.Идентификатор = "ПредставлениеНаИзменениеУсловийТрудовогоДоговораСписком";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции


#КонецОбласти

#Область ПроцедурыПечати
/////////////////////////////////////////////////////////////////////////
///////СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУКНЦИИ
Функция ПолучитьДанныеПечати(МассивОбъектов) Экспорт
	Сотрудник = МассивОбъектов[0];
	Если ЗначениеЗаполнено(Сотрудник) Тогда 
		ДанныеДляПечати = ПолучитьДанныеДляПечати(Сотрудник);
		Если ДанныеДляПечати <> Неопределено Тогда 
			СоответствиеПараметров = Новый Структура;
			Для Каждого СтрокаСтруктуры Из ДанныеДляПечати Цикл 
				Если СтрНайти(СтрокаСтруктуры.Ключ, "Дата") Тогда 
					ДобавитьПараметр(СоответствиеПараметров, СтрокаСтруктуры.Ключ, Формат(СтрокаСтруктуры.Значение,"ДЛФ=ДД"));
				ИначеЕсли СтрНайти(СтрокаСтруктуры.Ключ, "ЦелеваяПремия") Тогда 
					ДобавитьПараметр(СоответствиеПараметров, СтрокаСтруктуры.Ключ, Окр(СтрокаСтруктуры.Значение/?(ДанныеДляПечати.Оклад=0,1,ДанныеДляПечати.Оклад)*100,2));
				Иначе 
					ДобавитьПараметр(СоответствиеПараметров, СтрокаСтруктуры.Ключ, СтрокаСтруктуры.Значение);
				КонецЕсли;
			КонецЦикла;
			Возврат СоответствиеПараметров;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(Сотрудник)
	Если ЗначениеЗаполнено(Сотрудник) Тогда 
		ДанныеПечати = СтруктураПечати();
		МассивОкладов = Новый Массив;
		МассивОкладов.Добавить(Справочники.ПоказателиРасчетаЗарплаты.Оклад);
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение КАК Подразделение3,
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение.Родитель КАК Подразделение2,
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение.Родитель.Родитель КАК Подразделение1,
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность КАК Должность,
		               |	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """") КАК ФИО,
		               |	ЕСТЬNULL(ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Значение, 0) КАК Оклад,
		               |	ППФ_ДанныеПремированияСотрудниковСрезПоследних.ПериодПремирования,
		               |	ЕСТЬNULL(ППФ_ДанныеПремированияСотрудниковСрезПоследних.ЦелеваяПремия, 0) КАК ЦелеваяПремия,
		               |	&ТекущаяДата
		               |ИЗ
		               |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
		               |		ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.СрезПоследних(, Показатель В (&МассивОкладов)) КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних
		               |		ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Сотрудник
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ППФ_ДанныеПремированияСотрудников.СрезПоследних КАК ППФ_ДанныеПремированияСотрудниковСрезПоследних
		               |		ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = ППФ_ДанныеПремированияСотрудниковСрезПоследних.Сотрудник
		               |ГДЕ
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник = &Сотрудник";
		Запрос.УстановитьПараметр("МассивОкладов",МассивОкладов);					   
		Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			ЗаполнитьЗначенияСвойств(ДанныеПечати, Выборка);
			РедактироватьПорядокПодразделений(ДанныеПечати);
		КонецЕсли; 						   
		Возврат ДанныеПечати;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ДобавитьПараметр(Структура, ИсходнаяСтрока, СтрокаЗамены)
	 Структура.Вставить(ИсходнаяСтрока,СтрокаЗамены);
КонецПроцедуры

Функция СтруктураПечати()
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ФИО");
	СтруктураПечати.Вставить("ТекущаяДата");
	СтруктураПечати.Вставить("Подразделение1");
	СтруктураПечати.Вставить("Подразделение2");
	СтруктураПечати.Вставить("Подразделение3");
	СтруктураПечати.Вставить("Должность");
	СтруктураПечати.Вставить("Оклад");
	СтруктураПечати.Вставить("ПериодПремирования");
	СтруктураПечати.Вставить("ЦелеваяПремия");	
	Возврат СтруктураПечати;
КонецФункции

Процедура РедактироватьПорядокПодразделений(СтруктураДанных)

	Если Не ЗначениеЗаполнено(СтруктураДанных.Подразделение2) И Не ЗначениеЗаполнено(СтруктураДанных.Подразделение1) Тогда 
		СтруктураДанных.Подразделение1 = СтруктураДанных.Подразделение3;
		СтруктураДанных.Подразделение3 = Неопределено;
	ИначеЕсли Не ЗначениеЗаполнено(СтруктураДанных.Подразделение1) И ЗначениеЗаполнено(СтруктураДанных.Подразделение2) Тогда 
		СтруктураДанных.Подразделение1 = СтруктураДанных.Подразделение2;
		СтруктураДанных.Подразделение2 = СтруктураДанных.Подразделение3;		
		СтруктураДанных.Подразделение3 = Неопределено;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти