/////////////////////////////////////////////////////////////////////////
///////СВЕДЕНИЯ ОБ ОБРАБОТКЕ

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.Увольнение");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ППФ Обходной лист"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", "ППФ Обходной лист");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Обходной лист", "ОбходнойЛист", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("ОбходнойЛист");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОбходнойЛист") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ОбходнойЛист", "Обходной лист",	ПолучитьДокумент(Макет,МассивОбъектов));
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДокумент(Макет, МассивОбъектов) Экспорт
	
	Документ = МассивОбъектов[0];
	
	Организация = Документ.Организация;
	ДатаУвольнения = Документ.ДатаУвольнения;
	Сотрудник = Документ.Сотрудник;
			
	ДанныеСотрудника = ПолучитьДанныеСотрудника(Сотрудник, Организация, ДатаУвольнения);
	
	ТабДок = Новый ТабличныйДокумент;
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблШапка.Параметры.ФИО 				= Сотрудник;
	ОблШапка.Параметры.Организация		= Организация.НаименованиеСокращенное;
	ОблШапка.Параметры.ДатаУвольнения 	= Формат(ДатаУвольнения, "ДЛФ=ДД");
	ОблШапка.Параметры.НомерПриказа 	= Документ.Номер;
	ОблШапка.Параметры.ДатаОбходного 	= Формат(ДатаУвольнения, "ДЛФ=ДД");
	ОблШапка.Параметры.ДатаПриказа 		= Формат(Документ.Дата, "ДЛФ=ДД");

	
	Если ДанныеСотрудника <> Неопределено Тогда
		
		ОблШапка.Параметры.Должность = ДанныеСотрудника.Должность;
		ОблШапка.Параметры.Подразделение = ДанныеСотрудника.Подразделение;
		
	КонецЕсли;
	
	ТабДок.Вывести(ОблШапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ППФ_ПодписантыОбходногоЛиста.Должность КАК Должность,
	               |	ПОДСТРОКА(ФИОФизическихЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизическихЛицСрезПоследних.Отчество, 1, 1) + "". "" + ФИОФизическихЛицСрезПоследних.Фамилия КАК ФИО
	               |ИЗ
	               |	РегистрСведений.ППФ_ПодписантыОбходногоЛиста КАК ППФ_ПодписантыОбходногоЛиста
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(, ) КАК ФИОФизическихЛицСрезПоследних
	               |		ПО ППФ_ПодписантыОбходногоЛиста.Сотрудник.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ППФ_ПодписантыОбходногоЛиста.Порядок";
	ВыгрузкаПодписантов = Запрос.Выполнить().Выгрузить();				   
	
	Для Каждого Строка Из ВыгрузкаПодписантов Цикл
		
		ОблПодписанты = Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(ОблПодписанты.Параметры, Строка);
		ТабДок.Вывести(ОблПодписанты);
		
	КонецЦикла;  
	
	
	ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОблПодвал);
	
	Возврат ТабДок;
	
КонецФункции // ПолучитьДокумент()

Функция ПолучитьДанныеСотрудника(Сотрудник, Организация, ДатаУвольнения)
	
	Запрос = новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность,
	|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_КадроваяИстория
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&ДатаУвольнения, Сотрудник = &Сотрудник) КАК КадроваяИсторияСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КадроваяИстория.Должность КАК Должность,
	|	ВТ_КадроваяИстория.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадроваяИстория КАК ВТ_КадроваяИстория
	|		ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = ВТ_КадроваяИстория.Сотрудник
	|ГДЕ
	|	ТекущиеКадровыеДанныеСотрудников.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаУвольнения", ДатаУвольнения);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда 
			Возврат Выборка;	
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьДанныеПоПодписантам(МассивПодписантов)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка,
	|	ПОДСТРОКА(ФИОФизическихЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизическихЛицСрезПоследних.Отчество, 1, 1) + "". "" + ФИОФизическихЛицСрезПоследних.Фамилия КАК ФИО,
	|	КадроваяИсторияСотрудниковСрезПоследних.Должность
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|		ПО Сотрудники.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
	|		ПО Сотрудники.Ссылка = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	Сотрудники.Ссылка В(&МассивПодписантов)";
	
	Запрос.УстановитьПараметр("МассивПодписантов", МассивПодписантов);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Возврат Результат.Выгрузить();
	КонецЕсли; 
	
	Возврат Новый ТаблицаЗначений;
	
КонецФункции // ПолучитьДанныеПоПодписантам()
 
 