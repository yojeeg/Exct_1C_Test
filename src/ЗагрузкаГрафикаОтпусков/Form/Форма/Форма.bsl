/////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ
/////////////////////////////////////////////////

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПолучениеЗагруженнойТаблицыЗначений" Тогда
		
		ПолучениеДанныхИзЗагруженнойТаблицыЗначений(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	//Если Подразделение.Пустая() Тогда 
	//	Сообщить("Укажите подразделение.");
	//	Возврат;
	//КонецЕсли;
	
	СписокКолонок = Новый СписокЗначений;  	
	СписокКолонок.Добавить("Сотрудник","Сотрудник"); 
	СписокКолонок.Добавить("КоличествоДней", "КоличествоДней");
	СписокКолонок.Добавить("Январь",	"Январь");
	СписокКолонок.Добавить("Февраль", 	"Февраль");
	СписокКолонок.Добавить("Март",		"Март");
	СписокКолонок.Добавить("Апрель",	"Апрель");
	СписокКолонок.Добавить("Май",		"Май");
	СписокКолонок.Добавить("Июнь",		"Июнь");
	СписокКолонок.Добавить("Июль",		"Июль");;
	СписокКолонок.Добавить("Август",	"Август");
	СписокКолонок.Добавить("Сентябрь",	"Сентябрь");
	СписокКолонок.Добавить("Октябрь",	"Октябрь");
	СписокКолонок.Добавить("Ноябрь",	"Ноябрь");
	СписокКолонок.Добавить("Декабрь",	"Декабрь");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокКолонок", СписокКолонок);
	
	ОткрытьФорму("Обработка.ППФ_ОБЩ_ЗагрузкаИзТабличногоДокумента.Форма.ЗагрузкаИзТабличногоДокумента", ПараметрыФормы, ЭтаФорма);	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуСотрудников()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	               |	КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ФИОФизическихЛицСрезПоследних.Фамилия КАК Фамилия,
	               |	ФИОФизическихЛицСрезПоследних.Имя КАК Имя,
	               |	ФИОФизическихЛицСрезПоследних.Отчество КАК Отчество
	               |ИЗ
	               |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	               |		ПО КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо";
	//Запрос.УстановитьПараметр("Подразделение",Подразделение);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	Если Не ЗначениеЗаполнено(Объект.ГрафикОтпусков) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран график отпусков. Если он еще не создан, необходимо создать и записать пустой документ, после чего выбрать его в обработке.");
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаДанных Из Отпуска Цикл 
		Если Не ЗначениеЗаполнено(СтрокаДанных.Сотрудник) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось оперделить сотрудника. Заполните вручную.",,"Отпуска["+Отпуска.Индекс(СтрокаДанных)+"].Сотрудник");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	ЗаписатьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицу(Команда)
	Отпуска.Очистить();
КонецПроцедуры

/////////////////////////////////////////////////
//СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
/////////////////////////////////////////////////

&НаСервере
Процедура ПолучениеДанныхИзЗагруженнойТаблицыЗначений(АдресВХранилищеЗначений)
	
	ТабЗнч = ПолучитьИзВременногоХранилища(АдресВХранилищеЗначений);
	Если ТипЗнч(ТабЗнч) = Тип("ТаблицаЗначений") Тогда
		
		Отпуска.Очистить();
		
		ТаблицаСотрудников = ПолучитьТаблицуСотрудников();
		
		сч = 0;
		Для Каждого СтрокаДанных Из ТабЗнч Цикл 
			Если Не ПустаяСтрока(СтрокаДанных.Сотрудник) Тогда 
				НоваяСтрока = Отпуска.Добавить();
				НоваяСтрока.Сотрудник = ОперделитьСотрудника(СтрокаДанных.Сотрудник, ТаблицаСотрудников);
			КонецЕсли;
			Попытка
				НоваяСтрока.КоличествоДней = Число(СтрокаДанных.КоличествоДней);
			Исключение
			КонецПопытки;
			Если сч <> 0 Тогда 
				Если ЗначениеЗаполнено(ТабЗнч[сч-1].Сотрудник) Тогда 
					НоваяСтрока.ЯнварьС 	= ПолучитьДату(СтрокаДанных.Январь);
					НоваяСтрока.ФевральС 	= ПолучитьДату(СтрокаДанных.Февраль);
					НоваяСтрока.МартС 		= ПолучитьДату(СтрокаДанных.Март);
					НоваяСтрока.АпрельС 	= ПолучитьДату(СтрокаДанных.Апрель);
					НоваяСтрока.МайС 		= ПолучитьДату(СтрокаДанных.Май);
					НоваяСтрока.ИюньС 		= ПолучитьДату(СтрокаДанных.Июнь);
					НоваяСтрока.ИюльС 		= ПолучитьДату(СтрокаДанных.Июль);
					НоваяСтрока.АвгустС 	= ПолучитьДату(СтрокаДанных.Август);
					НоваяСтрока.СентябрьС 	= ПолучитьДату(СтрокаДанных.Сентябрь);
					НоваяСтрока.ОктябрьС	= ПолучитьДату(СтрокаДанных.Октябрь);
					НоваяСтрока.НоябрьС 	= ПолучитьДату(СтрокаДанных.Ноябрь);
					НоваяСтрока.ДекабрьС 	= ПолучитьДату(СтрокаДанных.Декабрь);
				Иначе 
					НоваяСтрока.ЯнварьПо 	= ПолучитьДату(СтрокаДанных.Январь);
					НоваяСтрока.ФевральПо 	= ПолучитьДату(СтрокаДанных.Февраль);
					НоваяСтрока.МартПо 		= ПолучитьДату(СтрокаДанных.Март);
					НоваяСтрока.АпрельПо 	= ПолучитьДату(СтрокаДанных.Апрель);
					НоваяСтрока.МайПо 		= ПолучитьДату(СтрокаДанных.Май);
					НоваяСтрока.ИюньПо 		= ПолучитьДату(СтрокаДанных.Июнь);
					НоваяСтрока.ИюльПо 		= ПолучитьДату(СтрокаДанных.Июль);
					НоваяСтрока.АвгустПо 	= ПолучитьДату(СтрокаДанных.Август);
					НоваяСтрока.СентябрьПо 	= ПолучитьДату(СтрокаДанных.Сентябрь);
					НоваяСтрока.ОктябрьПо	= ПолучитьДату(СтрокаДанных.Октябрь);
					НоваяСтрока.НоябрьПо 	= ПолучитьДату(СтрокаДанных.Ноябрь);
					НоваяСтрока.ДекабрьПо 	= ПолучитьДату(СтрокаДанных.Декабрь);
				КонецЕсли;
			КонецЕсли;
			сч = сч + 1;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОперделитьСотрудника(Сотрудник, ТаблицаСотрудников)
	
	МассивФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Сотрудник, " ",Истина);
	
	Если МассивФИО.Количество()>=3 Тогда 
		СтрокиСотрудников = ТаблицаСотрудников.НайтиСтроки(Новый Структура("Фамилия, Имя, Отчество", МассивФИО[0], МассивФИО[1], МассивФИО[2]));
		Если СтрокиСотрудников.Количество()=1 Тогда 
			Возврат СтрокиСотрудников[0].Сотрудник;
		КонецЕсли;
	ИначеЕсли МассивФИО.Количество()>=2 Тогда 
		СтрокиСотрудников = ТаблицаСотрудников.НайтиСтроки(Новый Структура("Фамилия, Имя", МассивФИО[0], МассивФИО[1]));
		Если СтрокиСотрудников.Количество()=1 Тогда 
			Возврат СтрокиСотрудников[0].Сотрудник;
		КонецЕсли;
	КонецЕсли;	
	Возврат Справочники.Сотрудники.ПустаяСсылка();
	
КонецФункции

&НаСервере
Функция ПолучитьДату(Дата)
	
	Если СтрНайти(Дата,".") <> 0 Тогда 
		Возврат Дата(Прав(Дата,4), Сред(Дата, 4,2), Лев(Дата, 2));
	КонецЕсли;
	
	Возврат Дата(1,1,1);
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	СписокМесяцев = Новый СписокЗначений;
	СписокМесяцев.Добавить("Январь");
	СписокМесяцев.Добавить("Февраль");
	СписокМесяцев.Добавить("Март");
	СписокМесяцев.Добавить("Апрель");
	СписокМесяцев.Добавить("Май");
	СписокМесяцев.Добавить("Июнь");
	СписокМесяцев.Добавить("Июль");
	СписокМесяцев.Добавить("Август");
	СписокМесяцев.Добавить("Сентябрь");
	СписокМесяцев.Добавить("Октябрь");
	СписокМесяцев.Добавить("Ноябрь");
	СписокМесяцев.Добавить("Декабрь");
	
	ВидОтпуска = Справочники.ВидыОтпусков.Основной;
	График = Объект.ГрафикОтпусков.ПолучитьОбъект();
	ТЧСотрудники = График.Сотрудники;
	Для Каждого СтрокаДанных Из Отпуска Цикл 
		Для Каждого Месяц Из СписокМесяцев Цикл 
			Если ЗначениеЗаполнено(СтрокаДанных[Месяц.Значение + "С"]) И ЗначениеЗаполнено(СтрокаДанных[Месяц.Значение + "По"]) Тогда 
				НоваяСтрока = ТЧСотрудники.Добавить();
				НоваяСтрока.Сотрудник 		= СтрокаДанных.Сотрудник;
				НоваяСтрока.ФизическоеЛицо 	= СтрокаДанных.Сотрудник.ФизическоеЛицо;
				НоваяСтрока.ВидОтпуска 		= ВидОтпуска;
				НоваяСтрока.ДатаНачала		= СтрокаДанных[Месяц.Значение + "С"];
				НоваяСтрока.ДатаОкончания	= СтрокаДанных[Месяц.Значение + "По"];
				НоваяСтрока.КоличествоДней	= (НоваяСтрока.ДатаОкончания - НоваяСтрока.ДатаНачала)/(3600*24)+1;
			КонецЕсли;
		КонецЦикла; 		
	КонецЦикла;
	Попытка
		График.Записать(РежимЗаписиДокумента.Запись);
		Сообщить("Документ " + График.Ссылка + " записан");
	Исключение
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
КонецПроцедуры
