&НаКлиенте
Перем ВСообщение;
&НаКлиенте
Перем Лог;
&НаКлиенте
Перем Всплывающее;
&НаКлиенте
Перем КаталогИмпорта;


&НаКлиенте
Процедура Загрузить(Команда)
	Объект.Excel.Очистить();
	ВывестиСообщение(ВСообщение,"-------------------------");
	ВывестиСообщение(Лог+ВСообщение,"Начало загрузки премий");
	ВывестиСообщение(Лог+ВСообщение,"-------------------------");
	Отменить=Ложь;
	Если СокрЛП(Объект.ФайлЗагрузки)="" Тогда
		ВывестиСообщение(ВСообщение,"Файл для импорта не выбран.");
		Отменить=Истина;
	КонецЕсли;
	ФС=Новый Файл(Объект.ФайлЗагрузки);
	Если НЕ ФС.Существует() Тогда
		ВывестиСообщение(Лог+ВСообщение,"Файл для импорта не существует.");
		Отменить=Истина;
	КонецЕсли;
	Если Объект.Организация.Пустая() Тогда
		ВывестиСообщение(Лог+ВСообщение,"Организация не выбрана.");
		Отменить=Истина;
	КонецЕсли;
	Если Объект.Начисление.Пустая() Тогда
		ВывестиСообщение(Лог+ВСообщение,"Основное начисление не выбрано.");
		Отменить=Истина;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.ДатаНачисления) Тогда
		ВывестиСообщение(Лог+ВСообщение,"Дата начисления не выбрана.");
		Отменить=Истина;
	КонецЕсли;
	
	Если Отменить Тогда
		ВывестиСообщение(?(СокрЛП(Объект.ФайлЗагрузки)="",0,Лог)+ВСообщение+Всплывающее,"Импорт отменен.");
		Возврат;
	КонецЕсли;
	
	ПрочитатьТабличныйДокументИзExcel(Объект.ФайлЗагрузки, 1);
	
	МассивДокументов = Новый Массив;
	Загрузить_Сервер(МассивДокументов);
	Для Каждого Документ Из МассивДокументов Цикл 
		ФормаДокумента = ПолучитьФорму("Документ.РазовоеНачисление.ФормаОбъекта", новый Структура("Ключ",Документ));
		ФормаДокумента.ПерезаполнитьДанныеФормыНаСервере(ПолучитьМассивСотрудников(Документ),Ложь);
		ФормаДокумента.Записать();
	КонецЦикла;
	
	ВывестиСообщение(Лог+ВСообщение,"Импорт завершен в "+ТекущаяДата());
	ВывестиСообщение(Всплывающее,"Импорт завершен.");

КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСотрудников(Документ)
	Возврат Документ.Начисления.ВыгрузитьКолонку("Сотрудник");
КонецФункции

&НаКлиенте
Процедура ВывестиСообщение (СпособВывода,Сообщение)
	Выводить=СпособВывода;
	Если Выводить>=8 Тогда
		Выводить=Выводить-8;
	КонецЕсли;
	Если Выводить>=4 Тогда
		//ВСообщение
		Выводить=Выводить-4;
		Сообщить(Сообщение);
	КонецЕсли;
	Если Выводить>=2 Тогда
		//Статус
		Выводить=Выводить-2;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = Строка(Сообщение);
		Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
		Сообщение.Сообщить();
	КонецЕсли;
	Если Выводить>=1 Тогда
		//Всплывающее
		Выводить=Выводить-1;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = Строка(Сообщение);
		Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Загрузить_Сервер(МассивДокументов);
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("ДатаНачала");
	ТаблицаДанных.Колонки.Добавить("ДатаОкончания");
	ТаблицаДанных.Колонки.Добавить("Сотрудник");
	ТаблицаДанных.Колонки.Добавить("Подразделение");
	ТаблицаДанных.Колонки.Добавить("Результат");
		
	//обработка файла
	//Загружаем = ПрочитатьТабличныйДокументИзExcel(Объект.ФайлЗагрузки, 1);
	Для Каждого Стр Из Объект.Excel Цикл
		
		ФИО=Стр.ФИО;
		ТабНомер=Стр.ТабНомер;
		Попытка
			Сумма=Число(Стр.Сумма);
		Исключение
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Неверный формат суммы в строке "+Стр.НомерСтроки+": "+Стр.Сумма+". Импорт отменен.";
			Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
			Сообщение.Сообщить();
			Возврат;
		КонецПопытки;
		
		Сотр=Справочники.Сотрудники.НайтиПоКоду(ТабНомер);
		Если Сотр.Пустая() Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст =  "Сотрудник с табельным номером "+ТабНомер+" не найден. Импорт отменен.";
			Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
			Сообщение.Сообщить();
			Возврат;
		ИначеЕсли СокрЛП(ФИО)<>СокрЛП(Сотр.Наименование) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "ФИО сотрудника в файле в строке "+Стр.НомерСтроки+": "+ФИО+"."+Символы.ВК+Символы.ПС+
			"ФИО сотрудника в базе: "+Сотр.Наименование+";"+Символы.ВК+Символы.ПС+
			"Несовпадение ФИО. Импорт отменен";
			Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;			
		НоваяСтрока = ТаблицаДанных.Добавить();
		НоваяСтрока.Сотрудник 	= Сотр;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник,
		               |	ТекущиеКадровыеДанныеСотрудников.ТекущееПодразделение
		               |ИЗ
		               |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		               |ГДЕ
		               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник = &Сотрудник
		               |	И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &Организация";
		
		Запрос.УстановитьПараметр("Сотрудник", Сотр);
		Запрос.УстановитьПараметр("Организация",Объект.Организация );
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока.Подразделение=Выборка.ТекущееПодразделение;	
			
		КонецЦикла;

		НоваяСтрока.Результат	= Сумма;
		НоваяСтрока.ДатаНачала   = ИзвлечьДату(Стр.ДатаНачала);
		НоваяСтрока.ДатаОкончания   = ИзвлечьДату(Стр.ДатаОкончания);
		
	КонецЦикла;
	
	ТаблицаДат = Новый ТаблицаЗначений;
	ТаблицаДат.Колонки.Добавить("ДатаНачала");
	ТаблицаДат.Колонки.Добавить("ДатаОкончания");
	ТаблицаДат.Колонки.Добавить("Подразделение");
	
	Для Каждого СтрокаДанных из ТаблицаДанных Цикл 
		НоваяСтрока = ТаблицаДат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
	КонецЦикла;
	
	ТаблицаДат.Свернуть("ДатаНачала, ДатаОкончания");
	
	Для Каждого Даты из ТаблицаДат Цикл 
		
		Отбор = Новый Структура("ДатаНачала, ДатаОкончания", Даты.ДатаНачала, Даты.ДатаОкончания);
		ТаблицаСОтбором = ТаблицаДанных.Скопировать(Отбор);
		
		ДокументСоздан = Ложь;
		
		Для Каждого СтрокаДанных Из ТаблицаСОтбором Цикл 
			
			Если Не ДокументСоздан Тогда 
				
				ДокНЗ=Документы.РазовоеНачисление.СоздатьДокумент();
				ДокНЗ.МесяцНачисления				= НачалоМесяца(Объект.ДатаНачисления);
				ДокНЗ.Дата 							= Объект.ДатаНачисления;
				ДокНЗ.Организация					= Объект.Организация;
				ДокНЗ.Ответственный					= ПараметрыСеанса.ТекущийПользователь;
				ДокНЗ.Начисление		 			= Объект.Начисление;
				ДокНЗ.Подразделение					= Справочники.ПодразделенияОрганизаций.НайтиПоКоду("Штат");;
				ДокНЗ.ДатаНачала				 	= НачалоМесяца(Объект.ДатаНачисления);
				ДокНЗ.ДатаОкончания 				= КонецМесяца(Объект.ДатаНачисления);
				ДокНЗ.ПланируемаяДатаВыплаты		= ПланируемаяДатаВыплаты;
				ДокНЗ.ПорядокВыплаты				= ХарактерВыплаты;
				ДокНЗ.Начислено						= ТаблицаСОтбором.Итог("Результат");				
				ДокументСоздан = Истина;
				
			КонецЕсли;
						
			СтрокаНачислений = ДокНЗ.Начисления.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНачислений, СтрокаДанных);
			СтрокаНачислений.ПериодРегистрацииВремени = СтрокаНачислений.ДатаНачала;
			СтрокаНачислений.ПериодДействия	= СтрокаНачислений.ДатаНачала;
			
		КонецЦикла;
		
		Если ДокументСоздан Тогда 
			ДокНЗ.Записать(РежимЗаписиДокумента.Запись);
			МассивДокументов.Добавить(ДокНЗ.Ссылка);
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Создан документ "+Строка(ДокНЗ);
			Сообщение.УстановитьДанные(ЭтотОбъект.ЭтаФорма);
			Сообщение.Сообщить();
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьТабличныйДокументИзExcel(ИмяФайла, НомерЛистаExcel) 
	
	Сообщить("Читается файл "+ИмяФайла+"...");
	
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат;
	КонецЕсли;                               
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		//Состояние("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel.Sheets(НомерЛистаExcel);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат;
		
	КонецПопытки;
	
	//ТабЗнач=Новый ТаблицаЗначений;
	
	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	ColumnCount = ActiveCell.Column;
	КоличествоКолонок = 0;
	Для Column = 1 По ColumnCount Цикл
		ИмяКолонки=СокрЛП(ExcelЛист.Cells(1,Column).Text);
		ИмяКолонки=СтрЗаменить(ИмяКолонки," ","");
		Если ИмяКолонки="" Тогда
			Прервать
		Иначе
			КоличествоКолонок = КоличествоКолонок + 1;
		КонецЕсли;
	КонецЦикла;
	Для Row = 2 По RowCount Цикл
		ТабСтр=Объект.Excel.Добавить();
		ВсеПустые=Истина;
		Для Column = 1 По КоличествоКолонок Цикл
			Значение=СокрЛП(ExcelЛист.Cells(Row,Column).Text);
			Если Column=1 И Лев(Значение,1)="(" И Найти(ВРЕГ(ИмяФайла),"EMPLOYEEMOVE")>0 Тогда
				Прервать
			КонецЕсли;
			ИмяКолонки=СокрЛП(ExcelЛист.Cells(1,Column).Text);
			ИмяКолонки=СтрЗаменить(ИмяКолонки," ","");
			ТабСтр[ИмяКолонки]=?(Значение="NULL",Неопределено,Значение);
			Если ТабСтр[ИмяКолонки]<>"" И ТабСтр[ИмяКолонки]<>Неопределено Тогда
				ВсеПустые=Ложь
			КонецЕсли;
		КонецЦикла;
		Если ВсеПустые Тогда
			Объект.Excel.Удалить(Объект.Excel.Количество()-1);
			Прервать
		КонецЕсли;
	КонецЦикла;
	
	Excel.WorkBooks.Close();
	Excel = 0;
	
КонецПроцедуры 

&НаСервере
Функция ИзвлечьДату (Исходное)
	Возврат Дата(Число(Сред(Исходное,7,4)),Число(Сред(Исходное,4,2)),Число(Сред(Исходное,1,2)));
КонецФункции

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайла.Заголовок = "Выберите файл с информацией о продавцах";
	ВыборФайла.ПроверятьСуществованиеФайла = Истина;
	ВыборФайла.Каталог = КаталогИмпорта;
	ВыборФайла.Фильтр = "Файлы XLS (*.xls,*.xlsx)|*.xls?";
	
	Если Не ВыборФайла.Выбрать() Тогда
		Возврат;
	Иначе
		Объект.ФайлЗагрузки = ВыборФайла.ПолноеИмяФайла
	КонецЕсли;
	
	КаталогИмпорта = ВыборФайла.Каталог;
	//ИмяРеестра = РаботаСФайлами.ПолучитьИмяФайлаИзПолногоПути(ВыборФайла.ПолноеИмяФайла);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	Объект.ДатаНачисления = ТекущаяДата();
	ПланируемаяДатаВыплаты = Объект.ДатаНачисления;
	ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата;
	Объект.Начисление = ПланыВидовРасчета.Начисления.НайтиПоКоду("ДКПВР");
КонецПроцедуры

ВСообщение=4;
Лог=8;
Всплывающее=1;
КаталогИмпорта="";