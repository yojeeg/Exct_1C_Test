
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НомерСтраницы = 1;
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайла.Заголовок = "Выберите файл с информацией";
	ВыборФайла.ПроверятьСуществованиеФайла = Истина;
	//ВыборФайла.Каталог = КаталогИмпорта;
	ВыборФайла.Фильтр = "Файлы XLS (*.xls,*.xlsx)|*.xls?";
	
	Если Не ВыборФайла.Выбрать() Тогда
		Возврат;
	Иначе
		Объект.ФайлЗагрузки = ВыборФайла.ПолноеИмяФайла
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	ЗагрузитьИзФайлаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере()
	Объект.СписокФизЛиц.Очистить();
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(Объект.ФайлЗагрузки);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат;
	КонецЕсли;                               
	
	Попытка
		Excel1 = Новый COMОбъект("Excel.Application");
		Excel1.WorkBooks.Open(Объект.ФайлЗагрузки);
		//Состояние("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel1.Sheets(НомерСтраницы);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат;
		
	КонецПопытки;
	
	ActiveCell = Excel1.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	Для Row = 1 По RowCount Цикл
		Значение=СокрЛП(ExcelЛист.Cells(Row,1).Text);
		Если Не ЗначениеЗаполнено(Значение) Тогда 
			Прервать;
		КонецЕсли;	
		ФЛ = Справочники.ФизическиеЛица.НайтиПоНаименованию(СокрЛП(Значение));
		Если ФЛ.Пустая() Тогда 
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Объект.СписокФизЛиц.Добавить();		
		НоваяСтрока.ФизическоеЛицо = ФЛ;
	КонецЦикла;
	
	Excel1.WorkBooks.Close();
	// Закрытие соединения
	Excel1.Application.Quit();
	
	Excel1 = 0;

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтчет(Команда)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПоказатьОтчетНаСервере(ТабличныйДокумент);
	ТабличныйДокумент.Показать();
КонецПроцедуры

&НаСервере
Процедура ПоказатьОтчетНаСервере(ТабличныйДокумент)       	
	СформироватьОтчет(ТабличныйДокумент);
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет(ТабличныйДокумент)
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектОбработка.ПолучитьМакет("Макет");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	СтрокаМакета = Макет.ПолучитьОбласть("Строка");
	ТабличныйДокумент.Вывести(Шапка);
	
	ЗапросПоКодам = Новый Запрос();
	ЗапросПоКодам.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	АдресныеОбъекты.КодСубъектаРФ КАК КодРегиона,
	                      |	АдресныеОбъекты.ПочтовыйИндекс КАК Индекс
	                      |ИЗ
	                      |	РегистрСведений.АдресныеОбъекты КАК АдресныеОбъекты";
	ТаблицаКодов = ЗапросПоКодам.Выполнить().Выгрузить();
	
	ЗапросПоФизЛицам = Новый Запрос;
	ЗапросПоФизЛицам.Текст = "ВЫБРАТЬ
	                         |	ФизическиеЛица.Ссылка КАК Ссылка,
	                         |	ФизическиеЛица.ИНН КАК ИНН,
	                         |	ПОДСТРОКА(ФизическиеЛица.ИНН, 1, 4) КАК КодИФНС,
	                         |	ФИОФизическихЛицСрезПоследних.Фамилия КАК Фамилия,
	                         |	ФИОФизическихЛицСрезПоследних.Имя КАК Имя,
	                         |	ФИОФизическихЛицСрезПоследних.Отчество КАК Отчество,
	                         |	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	                         |	ФизическиеЛица.МестоРождения КАК МестоРождения,
	                         |	ДокументыФизическихЛицСрезПоследних.ВидДокумента.КодМВД КАК КодВидаДокумента,
	                         |	ДокументыФизическихЛицСрезПоследних.Серия + ДокументыФизическихЛицСрезПоследних.Номер КАК СерияНомер,
	                         |	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	                         |	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	                         |	ВложенныйЗапросАдрес.ЗначенияПолей КАК Адрес,
	                         |	ВложенныйЗапросТелефон.Представление КАК КонтактныйТелефон
	                         |ИЗ
	                         |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	                         |		ПО ФизическиеЛица.Ссылка = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	                         |		ПО ФизическиеЛица.Ссылка = ДокументыФизическихЛицСрезПоследних.Физлицо
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                         |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Представление КАК Представление,
	                         |			ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Страна КАК Страна,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Регион КАК Регион,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Город КАК Город,
	                         |			ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	                         |		ИЗ
	                         |			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	                         |		ГДЕ
	                         |			ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица)) КАК ВложенныйЗапросАдрес
	                         |		ПО ФизическиеЛица.Ссылка = ВложенныйЗапросАдрес.Ссылка
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                         |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Представление КАК Представление,
	                         |			ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Страна КАК Страна,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Регион КАК Регион,
	                         |			ФизическиеЛицаКонтактнаяИнформация.Город КАК Город,
	                         |			ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	                         |		ИЗ
	                         |			Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	                         |		ГДЕ
	                         |			ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица)) КАК ВложенныйЗапросТелефон
	                         |		ПО ФизическиеЛица.Ссылка = ВложенныйЗапросТелефон.Ссылка
	                         |ГДЕ
	                         |	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)";
	ЗапросПоФизЛицам.УстановитьПараметр("МассивФизическихЛиц",Объект.СписокФизЛиц.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"));
	ТаблицаДанных = ЗапросПоФизЛицам.Выполнить().Выгрузить();
	ТаблицаДанных.Колонки.Добавить("Индекс");
	ТаблицаДанных.Колонки.Добавить("КодРегиона");
	ТаблицаДанных.Колонки.Добавить("Регион");
	ТаблицаДанных.Колонки.Добавить("Район");
	ТаблицаДанных.Колонки.Добавить("Город");
	ТаблицаДанных.Колонки.Добавить("НаселенныйПункт");
	ТаблицаДанных.Колонки.Добавить("Улица");
	ТаблицаДанных.Колонки.Добавить("Дом");
	ТаблицаДанных.Колонки.Добавить("Корпус");
	ТаблицаДанных.Колонки.Добавить("Квартира");
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл 
		ИнформацияПроживания 	= ВыполнитьРазбор(СтрокаДанных.Адрес);
		ЗаполнитьЗначенияСвойств(СтрокаДанных, ИнформацияПроживания);
		СтрокаДанных.Регион = ИнформацияПроживания.СубъектРФ;
		СтруктураМестаРождения = ПерсонифицированныйУчетКлиентСервер.РазложитьМестоРождения(СтрокаДанных.МестоРождения);
		СтрокаДанных.МестоРождения = СтруктураМестаРождения.НаселенныйПункт;
		НайденныеСтроки = ТаблицаКодов.НайтиСтроки(Новый Структура("Индекс", Число(ИнформацияПроживания.Индекс)));
		Если НайденныеСтроки.Количество()>0 Тогда 
			ЗаполнитьЗначенияСвойств(СтрокаДанных, НайденныеСтроки[0]);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл 
		ЗаполнитьЗначенияСвойств(СтрокаМакета.Параметры, СтрокаДанных);
		ТабличныйДокумент.Вывести(СтрокаМакета);
	КонецЦикла;
	
КонецПроцедуры

Функция ВыполнитьРазбор(Адрес)
	Результат = Новый Структура;
	Результат.Вставить("Город");
	Результат.Вставить("Страна");
	Результат.Вставить("Улица");
	Результат.Вставить("Индекс");
	Результат.Вставить("СубъектРФ");
	Результат.Вставить("Дом");
	Результат.Вставить("Квартира");
	Результат.Вставить("Корпус");
	Результат.Вставить("Район");
	Результат.Вставить("НаселенныйПункт");
	
	СтрокаРазбора = СтрЗаменить(Адрес, "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://www.v8.1c.ru/ssl/contactinfo""", "");   
	СтрокаРазбора = СтрЗаменить(СтрокаРазбора, Символы.ПС, " ");
	СтрокаРазбора = СтрЗаменить(СтрокаРазбора, "xsi:type=""Адрес""", "");
	СтрокаРазбора = СтрЗаменить(СтрокаРазбора, ">", ">|");
	
	МасстивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРазбора,"|",Истина);
	
	Представление = "<КонтактнаяИнформация  Представление=";
	ДлиннаПредставления = СтрДлина(Представление);
	
	РезультатПеребора = Новый Массив;
	Для Каждого ЗначениеМассива Из МасстивПодстрок Цикл
		ЗначениеМассива = ОбработатьТеги(ЗначениеМассива);
		Если Не ЭтоМусорнаяСтрока(ЗначениеМассива) И Лев(ЗначениеМассива, ДлиннаПредставления) <> Представление Тогда
			Если ЭтоУлица(ЗначениеМассива) Тогда
				Результат.Улица = СокрЛП(СтрЗаменить(ЗначениеМассива,"</Улица>",""));
			ИначеЕсли ЭтоСтрана(ЗначениеМассива) Тогда 
				Результат.Страна = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива, "<Состав  Страна=""", ""),""">",""));
			ИначеЕсли ЭтоСубъектРФ(ЗначениеМассива) Тогда
				Результат.СубъектРФ = СокрЛП(СтрЗаменить(ЗначениеМассива,"</СубъектРФ>",""));
			ИначеЕсли ЭтоРайон(ЗначениеМассива) Тогда
				Результат.Район = СокрЛП(СтрЗаменить(ЗначениеМассива,"</Район>",""));
			ИначеЕсли ЭтоИндекс(ЗначениеМассива) Тогда
				Результат.Индекс = СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"ТипАдрЭл=""10100000"" Значение=""",""),"<ДопАдрЭл",""),"""/>",""));
			ИначеЕсли ЭтоГород(ЗначениеМассива) Тогда
				Результат.Город = СокрЛП(СтрЗаменить(ЗначениеМассива,"</Город>",""));
			ИначеЕсли ЭтоНаселенныйПункт(ЗначениеМассива) Тогда
				Результат.НаселенныйПункт = СокрЛП(СтрЗаменить(ЗначениеМассива,"</НаселПункт>",""));
			ИначеЕсли ЭтоДом(ЗначениеМассива) Тогда
				Результат.Дом = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1010"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоКвартира(ЗначениеМассива) Тогда
				Результат.Квартира = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""2010"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоКорпус(ЗначениеМассива) Тогда
				Результат.Корпус = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1050"" Значение=""",""),"""/>",""));				
			ИначеЕсли ЭтоСтроение(ЗначениеМассива) Тогда
				Результат.Корпус = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1060"" Значение=""",""),"""/>",""));				
			ИначеЕсли ЭтоВладение(ЗначениеМассива) Тогда
				Результат.Дом = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1020"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоДомовладение(ЗначениеМассива) Тогда
				Результат.Дом = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1030"" Значение=""",""),"""/>",""));								
			ИначеЕсли ЭтоПомещение(ЗначениеМассива) Тогда
				Результат.Квартира = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""2020"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоОфис(ЗначениеМассива) Тогда
				Результат.Квартира = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""2030"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоБокс(ЗначениеМассива) Тогда
				Результат.Квартира = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""2040"" Значение=""",""),"""/>",""));
			ИначеЕсли ЭтоКомната(ЗначениеМассива) Тогда
				Результат.Квартира = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""2050"" Значение=""",""),"""/>",""));				
			ИначеЕсли ЭтоУчасток(ЗначениеМассива) Тогда
				Результат.Корпус = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1040"" Значение=""",""),"""/>",""));				
			ИначеЕсли ЭтоСооружение(ЗначениеМассива) Тогда
				Результат.Корпус = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1070"" Значение=""",""),"""/>",""));				
			ИначеЕсли ЭтоЛитера(ЗначениеМассива) Тогда
				Результат.Корпус = СокрЛП(СтрЗаменить(СтрЗаменить(ЗначениеМассива,"<Номер Тип=""1080"" Значение=""",""),"""/>",""));				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;  
	
	Возврат Результат;
	
КонецФункции

Функция ОбработатьТеги(СтрокаДляОбработки)
	
	Если Найти(СтрокаДляОбработки,"&")=0 Тогда 
		Возврат СтрокаДляОбработки;
	КонецЕсли;
	
	СоответствиеТегов = Новый Соответствие;
	СоответствиеТегов.Вставить("&quot;","""");
	СоответствиеТегов.Вставить("&amp;","&");
	СоответствиеТегов.Вставить("&lt;","<");
	СоответствиеТегов.Вставить("&gt;",">");
	СоответствиеТегов.Вставить("&nbsp;",""+Символы.НПП+"");
	СоответствиеТегов.Вставить("&brvbar;","¦");
	СоответствиеТегов.Вставить("&para;","¶");
	СоответствиеТегов.Вставить("&laquo;","«");
	СоответствиеТегов.Вставить("raquo;","»");
	
	Для Каждого Тег ИЗ СоответствиеТегов Цикл 
		СтрокаДляОбработки = СтрЗаменить(СтрокаДляОбработки,Тег.Ключ,Тег.Значение);
	КонецЦикла;
	
	Возврат СтрокаДляОбработки;
	
КонецФункции

Функция ОпределитьПоследнийПробел(Строка)
	КоличествоСимволов = СтрДлина(Строка);
	НомерПробела = 0;
	Для счетчик=1 По КоличествоСимволов Цикл 
		Символ = Прав(Лев(Строка,счетчик),1);;
		Если Символ=" " ИЛИ Символ=Символы.НПП Тогда 
			НомерПробела = счетчик;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НомерПробела;
	
КонецФункции

Функция ЭтоМусорнаяСтрока(Строка)
	
	МусорныеСтроки = Новый Массив;
	МусорныеСтроки.Добавить("</КонтактнаяИнформация>");
	МусорныеСтроки.Добавить("</Состав>");
	МусорныеСтроки.Добавить("<Комментарий/>");
	МусорныеСтроки.Добавить("<СубъектРФ>");
	МусорныеСтроки.Добавить("<Улица>");        
	МусорныеСтроки.Добавить("<Состав xsi:type=""АдресРФ"">");
	
	МусорныеСтроки.Добавить("<Округ>");
	МусорныеСтроки.Добавить("<Округ/>");      
	МусорныеСтроки.Добавить("<ВнутригРайон>");
	МусорныеСтроки.Добавить("<ВнутригРайон/>");     
	МусорныеСтроки.Добавить("<ДопАдрЭл>");
	МусорныеСтроки.Добавить("</ДопАдрЭл>");
	МусорныеСтроки.Добавить("<НаселПункт/>");
	МусорныеСтроки.Добавить("<НаселПункт>");           
	МусорныеСтроки.Добавить("<Район>");
	МусорныеСтроки.Добавить("<Район/>");      
	МусорныеСтроки.Добавить("<Город>");
	МусорныеСтроки.Добавить("<Город/>");      
	МусорныеСтроки.Добавить("<СвРайМО>");
	МусорныеСтроки.Добавить("</СвРайМО>");
	
	Если МусорныеСтроки.Найти(СокрЛП(Строка)) = Неопределено Тогда
		Возврат Ложь; 
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции //ЭтоМусорнаяСтрока()

Функция ЭтоУлица(Строка)
	Возврат ?(Найти(Строка, "</Улица>") > 0, Истина, Ложь);
КонецФункции // ЭтоУлица()

Функция ЭтоНаселенныйПункт(Строка)
	Возврат ?(Найти(Строка, "</НаселПункт>") > 0, Истина, Ложь);
КонецФункции // ЭтоУлица()

Функция ЭтоСтрана(Строка)
	Возврат ?(Найти(Строка, " Страна=") > 0, Истина, Ложь);
КонецФункции // ЭтоСтрана()

Функция ЭтоСубъектРФ(Строка)
	Возврат ?(Найти(Строка, "</СубъектРФ>") > 0, Истина, Ложь);
КонецФункции // ЭтоСубъектРФ()

Функция ЭтоРайон(Строка)
	Возврат ?(Найти(Строка, "</Район>") > 0, Истина, Ложь);
КонецФункции // ЭтоРайон()

Функция ЭтоИндекс(Строка)
	Возврат ?(Найти(Строка, "ТипАдрЭл=""10100000"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоИндекс()

Функция ЭтоГород(Строка)
	Возврат ?(Найти(Строка, "</Город>") > 0, Истина, Ложь);      
КонецФункции // ЭтоГород()

Функция ЭтоДом(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1010"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоДом()

Функция ЭтоВладение(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1020"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоВладение()

Функция ЭтоДомовладение(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1030"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоДомовладение()

Функция ЭтоКвартира(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""2010"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоКвартира()

Функция ЭтоПомещение(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""2020"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоПомещение()

Функция ЭтоОфис(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""2030"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоОфис()

Функция ЭтоБокс(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""2040"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоБокс()

Функция ЭтоКомната(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""2050"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоКомната()

Функция ЭтоУчасток(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1040"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоУчасток()

Функция ЭтоКорпус(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1050"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоКорпус()

Функция ЭтоСтроение(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1060"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоСтроение()

Функция ЭтоСооружение(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1070"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоСооружение()

Функция ЭтоЛитера(Строка)
	Возврат ?(Найти(Строка, "Номер Тип=""1080"" Значение=""") > 0, Истина, Ложь);
КонецФункции // ЭтоЛитера()

