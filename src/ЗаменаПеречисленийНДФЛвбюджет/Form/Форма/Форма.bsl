
&НаСервере
Процедура РаспровестиПеречисленияНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеречислениеНДФЛВБюджет.Ссылка
	               |ИЗ
	               |	Документ.ПеречислениеНДФЛВБюджет КАК ПеречислениеНДФЛВБюджет
	               |ГДЕ
	               |	ПеречислениеНДФЛВБюджет.Проведен = ИСТИНА";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ДокСсылка = Выборка.Ссылка;
		ДокОбъект = ДокСсылка.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РаспровестиПеречисления(Команда)
	РаспровестиПеречисленияНаСервере();
	Сообщить("Распровел");
КонецПроцедуры

&НаСервере
Процедура СоздатьПеречисленияНаСервере()
	
	ДатаНачала 		= Объект.ДатаНачала;
	ДатаОкончания 	= Объект.ДатаОкончания;
	
	ДатаВыплаты = ДатаНачала;
	
	ТаблицаЗагрузки = Новый ТаблицаЗначений;
	ТаблицаЗагрузки.Колонки.Добавить("ФизическоеЛицо");
	ТаблицаЗагрузки.Колонки.Добавить("Сумма");
	ТаблицаЗагрузки.Колонки.Добавить("РегистрацияВНалоговомОргане");
	ТаблицаЗагрузки.Колонки.Добавить("ОКТМО_КПП");
	ТаблицаЗагрузки.Колонки.Добавить("ДатаПлатежа");
	ТаблицаЗагрузки.Колонки.Добавить("Подразделение");
	
	Пока ДатаВыплаты<= ДатаОкончания Цикл 
		
		ТаблицаЗагрузки.Очистить();		
		Таблица = ПолучитьИтоговуюТаблицу(ДатаВыплаты);
		
		Если Таблица.Количество() > 0 Тогда 
			Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
			РегистрацияОрганизации = Организация.РегистрацияВНалоговомОргане;
			Для Каждого Выборка Из Таблица Цикл 
				НоваяСтрока = ТаблицаЗагрузки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.ДатаПлатежа = ДатаВыплаты;
				Если ЗначениеЗаполнено(Выборка.РегистрацияВНалоговомОргане) Тогда
					Если ЗначениеЗаполнено(Выборка.ОКТМО) И ЗначениеЗаполнено(Выборка.КПП) Тогда
						НоваяСтрока.РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;	
						НоваяСтрока.ОКТМО_КПП = Выборка.ОКТМО + "/" + Выборка.КПП;	
					Иначе
						НоваяСтрока.РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;
						НоваяСтрока.ОКТМО_КПП = Выборка.РегистрацияВНалоговомОргане.КодПоОКТМО+ "/" + Выборка.РегистрацияВНалоговомОргане.КПП;	
					КонецЕсли;
				Иначе
					НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияОрганизации;
					НоваяСтрока.ОКТМО_КПП = "45382000   /997950001";	
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли; 
		
		Если ТаблицаЗагрузки.Количество() >0 Тогда 
			СформироватьДокументыНаСервере(ТаблицаЗагрузки,ДатаВыплаты);
		КонецЕсли; 
		
		ДатаВыплаты = КонецДня(ДатаВыплаты) + 1;
	КонецЦикла;
	
	
КонецПроцедуры 

&НаСервере
Процедура СоздатьПеречисленияОтпускаБольничныеНаСервере()
	
	ДатаНачала 		= Объект.ДатаНачала;
	ДатаОкончания 	= Объект.ДатаОкончания;
	
	ТаблицаЗагрузки = Новый ТаблицаЗначений;
	ТаблицаЗагрузки.Колонки.Добавить("ФизическоеЛицо");
	ТаблицаЗагрузки.Колонки.Добавить("Сумма");
	ТаблицаЗагрузки.Колонки.Добавить("РегистрацияВНалоговомОргане");
	ТаблицаЗагрузки.Колонки.Добавить("ОКТМО_КПП");
	ТаблицаЗагрузки.Колонки.Добавить("ДатаПлатежа");
	ТаблицаЗагрузки.Колонки.Добавить("Подразделение");

	// По Отпускам/Больничным
	ДатаВыплаты = КонецМесяца(ДатаНачала);	
	Пока КонецМесяца(ДатаВыплаты) <= КонецМесяца(ДатаОкончания) Цикл 
		
		ТаблицаЗагрузки.Очистить();
		ПолучитьИтоговуюТаблицуПоОтпускамБольничным(ДатаВыплаты, ТаблицаЗагрузки);
		Если ТаблицаЗагрузки.Количество() > 0 Тогда 
			СформироватьДокументыНаСервереОтпускаБольничные(ТаблицаЗагрузки, ДатаВыплаты);
		КонецЕсли; 		
		
		ДатаВыплаты = КонецМесяца(ДатаВыплаты+1);
	КонецЦикла;	

КонецПроцедуры  

&НаСервере
Функция ПолучитьИтоговуюТаблицуПоОтпускамБольничным(ДатаВыплаты,ТаблицаЗагрузки)
		
	МассивСпособовВыплаты = Новый Массив;
	МассивСпособовВыплаты.Добавить(Справочники.СпособыВыплатыЗарплаты.НайтиПоНаименованию("Больничные листы"));
	МассивСпособовВыплаты.Добавить(Справочники.СпособыВыплатыЗарплаты.НайтиПоНаименованию("Отпуска"));
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтпускНДФЛ.ФизическоеЛицо,
	|	ОтпускНДФЛ.Подразделение,
	|	ОтпускНДФЛ.Подразделение.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ОтпускНДФЛ.Налог) КАК Сумма
	|ИЗ
	|	Документ.Отпуск.НДФЛ КАК ОтпускНДФЛ
	|ГДЕ
	|	ОтпускНДФЛ.Ссылка.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ОтпускНДФЛ.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускНДФЛ.Подразделение,
	|	ОтпускНДФЛ.ФизическоеЛицо,
	|	ОтпускНДФЛ.Подразделение.РегистрацияВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БольничныйЛистНДФЛ.ФизическоеЛицо,
	|	БольничныйЛистНДФЛ.Подразделение,
	|	БольничныйЛистНДФЛ.Подразделение.РегистрацияВНалоговомОргане,
	|	СУММА(БольничныйЛистНДФЛ.Налог)
	|ИЗ
	|	Документ.БольничныйЛист.НДФЛ КАК БольничныйЛистНДФЛ
	|ГДЕ
	|	БольничныйЛистНДФЛ.Ссылка.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И БольничныйЛистНДФЛ.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	БольничныйЛистНДФЛ.ФизическоеЛицо,
	|	БольничныйЛистНДФЛ.Подразделение,
	|	БольничныйЛистНДФЛ.Подразделение.РегистрацияВНалоговомОргане";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(ДатаВыплаты));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(ДатаВыплаты));
	Запрос.УстановитьПараметр("СпособВыплаты",МассивСпособовВыплаты);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		РегистрацияОрганизации = Организация.РегистрацияВНалоговомОргане;
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаЗагрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.ДатаПлатежа = ДатаВыплаты;
			Если ЗначениеЗаполнено(Выборка.Подразделение) Тогда
				Если ЗначениеЗаполнено(Выборка.Подразделение.РегистрацияВНалоговомОргане) Тогда
					НоваяСтрока.РегистрацияВНалоговомОргане = Выборка.Подразделение.РегистрацияВНалоговомОргане;	
					НоваяСтрока.ОКТМО_КПП = Выборка.Подразделение.РегистрацияВНалоговомОргане.КодПоОКТМО + "/" + Выборка.Подразделение.РегистрацияВНалоговомОргане.КПП;	
				Иначе
					НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияОрганизации;
					НоваяСтрока.ОКТМО_КПП = "45382000   /997950001";	
				КонецЕсли;
			Иначе
				НоваяСтрока.РегистрацияВНалоговомОргане = РегистрацияОрганизации;
				НоваяСтрока.ОКТМО_КПП = "45382000   /997950001";	
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;

КонецФункции

&НаСервере
Процедура СформироватьДокументыНаСервере(ТаблицаЗагрузки,ДатаВыплаты)
		
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	МассивРегистраций 	= ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаЗагрузки.ВыгрузитьКолонку("РегистрацияВНалоговомОргане"));
	
	Для Каждого Регистрация из МассивРегистраций Цикл 
		Отбор = Новый Структура("РегистрацияВНалоговомОргане", Регистрация);
		ТаблицаОтбор = ТаблицаЗагрузки.Скопировать(Отбор);
		Если ТаблицаОтбор.Количество() <> 0 Тогда 
			ДокПеречислениеНДФЛ = Документы.ППФ_ПеречислениеНДФЛВБюджет.СоздатьДокумент();
			ДокПеречислениеНДФЛ.ДатаПлатежа 				= НачалоДня(ДатаВыплаты);
			ДокПеречислениеНДФЛ.Дата 						= НачалоДня(ДатаВыплаты);
			ДокПеречислениеНДФЛ.Организация 				= Организация;
			ДокПеречислениеНДФЛ.МесяцНалоговогоПериода 		= НачалоДня(НачалоМесяца(ДатаВыплаты));
			ДокПеречислениеНДФЛ.РегистрацияВНалоговомОргане	= Регистрация;			
			ДокПеречислениеНДФЛ.ОКТМО_КПП					= Регистрация.КодПоОКТМО + "/" + Регистрация.КПП;
			ДокПеречислениеНДФЛ.Ответственный 				= ПараметрыСеанса.ТекущийПользователь;
			ДокПеречислениеНДФЛ.Сумма 						= ТаблицаОтбор.Итог("Сумма");
			ТЧФизическиеЛица = ДокПеречислениеНДФЛ.ФизическиеЛица;
			Для Каждого СтрокаДанных Из ТаблицаОтбор Цикл 
				НоваяЗапись = ТЧФизическиеЛица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаДанных);
			КонецЦикла;
			Попытка
				ДокПеречислениеНДФЛ.Записать(РежимЗаписиДокумента.Проведение);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Проведен документ - '") + Строка(ДокПеречислениеНДФЛ.Ссылка);
				Сообщение.Сообщить(); 
			Исключение
				ДокПеречислениеНДФЛ.Записать(РежимЗаписиДокумента.Запись);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Записан документ - '") + Строка(ДокПеречислениеНДФЛ.Ссылка);
				Сообщение.Сообщить(); 
			КонецПопытки;
		КонецЕсли;;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыНаСервереОтпускаБольничные(ТаблицаЗагрузки,ДатаВыплаты)
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	МассивРегистраций 	= ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаЗагрузки.ВыгрузитьКолонку("РегистрацияВНалоговомОргане"));
	
	Для Каждого Регистрация из МассивРегистраций Цикл 
		Отбор = Новый Структура("РегистрацияВНалоговомОргане", Регистрация);
		ТаблицаОтбор = ТаблицаЗагрузки.Скопировать(Отбор);
		Если ТаблицаОтбор.Количество() <> 0 Тогда 
			ДокПеречислениеНДФЛ = Документы.ППФ_ПеречислениеНДФЛВБюджет.СоздатьДокумент();
			ДокПеречислениеНДФЛ.ОтпускаБольничные			= Истина;
			ДокПеречислениеНДФЛ.ДатаПлатежа 				= НачалоДня(ДатаВыплаты);
			ДокПеречислениеНДФЛ.Дата 						= НачалоДня(ДатаВыплаты);
			ДокПеречислениеНДФЛ.Организация 				= Организация;
			ДокПеречислениеНДФЛ.МесяцНалоговогоПериода 		= НачалоДня(НачалоМесяца(ДатаВыплаты));
			ДокПеречислениеНДФЛ.РегистрацияВНалоговомОргане	= Регистрация;			
			ДокПеречислениеНДФЛ.ОКТМО_КПП					= Регистрация.КодПоОКТМО + "/" + Регистрация.КПП;
			ДокПеречислениеНДФЛ.Ответственный 				= ПараметрыСеанса.ТекущийПользователь;
			ДокПеречислениеНДФЛ.Сумма 						= ТаблицаОтбор.Итог("Сумма");
			ТЧФизическиеЛица = ДокПеречислениеНДФЛ.ФизическиеЛица;
			Для Каждого СтрокаДанных Из ТаблицаОтбор Цикл 
				НоваяЗапись = ТЧФизическиеЛица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаДанных);
			КонецЦикла;
			Попытка
				ДокПеречислениеНДФЛ.Записать(РежимЗаписиДокумента.Проведение);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Проведен документ - '") + Строка(ДокПеречислениеНДФЛ.Ссылка);
				Сообщение.Сообщить(); 
			Исключение
				ДокПеречислениеНДФЛ.Записать(РежимЗаписиДокумента.Запись);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = НСтр("ru = 'Записан документ - '") + Строка(ДокПеречислениеНДФЛ.Ссылка);
				Сообщение.Сообщить(); 
			КонецПопытки;
		КонецЕсли;;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьИтоговуюТаблицу(ДатаВыплаты)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.МесяцНалоговогоПериода КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛицаПериоды
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛицаПериоды.ФизическоеЛицо,
	|	ФизическиеЛицаПериоды.Период,
	|	ВЫБОР
	|		КОГДА ФизическиеЛицаПериоды.Период < &ДатаЗакона285ФЗ
	|				И СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СписокФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МАКСИМУМ(СтатусФизическихЛиц.Период) КАК ПериодСтатуса,
	|		СписокФизическихЛиц.Период КАК Период
	|	ИЗ
	|		ВТФизическиеЛицаПериоды КАК СписокФизическихЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛиц
	|			ПО СписокФизическихЛиц.ФизическоеЛицо = СтатусФизическихЛиц.ФизическоеЛицо
	|				И СписокФизическихЛиц.Период >= СтатусФизическихЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокФизическихЛиц.ФизическоеЛицо,
	|		СписокФизическихЛиц.Период) КАК ФизическиеЛицаПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусФизическихЛицКакНалогоплательщиковНДФЛ
	|		ПО ФизическиеЛицаПериоды.ФизическоеЛицо = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.ФизическоеЛицо
	|			И ФизическиеЛицаПериоды.ПериодСтатуса = СтатусФизическихЛицКакНалогоплательщиковНДФЛ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 2
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА 3
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|			ТОГДА 6
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА 7
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА 8
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ВидЗаписи,
	|	НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.Период, МЕСЯЦ) КАК Период,
	|	НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НачисленныйУдержанныйНДФЛ.ГоловнаяОрганизация,
	|	НачисленныйУдержанныйНДФЛ.Организация,
	|	НачисленныйУдержанныйНДФЛ.ФизическоеЛицо,
	|	НачисленныйУдержанныйНДФЛ.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА НачисленныйУдержанныйНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА НачисленныйУдержанныйНДФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА НачисленныйУдержанныйНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА НачисленныйУдержанныйНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"""""
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК Ставка,
	|	СУММА(ВЫБОР
	|			КОГДА НачисленныйУдержанныйНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|				ТОГДА -НачисленныйУдержанныйНДФЛ.Сумма
	|			ИНАЧЕ НачисленныйУдержанныйНДФЛ.Сумма
	|		КОНЕЦ) КАК СуммаНалога,
	|	НачисленныйУдержанныйНДФЛ.Регистратор КАК Документ,
	|	НачисленныйУдержанныйНДФЛ.Регистратор.ПланируемаяДатаВыплаты КАК ДатаВыплаты,
	|	НачисленныйУдержанныйНДФЛ.Подразделение
	|ПОМЕСТИТЬ ВТНачисленныйУдержанныйНДФЛ
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НачисленныйУдержанныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО НачисленныйУдержанныйНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И (НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = ФизическиеЛицаСтатусыНДФЛ.Период)
	|ГДЕ
	|	НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.Период, МЕСЯЦ),
	|	НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода,
	|	НачисленныйУдержанныйНДФЛ.ГоловнаяОрганизация,
	|	НачисленныйУдержанныйНДФЛ.Организация,
	|	НачисленныйУдержанныйНДФЛ.ФизическоеЛицо,
	|	НачисленныйУдержанныйНДФЛ.РегистрацияВНалоговомОргане,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	НачисленныйУдержанныйНДФЛ.КодДохода,
	|	НачисленныйУдержанныйНДФЛ.СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 2
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА 3
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|			ТОГДА 6
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА 7
	|		КОГДА НачисленныйУдержанныйНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА 8
	|		ИНАЧЕ 3
	|	КОНЕЦ,
	|	НачисленныйУдержанныйНДФЛ.Регистратор.ПланируемаяДатаВыплаты,
	|	НачисленныйУдержанныйНДФЛ.Регистратор,
	|	НачисленныйУдержанныйНДФЛ.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	2 КАК ВидЗаписи,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	НАЧАЛОПЕРИОДА(СведенияОДоходах.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СведенияОДоходах.ГоловнаяОрганизация,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА СведенияОДоходах.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"""""
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК Ставка,
	|	0 КАК СуммаНалога,
	|	СУММА(СведенияОДоходах.СуммаДохода) КАК Доход,
	|	СУММА(СведенияОДоходах.СуммаВычета) КАК Вычет,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2760)
	|					ИЛИ СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2761)
	|					ИЛИ СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2762)
	|				ТОГДА СведенияОДоходах.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДоходМатпомощь,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2760)
	|					ИЛИ СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2761)
	|					ИЛИ СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код2762)
	|				ТОГДА СведенияОДоходах.СуммаВычета
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВычетМатпомощь,
	|	0 КАК СтандартныйВычет,
	|	0 КАК ИмущественныйВычет,
	|	СведенияОДоходах.Регистратор КАК Документ,
	|	NULL КАК ДатаВыплаты,
	|	СведенияОДоходах.ПодразделениеСотрудника КАК Подразделение
	|ПОМЕСТИТЬ ВТПолныеСведенияНДФЛ
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО СведенияОДоходах.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И СведенияОДоходах.МесяцНалоговогоПериода = ФизическиеЛицаСтатусыНДФЛ.Период
	|ГДЕ
	|	СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СведенияОДоходах.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(СведенияОДоходах.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияОДоходах.ГоловнаяОрганизация,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.РегистрацияВНалоговомОргане,
	|	СведенияОДоходах.КодДохода,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	ВЫБОР
	|		КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				КОНЕЦ
	|		КОГДА СведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|					КОГДА СведенияОДоходах.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ФизическиеЛицаСтатусыНДФЛ.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	|			ТОГДА ВЫБОР
	|					КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
	|					КОГДА СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
	|					ИНАЧЕ """"""""
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ,
	|	СведенияОДоходах.Регистратор,
	|	СведенияОДоходах.ПодразделениеСотрудника
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	НАЧАЛОПЕРИОДА(СтандартныеВычеты.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(СтандартныеВычеты.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СтандартныеВычеты.ГоловнаяОрганизация,
	|	СтандартныеВычеты.Организация,
	|	СтандартныеВычеты.ФизическоеЛицо,
	|	СтандартныеВычеты.РегистрацияВНалоговомОргане,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(СтандартныеВычеты.Сумма),
	|	0,
	|	СтандартныеВычеты.Регистратор,
	|	NULL,
	|	СтандартныеВычеты.Подразделение
	|ИЗ
	|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК СтандартныеВычеты
	|ГДЕ
	|	СтандартныеВычеты.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СтандартныеВычеты.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(СтандартныеВычеты.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СтандартныеВычеты.ГоловнаяОрганизация,
	|	СтандартныеВычеты.Организация,
	|	СтандартныеВычеты.ФизическоеЛицо,
	|	СтандартныеВычеты.РегистрацияВНалоговомОргане,
	|	СтандартныеВычеты.Регистратор,
	|	СтандартныеВычеты.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	ИмущественныеВычеты.ГоловнаяОрганизация,
	|	ИмущественныеВычеты.Организация,
	|	ИмущественныеВычеты.ФизическоеЛицо,
	|	ИмущественныеВычеты.РегистрацияВНалоговомОргане,
	|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(ИмущественныеВычеты.Сумма),
	|	ИмущественныеВычеты.Регистратор,
	|	NULL,
	|	ИмущественныеВычеты.Подразделение
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ИмущественныеВычеты
	|ГДЕ
	|	ИмущественныеВычеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИмущественныеВычеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ),
	|	ИмущественныеВычеты.ГоловнаяОрганизация,
	|	ИмущественныеВычеты.Организация,
	|	ИмущественныеВычеты.ФизическоеЛицо,
	|	ИмущественныеВычеты.РегистрацияВНалоговомОргане,
	|	ИмущественныеВычеты.Регистратор,
	|	ИмущественныеВычеты.Подразделение,
	|	НАЧАЛОПЕРИОДА(ИмущественныеВычеты.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачисленныйУдержанныйНДФЛ.ВидЗаписи,
	|	НачисленныйУдержанныйНДФЛ.Период,
	|	НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	НачисленныйУдержанныйНДФЛ.ГоловнаяОрганизация,
	|	НачисленныйУдержанныйНДФЛ.Организация,
	|	НачисленныйУдержанныйНДФЛ.ФизическоеЛицо,
	|	НачисленныйУдержанныйНДФЛ.РегистрацияВНалоговомОргане,
	|	НачисленныйУдержанныйНДФЛ.Ставка,
	|	СУММА(НачисленныйУдержанныйНДФЛ.СуммаНалога),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	НачисленныйУдержанныйНДФЛ.Документ,
	|	НачисленныйУдержанныйНДФЛ.ДатаВыплаты,
	|	НачисленныйУдержанныйНДФЛ.Подразделение
	|ИЗ
	|	ВТНачисленныйУдержанныйНДФЛ КАК НачисленныйУдержанныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаСтатусыНДФЛ КАК ФизическиеЛицаСтатусыНДФЛ
	|		ПО НачисленныйУдержанныйНДФЛ.ФизическоеЛицо = ФизическиеЛицаСтатусыНДФЛ.ФизическоеЛицо
	|			И (НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) = ФизическиеЛицаСтатусыНДФЛ.Период)
	|ГДЕ
	|	НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленныйУдержанныйНДФЛ.Период,
	|	НАЧАЛОПЕРИОДА(НачисленныйУдержанныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	НачисленныйУдержанныйНДФЛ.ГоловнаяОрганизация,
	|	НачисленныйУдержанныйНДФЛ.Организация,
	|	НачисленныйУдержанныйНДФЛ.ФизическоеЛицо,
	|	НачисленныйУдержанныйНДФЛ.РегистрацияВНалоговомОргане,
	|	ФизическиеЛицаСтатусыНДФЛ.Статус,
	|	НачисленныйУдержанныйНДФЛ.Ставка,
	|	НачисленныйУдержанныйНДФЛ.ВидЗаписи,
	|	НачисленныйУдержанныйНДФЛ.Документ,
	|	НачисленныйУдержанныйНДФЛ.ДатаВыплаты,
	|	НачисленныйУдержанныйНДФЛ.Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане,
	|	УплаченныйНДФЛ.Ставка,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА УплаченныйНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА УплаченныйНДФЛ.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ, 0)),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК УплаченныйНДФЛ
	|ГДЕ
	|	УплаченныйНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане,
	|	УплаченныйНДФЛ.Ставка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	NULL,
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане,
	|	NULL,
	|	СУММА(ЕСТЬNULL(УплаченныйНДФЛ.СуммаНачальныйОстаток, 0)),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, МЕСЯЦ, , ) КАК УплаченныйНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	NULL,
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане,
	|	NULL,
	|	СУММА(ЕСТЬNULL(УплаченныйНДФЛ.СуммаКонечныйОстаток, 0)),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, МЕСЯЦ, , ) КАК УплаченныйНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УплаченныйНДФЛ.Период, МЕСЯЦ),
	|	УплаченныйНДФЛ.Организация.ГоловнаяОрганизация,
	|	УплаченныйНДФЛ.Организация,
	|	УплаченныйНДФЛ.ФизическоеЛицо,
	|	УплаченныйНДФЛ.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолныеСведенияНДФЛ.ВидЗаписи КАК ВидЗаписи,
	|	ПолныеСведенияНДФЛ.Период КАК Период,
	|	ПолныеСведенияНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПолныеСведенияНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ПолныеСведенияНДФЛ.Организация КАК Организация,
	|	ПолныеСведенияНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПолныеСведенияНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПолныеСведенияНДФЛ.Ставка КАК Ставка,
	|	СУММА(ПолныеСведенияНДФЛ.Доход) КАК Доход,
	|	СУММА(ПолныеСведенияНДФЛ.Вычет) КАК Вычет,
	|	СУММА(ПолныеСведенияНДФЛ.ДоходМатпомощь) КАК ДоходМатпомощь,
	|	СУММА(ПолныеСведенияНДФЛ.ВычетМатпомощь) КАК ВычетМатпомощь,
	|	СУММА(ПолныеСведенияНДФЛ.ИмущественныйВычет) КАК ИмущественныйВычет,
	|	СУММА(ПолныеСведенияНДФЛ.СтандартныйВычет) КАК СтандартныйВычет,
	|	СУММА(ПолныеСведенияНДФЛ.СуммаНалога) КАК СуммаНалога,
	|	ПолныеСведенияНДФЛ.Документ КАК Документ,
	|	ПолныеСведенияНДФЛ.ДатаВыплаты КАК ДатаВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ДокументОснование,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка.Дата КАК ВедомостьДатаВыплаты,
	|	ПолныеСведенияНДФЛ.Подразделение
	|{ВЫБРАТЬ
	|	ВидЗаписи,
	|	Период,
	|	МесяцНалоговогоПериода,
	|	ГоловнаяОрганизация.*,
	|	Организация.*,
	|	ФизическоеЛицо.*,
	|	РегистрацияВНалоговомОргане.*,
	|	Ставка,
	|	Доход,
	|	Вычет,
	|	ДоходМатпомощь,
	|	ВычетМатпомощь,
	|	ИмущественныйВычет,
	|	СтандартныйВычет,
	|	СуммаНалога,
	|	Документ,
	|	ДатаВыплаты}
	|ИЗ
	|	ВТПолныеСведенияНДФЛ КАК ПолныеСведенияНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	|		ПО ПолныеСведенияНДФЛ.Документ = ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка
	|			И ПолныеСведенияНДФЛ.ФизическоеЛицо = ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ФизическоеЛицо
	|			И ПолныеСведенияНДФЛ.СуммаНалога = ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Сумма
	|ГДЕ
	|	ПолныеСведенияНДФЛ.ВидЗаписи <> 1
	|	И ПолныеСведенияНДФЛ.ВидЗаписи <> 5
	|	И ТИПЗНАЧЕНИЯ(ПолныеСведенияНДФЛ.Документ) <> ТИП(Документ.Отпуск)
	|	И ТИПЗНАЧЕНИЯ(ПолныеСведенияНДФЛ.Документ) <> ТИП(Документ.БольничныйЛист)
	|{ГДЕ
	|	ПолныеСведенияНДФЛ.ВидЗаписи,
	|	ПолныеСведенияНДФЛ.Период,
	|	ПолныеСведенияНДФЛ.МесяцНалоговогоПериода,
	|	ПолныеСведенияНДФЛ.ГоловнаяОрганизация.*,
	|	ПолныеСведенияНДФЛ.Организация.*,
	|	ПолныеСведенияНДФЛ.ФизическоеЛицо.*,
	|	ПолныеСведенияНДФЛ.РегистрацияВНалоговомОргане.*,
	|	ПолныеСведенияНДФЛ.Ставка,
	|	ПолныеСведенияНДФЛ.Доход,
	|	ПолныеСведенияНДФЛ.Вычет,
	|	ПолныеСведенияНДФЛ.ДоходМатпомощь,
	|	ПолныеСведенияНДФЛ.ВычетМатпомощь,
	|	ПолныеСведенияНДФЛ.ИмущественныйВычет,
	|	ПолныеСведенияНДФЛ.СтандартныйВычет,
	|	ПолныеСведенияНДФЛ.СуммаНалога,
	|	ПолныеСведенияНДФЛ.Документ,
	|	ПолныеСведенияНДФЛ.ДатаВыплаты}
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолныеСведенияНДФЛ.ВидЗаписи,
	|	ПолныеСведенияНДФЛ.Период,
	|	ПолныеСведенияНДФЛ.МесяцНалоговогоПериода,
	|	ПолныеСведенияНДФЛ.ГоловнаяОрганизация,
	|	ПолныеСведенияНДФЛ.Организация,
	|	ПолныеСведенияНДФЛ.ФизическоеЛицо,
	|	ПолныеСведенияНДФЛ.РегистрацияВНалоговомОргане,
	|	ПолныеСведенияНДФЛ.Ставка,
	|	ПолныеСведенияНДФЛ.Документ,
	|	ПолныеСведенияНДФЛ.ДатаВыплаты,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ДокументОснование,
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка.Дата,
	|	ПолныеСведенияНДФЛ.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТФизическиеЛицаСтатусыНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленныйУдержанныйНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПолныеСведенияНДФЛ";
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоМесяца(ДатаВыплаты)-1));  // Берем предыдущий месяц из-за зарплаты
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(ДатаВыплаты));
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ",УчетНДФЛ.ДатаЗакона285ФЗ());
	Выгрузка = Запрос.Выполнить().Выгрузить();	
	
	ИтоговаяТаблица = Новый ТаблицаЗначений;
	КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	ИтоговаяТаблица.Колонки.Добавить("ДатаВыплаты", 			Новый ОписаниеТипов("Дата", КвалификаторыДаты));
	ИтоговаяТаблица.Колонки.Добавить("ДатаПеречисленияНДФЛ", 	Новый ОписаниеТипов("Дата"));
	ИтоговаяТаблица.Колонки.Добавить("НБ", 						Новый ОписаниеТипов("Число"));
	ИтоговаяТаблица.Колонки.Добавить("Вычет",					Новый ОписаниеТипов("Число"));
	ИтоговаяТаблица.Колонки.Добавить("НДФЛИсчисленный",			Новый ОписаниеТипов("Число"));
	ИтоговаяТаблица.Колонки.Добавить("НДФЛУдержанный",			Новый ОписаниеТипов("Число"));
	ИтоговаяТаблица.Колонки.Добавить("СуммаНДФЛНеудержанного",	Новый ОписаниеТипов("Число"));
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ИтоговаяТаблица.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов(МассивТипов));
	КвалификаторыСтроки = Новый КвалификаторыСтроки(11);
	ИтоговаяТаблица.Колонки.Добавить("ОКТМО", Новый ОписаниеТипов("Строка", КвалификаторыСтроки));
	КвалификаторыСтроки = Новый КвалификаторыСтроки(9);
	ИтоговаяТаблица.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка", КвалификаторыСтроки));
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ИтоговаяТаблица.Колонки.Добавить("ФИО", 					Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ИтоговаяТаблица.Колонки.Добавить("Подразделение",			Новый ОписаниеТипов(МассивТипов));	
	ИтоговаяТаблица.Колонки.Добавить("Документ", 				Документы.ТипВсеСсылки());
	
	ТаблицаПроизводственногоКалендаря = ПолучитьПроизводственныйКалендарь();
	МассивФизЛиц = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Выгрузка.ВыгрузитьКолонку("ФизическоеЛицо"));
	Для Каждого ФизЛицо из МассивФизЛиц Цикл 
		
		ПромежуточныйРезультат = ИтоговаяТаблица.Скопировать();
		ПромежуточныйРезультат.Очистить();
		
		ТаблицаОтбор = Выгрузка.Скопировать(Новый Структура("ФизическоеЛицо",ФизЛицо));		
		ТаблицаОтбор.Свернуть("ВедомостьДатаВыплаты, ВидЗаписи, ГоловнаяОрганизация, ДатаВыплаты, Документ, ДокументОснование, 
		|Организация, Период, РегистрацияВНалоговомОргане, Ставка, ФизическоеЛицо, Подразделение",
		"Вычет, ВычетМатпомощь, Доход, ДоходМатПомощь, ИмущественныйВычет, СтандартныйВычет, СуммаНалога");
		
		ТаблицаДохода = ТаблицаОтбор.Скопировать();
		ТаблицаДохода.Очистить();
		Для Каждого СтрокаДохода Из ТаблицаОтбор Цикл 
			Если СтрокаДохода.Доход<>0 Тогда 
				НоваяСтрока = ТаблицаДохода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДохода);
			КонецЕсли;
		КонецЦикла;
		
		// Добавим документы, по которым нет дохода, но есть налог
		Для Каждого СтрокаДанных Из ТаблицаОтбор Цикл 
			Если СтрокаДанных.СуммаНалога <> 0 И СтрокаДанных.ВидЗаписи = 2 Тогда 
				Документ = СтрокаДанных.Документ;
				НайденныеСтроки = ТаблицаДохода.НайтиСтроки(Новый Структура("Документ",Документ));
				Если НайденныеСтроки.Количество()=0 Тогда 
					НоваяСтрока = ТаблицаДохода.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаДохода Из ТаблицаДохода Цикл 
			НоваяСтрока = ПромежуточныйРезультат.Добавить();
			НоваяСтрока.Документ = СтрокаДохода.Документ;
			НоваяСтрока.НБ = СтрокаДохода.Доход;
			НоваяСтрока.ФИО = СтрокаДохода.ФизическоеЛицо;
			НоваяСтрока.Вычет = СтрокаДохода.ИмущественныйВычет + СтрокаДохода.СтандартныйВычет+СтрокаДохода.ВычетМатпомощь;
			НоваяСтрока.РегистрацияВНалоговомОргане = СтрокаДохода.РегистрацияВНалоговомОргане;
			НоваяСтрока.Подразделение = СтрокаДохода.Подразделение;
		КонецЦикла;		
		
		Для Каждого СтрокаДанных Из ПромежуточныйРезультат Цикл 
			Для Каждого СтрокаОтбора Из ТаблицаОтбор Цикл 
				Если СтрокаОтбора.Документ = СтрокаДанных.Документ И СтрокаОтбора.ВидЗаписи = 2 И СтрокаОтбора.СуммаНалога <> 0 Тогда 
					СтрокаДанных.НДФЛИсчисленный = СтрокаОтбора.СуммаНалога;
					Прервать;
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
		
		Для Каждого СтрокаДанных Из ПромежуточныйРезультат Цикл 
			НайденныеСтроки = ТаблицаОтбор.НайтиСтроки(Новый Структура("ДокументОснование, ВидЗаписи", СтрокаДанных.Документ, 3));
			Если НайденныеСтроки.Количество()>0 Тогда 
				СтрокаДанных.НДФЛУдержанный = НайденныеСтроки[0].СуммаНалога;
				СтрокаДанных.ДатаВыплаты = НайденныеСтроки[0].ВедомостьДатаВыплаты;  
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаДанных Из ПромежуточныйРезультат Цикл 
			СтрокаДанных.СуммаНДФЛНеудержанного = СтрокаДанных.НДФЛИсчисленный - СтрокаДанных.НДФЛУдержанный;
		КонецЦикла;
		
		// Дозаполним дату, если она не заполнена		
		Для Каждого СтрокаДанных  Из ПромежуточныйРезультат Цикл 
			Если Не ЗначениеЗаполнено(СтрокаДанных.ДатаВыплаты) И (ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.Премия") 
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.БольничныйЛист") 
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.Увольнение")
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.РазовоеНачисление")
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.ОплатаПоСреднемуЗаработку")
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.МатериальнаяПомощь")
				ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.Отпуск")) Тогда 
				СтрокаДанных.ДатаВыплаты = СтрокаДанных.Документ.ПланируемаяДатаВыплаты;
			//ИначеЕсли Не ЗначениеЗаполнено(СтрокаДанных.ДатаВыплаты) И ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.ДоходВНатуральнойФорме") Тогда 
			//	СтрокаДанных.ДатаВыплаты = СтрокаДанных.Документ.ДатаПолученияДохода;
			ИначеЕсли Не ЗначениеЗаполнено(СтрокаДанных.ДатаВыплаты) И (ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.НачислениеЗарплаты") ИЛИ ТипЗнч(СтрокаДанных.Документ) = Тип("ДокументСсылка.ДоходВНатуральнойФорме")) Тогда 
				СтрокаДанных.ДатаВыплаты = ОпределитьДатуВыплатыНачисленияЗарплаты(СтрокаДанных.Документ.МесяцНачисления, ТаблицаПроизводственногоКалендаря, СтрокаДанных.Документ);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаДанных Из ПромежуточныйРезультат Цикл 
			НоваяСтрокаИтог = ИтоговаяТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаИтог, СтрокаДанных);
			Если ЗначениеЗаполнено(СтрокаДанных.РегистрацияВНалоговомОргане) Тогда 
				НоваяСтрокаИтог.ОКТМО	= СтрокаДанных.РегистрацияВНалоговомОргане.КодПоОКТМО;
				НоваяСтрокаИтог.КПП		= СтрокаДанных.РегистрацияВНалоговомОргане.КПП;
			КонецЕсли;
		КонецЦикла;	
		
	КонецЦикла;
	
	ТаблицаНаОтбор = ИтоговаяТаблица.Скопировать(,"ДатаВыплаты,НДФЛИсчисленный,ФИО,РегистрацияВНалоговомОргане,Подразделение, ОКТМО,КПП");
	ЗапросОтбор = Новый Запрос();
	ЗапросОтбор.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.ДатаВыплаты КАК ДАТА) КАК ДатаВыплаты,
	|	ВЫРАЗИТЬ(Таблица.НДФЛИсчисленный КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(Таблица.ФИО КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
	|	Таблица.РегистрацияВНалоговомОргане,
	|	Таблица.Подразделение,
	|	Таблица.ОКТМО,
	|	Таблица.КПП
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.ДатаВыплаты,
	|	СУММА(ВТДанные.Сумма) КАК Сумма,
	|	ВТДанные.ФизическоеЛицо,
	|	ВТДанные.РегистрацияВНалоговомОргане,
	|	ВТДанные.Подразделение,
	|	ВТДанные.ОКТМО КАК ОКТМО,
	|	ВТДанные.КПП КАК КПП,
	|	ВТДанные.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|ГДЕ
	|	ВТДанные.ДатаВыплаты МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанные.ФизическоеЛицо,
	|	ВТДанные.РегистрацияВНалоговомОргане,
	|	ВТДанные.Подразделение,
	|	ВТДанные.ДатаВыплаты,
	|	ВТДанные.ОКТМО,
	|	ВТДанные.КПП
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицоНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанные";
	ЗапросОтбор.УстановитьПараметр("Таблица",ТаблицаНаОтбор);							
	ЗапросОтбор.УстановитьПараметр("НачалоПериода",НачалоДня(ДатаВыплаты));
	ЗапросОтбор.УстановитьПараметр("КонецПериода",КонецДня(ДатаВыплаты));	
	
	ТаблицаВыгрузка = ЗапросОтбор.Выполнить().Выгрузить();
	
	Возврат ТаблицаВыгрузка;
	
КонецФункции

&НаСервере
Функция ПолучитьПроизводственныйКалендарь()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Функция ОпределитьДатуВыплатыНачисленияЗарплаты(Месяц, ТаблицаПроизводственногоКалендаря, Документ)
	ДатаВедомости = НайтиДатуЗарплатыВВедомости(Документ);	
	Если ЗначениеЗаполнено(ДатаВедомости) Тогда 
		Возврат ДатаВедомости;
	КонецЕсли;
	
	ПланируемаяДатаВыплаты = Дата(Год(Месяц),?(Месяц(Месяц)=12,12,Месяц(Месяц)+1),?(Месяц(Месяц)=12,31,5));
	Если Не РабочийДень(ПланируемаяДатаВыплаты, ТаблицаПроизводственногоКалендаря) Тогда 
		Возврат	НайтиРабочийДень(ПланируемаяДатаВыплаты, ТаблицаПроизводственногоКалендаря);
	Иначе 		
		Возврат ПланируемаяДатаВыплаты;
	КонецЕсли;
КонецФункции

&НаСервере
Функция НайтиДатуЗарплатыВВедомости(Документ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК ВедомостьНаВыплатуЗарплатыВБанкНДФЛ
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВБанкНДФЛ.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование",Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Дата;	
КонецФункции

&НаСервере
Функция НайтиРабочийДень(Дата, ТаблицаПроизводственногоКалендаря)
	ПроверяемаяДата = НачалоДня(НачалоДня(Дата)-1);
	Если Не РабочийДень(ПроверяемаяДата, ТаблицаПроизводственногоКалендаря) Тогда 
		НайтиРабочийДень(ПроверяемаяДата, ТаблицаПроизводственногоКалендаря);
	КонецЕсли;
	
	Возврат ПроверяемаяДата;
КонецФункции

&НаСервере
Функция РабочийДень(Дата, ТаблицаПроизводственногоКалендаря)
	
	НайденныеСтроки = ТаблицаПроизводственногоКалендаря.НайтиСтроки(Новый Структура("Дата",Дата));
	Если НайденныеСтроки.Количество()>0 Тогда 
		Если НайденныеСтроки[0].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий ИЛИ 
			НайденныеСтроки[0].ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда 
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПеречисления(Команда)
	СоздатьПеречисленияНаСервере();
	Сообщить("На каждую дату сделал.");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеречисленияОтпускаБольничные(Команда)
	СоздатьПеречисленияОтпускаБольничныеНаСервере();
	Сообщить("На конец месяца готово.");
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала 		= НачалоДня(Период.ДатаНачала);
	Объект.ДатаОкончания 	= КонецДня(Период.ДатаОкончания);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = ТекущаяДата();
	Объект.ДатаНачала 		= НачалоДня(Дата);
	Объект.ДатаОкончания 	= КонецДня(Дата);
КонецПроцедуры

