
&НаСервере
Процедура СформироватьОтчетНаСервере()
	//ТабличныйДокумент.Очистить();
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	КадроваяИсторияСотрудниковСрезПоследних.Период КАК Период,
	//               |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	//               |	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
	//               |	КадроваяИсторияСотрудниковСрезПоследних.Должность
	//               |ПОМЕСТИТЬ ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ
	//               |ИЗ
	//               |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&ДатаОкончания, Регистратор ССЫЛКА Документ.КадровыйПеревод) КАК КадроваяИсторияСотрудниковСрезПоследних
	//               |ГДЕ
	//               |	КадроваяИсторияСотрудниковСрезПоследних.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	//               |
	//               |ИНДЕКСИРОВАТЬ ПО
	//               |	Сотрудник,
	//               |	Период
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПредыдущееПеремещение.Период КАК Период,
	//               |	ПредыдущееПеремещение.Сотрудник,
	//               |	КадроваяИсторияСотрудников.Должность,
	//               |	КадроваяИсторияСотрудников.Подразделение,
	//               |	ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Период КАК Период1,
	//               |	ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Подразделение КАК Подразделение1,
	//               |	ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Должность КАК Должность1,
	//               |	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.Значение КАК Оклад,
	//               |	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1.Значение КАК Оклад1,
	//               |	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """") + "" "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """") КАК ФИО
	//               |ИЗ
	//               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |		КадроваяИсторияСотрудников.Период КАК Период,
	//               |		КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник
	//               |	ИЗ
	//               |		РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ КАК ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ
	//               |			ПО КадроваяИсторияСотрудников.Сотрудник = ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Сотрудник
	//               |	ГДЕ
	//               |		КадроваяИсторияСотрудников.Сотрудник В
	//               |				(ВЫБРАТЬ
	//               |					ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Сотрудник
	//               |				ИЗ
	//               |					ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ КАК ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ)
	//               |		И КадроваяИсторияСотрудников.Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК ПредыдущееПеремещение
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ КАК ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1
	//               |			ПО ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Период = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1.Период
	//               |				И ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Сотрудник = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1.Сотрудник
	//               |		ПО ПредыдущееПеремещение.Сотрудник = ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ.Сотрудник
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	//               |		ПО ПредыдущееПеремещение.Сотрудник = КадроваяИсторияСотрудников.Сотрудник
	//               |			И ПредыдущееПеремещение.Период = КадроваяИсторияСотрудников.Период
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников
	//               |		ПО ПредыдущееПеремещение.Период = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.Период
	//               |			И ПредыдущееПеремещение.Сотрудник = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.Сотрудник
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаОкончания, ) КАК ФИОФизическихЛицСрезПоследних
	//               |		ПО ПредыдущееПеремещение.Сотрудник.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
	//               |ГДЕ
	//               |	(ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.Показатель.Наименование = ""Оклад""
	//               |			ИЛИ ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.Показатель ЕСТЬ NULL )
	//               |	И (ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1.Показатель.Наименование = ""Оклад""
	//               |			ИЛИ ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников1.Показатель ЕСТЬ NULL )
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Период1,
	//               |	ФИО
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |УНИЧТОЖИТЬ ВТ_ПЕРЕМЕЩЕННЫЕ_СОТРУДНИКИ";
	//Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	//Запрос.УстановитьПараметр("ДатаОкончания",Период.ДатаОкончания);
	//Результат = Запрос.Выполнить();
	//Если Не Результат.Пустой() Тогда 
	//	Выборка = Результат.Выбрать();
	//	ОбъектОтчета = РеквизитФормыВЗначение("Отчет");
	//	Если БезОклада Тогда 
	//		Макет = ОбъектОтчета.ПолучитьМакет("ПереводимыеСотрудники");
	//	ИначеЕсли сОкладом Тогда  
	//		Макет = ОбъектОтчета.ПолучитьМакет("ПереводимыеСотрудникиОклад");
	//	КонецЕсли;
	//	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	//	ОбластьШапка		= Макет.ПолучитьОбласть("Шапка");
	//	ОбластьСтрока		= Макет.ПолучитьОбласть("СтрокаОтчета");
	//	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	//	ТабличныйДокумент.Вывести(ОбластьШапка);
	//	НомерПП = 1;
	//	Пока Выборка.Следующий() Цикл 
	//		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Выборка);
	//		ОбластьСтрока.Параметры.НомерПП			= НомерПП;
	//		ОбластьСтрока.Параметры.ТабНомер 		= Выборка.Сотрудник.Код;
	//		ОбластьСтрока.Параметры.ДатаРождения 	= Выборка.Сотрудник.ФизическоеЛицо.ДатаРождения;
	//		ТабличныйДокумент.Вывести(ОбластьСтрока);
	//		НомерПП = НомерПП + 1;
	//	КонецЦикла;
	//Иначе 
	//	ТабличныйДокумент.Очистить();
	//КонецЕсли;
	
	ТабличныйДокумент.Очистить();
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");
	ОбъектОтчет.СформироватьОтчет(Период.ДатаНачала, Период.ДатаОкончания, ТабличныйДокумент, БезОклада, сОкладом);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура БезОкладаПриИзменении(Элемент)
	сОкладом =Ложь;
	БезОклада = Истина;
КонецПроцедуры

&НаКлиенте
Процедура сОкладомПриИзменении(Элемент)
	сОкладом = Истина;
	БезОклада = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БезОклада = Истина;
КонецПроцедуры
