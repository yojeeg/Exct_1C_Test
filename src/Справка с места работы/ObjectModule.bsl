Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

//Создает в таблице команд новую строку

Функция ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда. Представление = Представление;
	НоваяКоманда. Идентификатор= Идентификатор;
	НоваяКоманда. Использование= Использование;
	НоваяКоманда. ПоказыватьОповещение= ПоказыватьОповещение;
	НоваяКоманда. Модификатор= Модификатор;
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Справочник.Сотрудники");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", " Справка с места работы (внеш)"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", " Справка с места работы (внеш)");//так будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ППФ Справка с места работы", "СправкаСМестаРаботы", "ВызовСерверногоМетода", Истина);
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Макет = ПолучитьМакет("СправкаСМестаРаботы");
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаСМестаРаботы") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"СправкаСМестаРаботы", "Справка с места работы",	СправкаСМестаРаботы(Макет,МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СправкаСМестаРаботы(Макет,МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ДанныеДляПечати = СформироватьДанныеПоСотрудникуИОрганизации(МассивОбъектов[0],МассивОбъектов[0].ФизическоеЛицо, ТекущаяДата());
	
	ДанныеПоПриемуНаРаботу = ПолучитьДанныеОПриеме(МассивОбъектов[0]);
	
	Если ДанныеПоПриемуНаРаботу.Следующий() Тогда 
		МассивПриемов = Новый Массив;
		МассивПриемов.Добавить(ДанныеПоПриемуНаРаботу.Ссылка);
	КонецЕсли;
	
	МассивДанныхЗаполнения = ДанныеДляПечатиТрудовогоДоговора(МассивПриемов);
	
	ТекущееКадровыеДанные = ПолучитьТекущиеКадровыеДанные(МассивОбъектов[0]);
	
	ТаблицаПодразделений = ОпределитьПодразделение(ТекущееКадровыеДанные.Подразделение);
	ПодразделениеВПадеже = "";
	
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделений Цикл 
		Если СтрокаПодразделения.Свойство.Заголовок = "Родительный падеж" Тогда 
			ПодразделениеВПадеже=ПодразделениеВПадеже + СокрЛП(СтрокаПодразделения.Значение) + " ";
		КонецЕсли;
	КонецЦикла;	
	
	Организация = МассивДанныхЗаполнения[0].Организация;
	
	МассивДляКИ = Новый Массив;
	МассивДляКИ.Очистить();
	МассивДляКИ.Добавить(Организация);
	
	ФаксОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивДляКИ,,Справочники.ВидыКонтактнойИнформации.ФаксОрганизации);
	Если ФаксОрганизации.Количество() <> 0 Тогда 
		ФаксОрганизации = ФаксОрганизации[0].Представление;
	Иначе 
		ФаксОрганизации = "";
	КонецЕсли;
	
	ТелефонОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивДляКИ,,Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	Если ТелефонОрганизации.Количество() <> 0 Тогда 
		ТелефонОрганизации = ТелефонОрганизации[0].Представление;
	Иначе 
		ТелефонОрганизации = "";
	КонецЕсли;	
	
	РезультатСклонения = "";
	Если ФизическиеЛицаЗарплатаКадры.Просклонять(МассивОбъектов[0].Наименование, 3, РезультатСклонения, МассивОбъектов[0].ФизическоеЛицо.Пол) Тогда
		ОбластьШапка.Параметры.ФИО	= РезультатСклонения
	КонецЕсли;
	
	ТаблицаДолжностей = ОпределитьДолжность(ТекущееКадровыеДанные.Должность);
	// Параметр ДолжностьПодразделение
	Должность = "";
	Для Каждого СтрокаДолжности Из ТаблицаДолжностей Цикл 
		Если СтрокаДолжности.Свойство.Заголовок = "Родительный падеж" Тогда 
			Должность=СокрЛП(СтрокаДолжности.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ОбластьШапка.Параметры.Заполнить(ДанныеДляПечати);	
	ОбластьШапка.Параметры.Заполнить(МассивДанныхЗаполнения[0]);	
	ОбластьШапка.Параметры.ДатаРождения 		= Формат(ДанныеДляПечати.ДатаРождения, "ДЛФ=Д");
	ОбластьШапка.Параметры.ДатаВыдачиСправки 	= ТекущаяДата();
	ОбластьШапка.Параметры.Организация 			= Организация.НаименованиеСокращенное;
	ОбластьШапка.Параметры.Должность 			= Должность;
	ОбластьШапка.Параметры.СуммаПрописью 		= НРег(ЧислоПрописью(ДанныеДляПечати.Сумма, "НП=Ложь",",,,,,,,,0")); 
	ОбластьШапка.Параметры.Факс 				= ФаксОрганизации;
	ОбластьШапка.Параметры.Телефон 				= ТелефонОрганизации;
	ОбластьШапка.Параметры.Адрес 				= МассивДанныхЗаполнения[0].ОрганизацияАдресФактический;	
	ОбластьШапка.Параметры.Подразделение		= ПодразделениеВПадеже;
	
	ДокументРезультат.Вывести(ОбластьШапка);
	
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ПолучитьТекущиеКадровыеДанные(Сотрудник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность,
	               |	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение
	               |ИЗ
	               |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(, Сотрудник = &Сотрудник) КАК КадроваяИсторияСотрудниковСрезПоследних";
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);				   
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

Функция ОпределитьПодразделение(Подразделение)
	
	ЗапросПоПодразделениям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект,
	|	ДополнительныеСведения.Свойство КАК Свойство,
	|	ДополнительныеСведения.Значение КАК Значение,
	|	""1"" КАК УровеньВложенности
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Ссылка
	|ОБЪЕДИНИТЬ ВСЕ                             	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""2""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодитель
	
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект,
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	""3""
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &СсылкаРодительРодитель";
	ЗапросПоПодразделениям.Текст = ТекстЗапроса;
	ЗапросПоПодразделениям.УстановитьПараметр("Ссылка",Подразделение);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодитель",Подразделение.Родитель);
	ЗапросПоПодразделениям.УстановитьПараметр("СсылкаРодительРодитель",Подразделение.Родитель.Родитель);
	
	ВыгрузкаПодразделений = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			
	Возврат ВыгрузкаПодразделений;
	
КонецФункции

Функция ОпределитьДолжность(Должность)
	
	ЗапросПоДолжностям = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДополнительныеСведения.Объект,
	               |	ДополнительныеСведения.Свойство КАК Свойство,
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Объект = &Объект";
	ЗапросПоДолжностям.Текст = ТекстЗапроса;
	ЗапросПоДолжностям.УстановитьПараметр("Объект",Должность);
	
	ВыгрузкаДолжностей = ЗапросПоДолжностям.Выполнить().Выгрузить();
		
	Возврат ВыгрузкаДолжностей;	
	
КонецФункции

Функция ПолучитьДанныеОПриеме(Сотрудник)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриемНаРаботу.Ссылка,
	               |	ПриемНаРаботу.ДатаПриема
	               |ИЗ
	               |	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	               |ГДЕ
	               |	ПриемНаРаботу.Сотрудник = &Сотрудник
	               |	И ПриемНаРаботу.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);				   
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка;
КонецФункции

Функция СформироватьДанныеПоСотрудникуИОрганизации(Сотрудник, ФизЛицо, Дата)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Код КАК ТабНомер,
	               |	ДокументыФизическихЛицСрезПоследних.Серия,
	               |	ДокументыФизическихЛицСрезПоследних.Номер,
	               |	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
	               |	ДокументыФизическихЛицСрезПоследних.КемВыдан,
	               |	ЕСТЬNULL(ФизическиеЛица.Ссылка.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРождения,
	               |	ЕСТЬNULL(ФизическиеЛица.Ссылка.ИНН, """") КАК ИНН,
	               |	ЕСТЬNULL(ФизическиеЛица.Ссылка.СтраховойНомерПФР, """") КАК СтраховойНомерПФР,
	               |	ЕСТЬNULL(ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Значение, 0) КАК Сумма
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	               |				&ДатаДокумента,
	               |				Физлицо = &ФизЛицо
	               |					И ВидДокумента = &ВидДокумента) КАК ДокументыФизическихЛицСрезПоследних
	               |		ПО Сотрудники.ФизическоеЛицо = ДокументыФизическихЛицСрезПоследних.Физлицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО Сотрудники.ФизическоеЛицо = ФизическиеЛица.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.СрезПоследних(&ДатаДокумента, Показатель = ЗНАЧЕНИЕ(СПравочник.ПоказателиРасчетаЗарплаты.Оклад)) КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних
	               |		ПО Сотрудники.Ссылка = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Сотрудник
	               |ГДЕ
	               |	Сотрудники.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("ДатаДокумента",КонецДня(Дата));
	Запрос.УстановитьПараметр("ФизЛицо",ФизЛицо);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ВидДокумента",Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	МассивОкладов = Новый Массив;
	МассивОкладов.Добавить(ПланыВидовРасчета.Начисления.НайтиПоНаименованию("Оплата по окладу"));
	МассивОкладов.Добавить(ПланыВидовРасчета.Начисления.НайтиПоКоду("ОКЛЧС"));
	Запрос.УстановитьПараметр("Начисление",МассивОкладов);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	

КонецФункции

Функция ДанныеДляПечатиТрудовогоДоговора(МассивОбъектов)
	
	МассивПараметров = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемНаРаботу.Номер КАК ПриказОПриемеНомер,
		|	ПриемНаРаботу.Дата КАК ПриказОПриемеДата,
		|	ПриемНаРаботу.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ПриемНаРаботу.Организация.НаименованиеСокращенное КАК ОрганизацияНаименованиеСокращенное,
		|	ПриемНаРаботу.Сотрудник,
		|	ПриемНаРаботу.Должность,
		|	ПриемНаРаботу.Подразделение,
		|	ПриемНаРаботу.ВидЗанятости,
		|	ПриемНаРаботу.ТрудовойДоговорНомер,
		|	ПриемНаРаботу.ТрудовойДоговорДата,
		|	ПриемНаРаботу.Руководитель,
		|	ПриемНаРаботу.ДолжностьРуководителя,
		|	ПриемНаРаботу.ДатаПриема,
		|	ПриемНаРаботу.Ссылка,
		|	ПриемНаРаботу.Организация,
		|	ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора,
		|	ПриемНаРаботу.ДлительностьИспытательногоСрока
		|ПОМЕСТИТЬ ВТДанныеПриказаОПриеме
		|ИЗ
		|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
		|ГДЕ
		|	ПриемНаРаботу.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДанныеПриказаОПриеме.Сотрудник,
		|	ДанныеПриказаОПриеме.ДатаПриема КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТДанныеПриказаОПриеме КАК ДанныеПриказаОПриеме
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеПриказаОПриеме.Руководитель КАК ФизическоеЛицо,
		|	ДанныеПриказаОПриеме.ДатаПриема КАК Период
		|ПОМЕСТИТЬ ВТФизическиеЛицаПериоды
		|ИЗ
		|	ВТДанныеПриказаОПриеме КАК ДанныеПриказаОПриеме";
		
	Запрос.Выполнить();
	
	// Получение кадровых данных сотрудника
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТСотрудникиПериоды");
	КадровыеДанные = "ФИОПолные,ФамилияИО,АдресПоПропискеПредставление,ДокументПредставление,Пол";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	// Получение ФИО руководителей
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛицаПериоды");
	КадровыеДанные = "ФИОПолные,ФамилияИО,Пол";
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПриказаОПриеме.Организация,
		|	ДанныеПриказаОПриеме.ПриказОПриемеДата КАК Период
		|ИЗ
		|	ВТДанныеПриказаОПриеме КАК ДанныеПриказаОПриеме";
	
	СведенияОбОрганизациях = Новый ТаблицаЗначений;
	СведенияОбОрганизациях.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	СведенияОбОрганизациях.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	СведенияОбОрганизациях.Колонки.Добавить("НаименованиеПолное", Новый ОписаниеТипов("Строка"));
	СведенияОбОрганизациях.Колонки.Добавить("АдресЮридический", Новый ОписаниеТипов("Строка"));
	СведенияОбОрганизациях.Колонки.Добавить("АдресФактический", Новый ОписаниеТипов("Строка"));
	СведенияОбОрганизациях.Колонки.Добавить("ОрганизацияГородФактическогоАдреса", Новый ОписаниеТипов("Строка"));
	
	РезультатЗапросаПоШапке = Запрос.Выполнить();
	
	АдресаОрганизаций = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресаОрганизаций(РезультатЗапросаПоШапке.Выгрузить().ВыгрузитьКолонку("Организация"));
	
	Выборка = РезультатЗапросаПоШапке.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаСведенияОбОрганизациях = СведенияОбОрганизациях.Добавить();
		
		Сведения = Новый СписокЗначений;
		Сведения.Добавить("", "НаимЮЛПол");
	
		ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Выборка.Организация, Выборка.Период, Сведения);
		
		НоваяСтрокаСведенияОбОрганизациях.Организация = Выборка.Организация;
		НоваяСтрокаСведенияОбОрганизациях.Период = Выборка.Период;
		НоваяСтрокаСведенияОбОрганизациях.НаименованиеПолное = ОргСведения.НаимЮЛПол;
		
		ОписаниеЮридическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
			АдресаОрганизаций,
			Выборка.Организация,
			Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		НоваяСтрокаСведенияОбОрганизациях.АдресЮридический = ОписаниеЮридическогоАдреса.Представление;
		
		ОписаниеФактическогоАдреса = УправлениеКонтактнойИнформациейЗарплатаКадры.АдресОрганизации(
			АдресаОрганизаций,
			Выборка.Организация,
			Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		НоваяСтрокаСведенияОбОрганизациях.АдресФактический = ОписаниеФактическогоАдреса.Представление;
		НоваяСтрокаСведенияОбОрганизациях.ОрганизацияГородФактическогоАдреса = ОписаниеФактическогоАдреса.Город;
		
	КонецЦИкла;
	
	Запрос.УстановитьПараметр("СведенияОбОрганизациях", СведенияОбОрганизациях);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОбОрганизациях.Период,
		|	СведенияОбОрганизациях.Организация,
		|	СведенияОбОрганизациях.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	СведенияОбОрганизациях.АдресЮридический КАК ОрганизацияАдресЮридический,
		|	СведенияОбОрганизациях.АдресФактический КАК ОрганизацияАдресФактический,
		|	СведенияОбОрганизациях.ОрганизацияГородФактическогоАдреса КАК ОрганизацияГородФактическогоАдреса
		|ПОМЕСТИТЬ ВТДанныеОрганизаций
		|ИЗ
		|	&СведенияОбОрганизациях КАК СведенияОбОрганизациях
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПриказаОПриеме.Ссылка,
		|	ДанныеПриказаОПриеме.ПриказОПриемеНомер,
		|	ДанныеПриказаОПриеме.ПриказОПриемеДата,
		|	ДанныеПриказаОПриеме.Должность,
		|	ДанныеПриказаОПриеме.Подразделение,		
		|	ДанныеПриказаОПриеме.ВидЗанятости,
		|	ДанныеПриказаОПриеме.ТрудовойДоговорНомер,
		|	ДанныеПриказаОПриеме.ТрудовойДоговорДата,
		|	ДанныеПриказаОПриеме.ДлительностьИспытательногоСрока,
		|	ДанныеПриказаОПриеме.ДолжностьРуководителя КАК РуководительДолжность,
		|	ДанныеПриказаОПриеме.ДатаПриема,
		|	ДанныеПриказаОПриеме.ДатаЗавершенияТрудовогоДоговора,
		|	ДанныеОрганизаций.ОрганизацияНаименованиеПолное,
		|	ДанныеОрганизаций.ОрганизацияАдресЮридический,
		|	ДанныеОрганизаций.ОрганизацияАдресФактический,
		|	ДанныеОрганизаций.ОрганизацияГородФактическогоАдреса,
		|	ДанныеОрганизаций.Организация,
		|	КадровыеДанныеФизическихЛиц.ФИОПолные КАК РуководительФИОПолные,
		|	КадровыеДанныеФизическихЛиц.ФамилияИО КАК РуководительФамилияИО,
		|	КадровыеДанныеСотрудников.ФИОПолные КАК ФИОПолные,
		|	КадровыеДанныеСотрудников.ФамилияИО КАК ФамилияИО,
		|	КадровыеДанныеСотрудников.АдресПоПропискеПредставление КАК АдресПоПропискеПредставление,
		|	КадровыеДанныеСотрудников.ДокументПредставление КАК ДокументПредставление
		|ИЗ
		|	ВТДанныеПриказаОПриеме КАК ДанныеПриказаОПриеме
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОрганизаций КАК ДанныеОрганизаций
		|		ПО ДанныеПриказаОПриеме.Организация = ДанныеОрганизаций.Организация
		|			И ДанныеПриказаОПриеме.ПриказОПриемеДата = ДанныеОрганизаций.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц
		|		ПО ДанныеПриказаОПриеме.Руководитель = КадровыеДанныеФизическихЛиц.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ДанныеПриказаОПриеме.Сотрудник = КадровыеДанныеСотрудников.Сотрудник";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыТрудовогоДоговора = ПараметрыТрудовогоДоговора();
		ЗаполнитьЗначенияСвойств(ПараметрыТрудовогоДоговора, Выборка);
					
		Если ЗначениеЗаполнено(ПараметрыТрудовогоДоговора.РуководительФИОПолные) Тогда 
			РезультатСклонения = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(ПараметрыТрудовогоДоговора.РуководительФИОПолные, 4, РезультатСклонения, ПараметрыТрудовогоДоговора.Пол) Тогда
				ПараметрыТрудовогоДоговора.РуководительФИОПолные = РезультатСклонения
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыТрудовогоДоговора.ТрудовойДоговорДата = Формат(Выборка.ТрудовойДоговорДата, "ДЛФ=DD; ДП='""___"" ____________ 20___ г.'");
		ПараметрыТрудовогоДоговора.ПриказОПриемеДата = Формат(Выборка.ПриказОПриемеДата, "ДЛФ=D; ДЛФ=DD");
		ПараметрыТрудовогоДоговора.ДатаПриема = Формат(Выборка.ДатаПриема, "ДЛФ=DD");
		
		Если Выборка.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
			ПараметрыТрудовогоДоговора.ВидЗанятостиПоДоговору = НСтр("ru='основным местом работы'");
		Иначе
			ПараметрыТрудовогоДоговора.ВидЗанятостиПоДоговору = НСтр("ru='местом работы по совместительству'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ДатаЗавершенияТрудовогоДоговора) Тогда
			ПараметрыТрудовогоДоговора.СрокДействияПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='на срок до %1'"),
				Формат(Выборка.ДатаЗавершенияТрудовогоДоговора, "ДЛФ=DD"));
		Иначе
			ПараметрыТрудовогоДоговора.СрокДействияПредставление = НСтр("ru='на неопределенный срок'");
		КонецЕсли;
		
		МассивПараметров.Добавить(ПараметрыТрудовогоДоговора);
		
	КонецЦикла;
	
	Возврат МассивПараметров;
	
КонецФункции

Функция ПараметрыТрудовогоДоговора()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("Ссылка", Неопределено);
	Параметры.Вставить("ПриказОПриемеНомер", "");
	Параметры.Вставить("ПриказОПриемеДата", '00010101');
	Параметры.Вставить("ОрганизацияНаименованиеПолное", "");
	Параметры.Вставить("ОрганизацияАдресЮридический", "");
	Параметры.Вставить("ОрганизацияАдресФактический", "");
	Параметры.Вставить("ОрганизацияГородФактическогоАдреса", "");
	Параметры.Вставить("Сотрудник", Справочники.Сотрудники.ПустаяСсылка());
	Параметры.Вставить("Подразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Параметры.Вставить("Должность", Справочники.Должности.ПустаяСсылка());
	Параметры.Вставить("ВидЗанятостиПоДоговору", "");
	Параметры.Вставить("ТрудовойДоговорНомер", "");
	Параметры.Вставить("ТрудовойДоговорДата", '00010101');
	Параметры.Вставить("СрокДействияПредставление", "");
	Параметры.Вставить("РуководительФамилияИО", "");
	Параметры.Вставить("РуководительФИОПолные", "");
	Параметры.Вставить("РуководительДолжность", Справочники.Должности.ПустаяСсылка());
	Параметры.Вставить("ДатаПриема", '00010101');
	Параметры.Вставить("ФИОПолные", "");
	Параметры.Вставить("ФамилияИО", "");
	Параметры.Вставить("Пол");
	Параметры.Вставить("АдресПоПропискеПредставление", "");
	Параметры.Вставить("ДокументПредставление", "");
	Параметры.Вставить("ДлительностьИспытательногоСрока", "");
	Параметры.Вставить("Организация", "");
	
	
	Возврат Параметры;
	
КонецФункции

